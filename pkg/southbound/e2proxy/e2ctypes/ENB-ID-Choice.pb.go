// Code generated by protoc-gen-go. DO NOT EDIT.
// ENB-ID-Choice.proto is a deprecated file.

package e2ctypes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ENB_ID_ChoiceT struct {
	// Types that are valid to be assigned to Choice:
	//	*ENB_ID_ChoiceT_Enb_IDMacro
	//	*ENB_ID_ChoiceT_Enb_IDShortmacro
	//	*ENB_ID_ChoiceT_Enb_IDLongmacro
	Choice               isENB_ID_ChoiceT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ENB_ID_ChoiceT) Reset()         { *m = ENB_ID_ChoiceT{} }
func (m *ENB_ID_ChoiceT) String() string { return proto.CompactTextString(m) }
func (*ENB_ID_ChoiceT) ProtoMessage()    {}
func (*ENB_ID_ChoiceT) Descriptor() ([]byte, []int) {
	return fileDescriptor_946fa5a3576899c6, []int{0}
}

func (m *ENB_ID_ChoiceT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENB_ID_ChoiceT.Unmarshal(m, b)
}
func (m *ENB_ID_ChoiceT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENB_ID_ChoiceT.Marshal(b, m, deterministic)
}
func (m *ENB_ID_ChoiceT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENB_ID_ChoiceT.Merge(m, src)
}
func (m *ENB_ID_ChoiceT) XXX_Size() int {
	return xxx_messageInfo_ENB_ID_ChoiceT.Size(m)
}
func (m *ENB_ID_ChoiceT) XXX_DiscardUnknown() {
	xxx_messageInfo_ENB_ID_ChoiceT.DiscardUnknown(m)
}

var xxx_messageInfo_ENB_ID_ChoiceT proto.InternalMessageInfo

type isENB_ID_ChoiceT_Choice interface {
	isENB_ID_ChoiceT_Choice()
}

type ENB_ID_ChoiceT_Enb_IDMacro struct {
	Enb_IDMacro *BIT_STRING `protobuf:"bytes,2,opt,name=enb_ID_macro,json=enbIDMacro,proto3,oneof"`
}

type ENB_ID_ChoiceT_Enb_IDShortmacro struct {
	Enb_IDShortmacro *BIT_STRING `protobuf:"bytes,3,opt,name=enb_ID_shortmacro,json=enbIDShortmacro,proto3,oneof"`
}

type ENB_ID_ChoiceT_Enb_IDLongmacro struct {
	Enb_IDLongmacro *BIT_STRING `protobuf:"bytes,4,opt,name=enb_ID_longmacro,json=enbIDLongmacro,proto3,oneof"`
}

func (*ENB_ID_ChoiceT_Enb_IDMacro) isENB_ID_ChoiceT_Choice() {}

func (*ENB_ID_ChoiceT_Enb_IDShortmacro) isENB_ID_ChoiceT_Choice() {}

func (*ENB_ID_ChoiceT_Enb_IDLongmacro) isENB_ID_ChoiceT_Choice() {}

func (m *ENB_ID_ChoiceT) GetChoice() isENB_ID_ChoiceT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

// Deprecated: Do not use.
func (m *ENB_ID_ChoiceT) GetEnb_IDMacro() *BIT_STRING {
	if x, ok := m.GetChoice().(*ENB_ID_ChoiceT_Enb_IDMacro); ok {
		return x.Enb_IDMacro
	}
	return nil
}

// Deprecated: Do not use.
func (m *ENB_ID_ChoiceT) GetEnb_IDShortmacro() *BIT_STRING {
	if x, ok := m.GetChoice().(*ENB_ID_ChoiceT_Enb_IDShortmacro); ok {
		return x.Enb_IDShortmacro
	}
	return nil
}

// Deprecated: Do not use.
func (m *ENB_ID_ChoiceT) GetEnb_IDLongmacro() *BIT_STRING {
	if x, ok := m.GetChoice().(*ENB_ID_ChoiceT_Enb_IDLongmacro); ok {
		return x.Enb_IDLongmacro
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ENB_ID_ChoiceT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ENB_ID_ChoiceT_Enb_IDMacro)(nil),
		(*ENB_ID_ChoiceT_Enb_IDShortmacro)(nil),
		(*ENB_ID_ChoiceT_Enb_IDLongmacro)(nil),
	}
}

func init() {
	proto.RegisterType((*ENB_ID_ChoiceT)(nil), "e2ctypes.ENB_ID_Choice_t")
}

func init() { proto.RegisterFile("ENB-ID-Choice.proto", fileDescriptor_946fa5a3576899c6) }

var fileDescriptor_946fa5a3576899c6 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x76, 0xf5, 0x73, 0xd2,
	0xf5, 0x74, 0xd1, 0x75, 0xce, 0xc8, 0xcf, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x48, 0x35, 0x4a, 0x2e, 0xa9, 0x2c, 0x48, 0x2d, 0x96, 0x12, 0x70, 0xf2, 0x0c, 0x89, 0x0f,
	0x0e, 0x09, 0xf2, 0xf4, 0x73, 0x87, 0xc8, 0x29, 0x3d, 0x67, 0xe4, 0xe2, 0x77, 0xf5, 0x73, 0x8a,
	0xf7, 0x74, 0x89, 0x87, 0xe8, 0x89, 0x2f, 0x11, 0xb2, 0xe1, 0xe2, 0x49, 0xcd, 0x4b, 0x02, 0x09,
	0xe5, 0x26, 0x26, 0x17, 0xe5, 0x4b, 0x30, 0x29, 0x30, 0x6a, 0x70, 0x1b, 0x89, 0xe8, 0xc1, 0x8c,
	0xd1, 0x43, 0x98, 0xe2, 0xc4, 0x24, 0xc1, 0xe8, 0xc1, 0x10, 0xc4, 0x95, 0x9a, 0x97, 0xe4, 0xe9,
	0xe2, 0x0b, 0x52, 0x2d, 0xe4, 0xc6, 0x25, 0x08, 0xd5, 0x5d, 0x9c, 0x91, 0x5f, 0x54, 0x02, 0x31,
	0x82, 0x99, 0xa0, 0x11, 0xfc, 0x60, 0x23, 0x82, 0xe1, 0x5a, 0x84, 0x5c, 0xb8, 0x04, 0xa0, 0xe6,
	0xe4, 0xe4, 0xe7, 0xa5, 0x43, 0x8c, 0x61, 0x21, 0x68, 0x0c, 0x1f, 0xd8, 0x18, 0x1f, 0x98, 0x0e,
	0x27, 0x0e, 0x2e, 0xb6, 0x64, 0xb0, 0xbf, 0x9c, 0x98, 0x77, 0x30, 0x32, 0x26, 0xb1, 0x81, 0x7d,
	0x6d, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x84, 0x2a, 0x54, 0xf6, 0x28, 0x01, 0x00, 0x00,
}
