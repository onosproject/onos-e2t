// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CauseProtocol.proto

package e2ctypes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CauseProtocolT int32

const (
	CauseProtocolT_CauseProtocol_transfer_syntax_error                             CauseProtocolT = 0
	CauseProtocolT_CauseProtocol_abstract_syntax_error_reject                      CauseProtocolT = 1
	CauseProtocolT_CauseProtocol_abstract_syntax_error_ignore_and_notify           CauseProtocolT = 2
	CauseProtocolT_CauseProtocol_message_not_compatible_with_receiver_state        CauseProtocolT = 3
	CauseProtocolT_CauseProtocol_semantic_error                                    CauseProtocolT = 4
	CauseProtocolT_CauseProtocol_abstract_syntax_error_falsely_constructed_message CauseProtocolT = 5
	CauseProtocolT_CauseProtocol_unspecified                                       CauseProtocolT = 6
)

var CauseProtocolT_name = map[int32]string{
	0: "CauseProtocol_transfer_syntax_error",
	1: "CauseProtocol_abstract_syntax_error_reject",
	2: "CauseProtocol_abstract_syntax_error_ignore_and_notify",
	3: "CauseProtocol_message_not_compatible_with_receiver_state",
	4: "CauseProtocol_semantic_error",
	5: "CauseProtocol_abstract_syntax_error_falsely_constructed_message",
	6: "CauseProtocol_unspecified",
}

var CauseProtocolT_value = map[string]int32{
	"CauseProtocol_transfer_syntax_error":                             0,
	"CauseProtocol_abstract_syntax_error_reject":                      1,
	"CauseProtocol_abstract_syntax_error_ignore_and_notify":           2,
	"CauseProtocol_message_not_compatible_with_receiver_state":        3,
	"CauseProtocol_semantic_error":                                    4,
	"CauseProtocol_abstract_syntax_error_falsely_constructed_message": 5,
	"CauseProtocol_unspecified":                                       6,
}

func (x CauseProtocolT) String() string {
	return proto.EnumName(CauseProtocolT_name, int32(x))
}

func (CauseProtocolT) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5a6cf6e211dc6c41, []int{0}
}

func init() {
	proto.RegisterEnum("e2ctypes.CauseProtocolT", CauseProtocolT_name, CauseProtocolT_value)
}

func init() { proto.RegisterFile("CauseProtocol.proto", fileDescriptor_5a6cf6e211dc6c41) }

var fileDescriptor_5a6cf6e211dc6c41 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xb1, 0x4a, 0x04, 0x41,
	0x0c, 0x86, 0xf5, 0xd4, 0x43, 0xa6, 0x71, 0x18, 0x2b, 0x41, 0x41, 0xb0, 0x10, 0xae, 0xb8, 0x42,
	0x11, 0x14, 0x04, 0x8b, 0x7b, 0x01, 0xdf, 0x20, 0x64, 0xb3, 0xd9, 0x73, 0x64, 0x77, 0x66, 0x49,
	0xb2, 0xea, 0x3c, 0xb2, 0x6f, 0x21, 0x2b, 0x5a, 0xcc, 0x55, 0xd7, 0x85, 0xf0, 0xfd, 0xe1, 0xcb,
	0xef, 0xce, 0x37, 0x38, 0x29, 0xbf, 0x4a, 0xb6, 0x4c, 0xb9, 0x5f, 0x8f, 0xf3, 0x10, 0x4e, 0xf9,
	0x8e, 0xac, 0x8c, 0xac, 0xab, 0xef, 0x85, 0x3b, 0xab, 0x08, 0xb0, 0x70, 0xeb, 0x6e, 0x76, 0x56,
	0x82, 0x49, 0x3b, 0x16, 0xd0, 0x92, 0x0c, 0xbf, 0x80, 0x45, 0xb2, 0xf8, 0x83, 0xb0, 0x76, 0xab,
	0x1a, 0xc4, 0x46, 0x4d, 0x90, 0xac, 0x02, 0x41, 0xf8, 0x9d, 0xc9, 0xfc, 0x61, 0x78, 0x72, 0x0f,
	0xfb, 0xf0, 0x71, 0x9b, 0xb2, 0x30, 0x60, 0x6a, 0x21, 0x65, 0x8b, 0x5d, 0xf1, 0x8b, 0xf0, 0xec,
	0x1e, 0xeb, 0xe8, 0xc0, 0xaa, 0xb8, 0xe5, 0x99, 0x00, 0xca, 0xc3, 0x88, 0x16, 0x9b, 0x9e, 0xe1,
	0x33, 0xda, 0x1b, 0x08, 0x13, 0xc7, 0x8f, 0xd9, 0xd7, 0xd0, 0xd8, 0x1f, 0x85, 0x6b, 0x77, 0x59,
	0xa7, 0x95, 0x07, 0x4c, 0x16, 0xe9, 0xef, 0x95, 0xe3, 0xb0, 0x71, 0x2f, 0xfb, 0xa8, 0x75, 0xd8,
	0x2b, 0xf7, 0x05, 0x28, 0x27, 0x35, 0x99, 0xc8, 0xb8, 0xfd, 0x37, 0xf1, 0x27, 0xe1, 0xca, 0x5d,
	0xd4, 0x47, 0xa6, 0xa4, 0x23, 0x53, 0xec, 0x22, 0xb7, 0x7e, 0xd9, 0x2c, 0x7f, 0xcb, 0xbf, 0xff,
	0x09, 0x00, 0x00, 0xff, 0xff, 0xeb, 0x0c, 0x8b, 0x30, 0x93, 0x01, 0x00, 0x00,
}
