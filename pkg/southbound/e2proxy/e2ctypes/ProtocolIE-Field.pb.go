// Code generated by protoc-gen-go. DO NOT EDIT.
// ProtocolIE-Field.proto is a deprecated file.

package e2ctypes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Deprecated: Do not use.
type RICindication_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICindication_IEsT_RICrequestID
	//	*RICindication_IEsT_RANfunctionID
	//	*RICindication_IEsT_RICactionID
	//	*RICindication_IEsT_RICindicationSN
	//	*RICindication_IEsT_RICindicationType
	//	*RICindication_IEsT_RICindicationHeader
	//	*RICindication_IEsT_RICindicationMessage
	//	*RICindication_IEsT_RICcallProcessID
	Choice               isRICindication_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RICindication_IEsT) Reset()         { *m = RICindication_IEsT{} }
func (m *RICindication_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICindication_IEsT) ProtoMessage()    {}
func (*RICindication_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{0}
}

func (m *RICindication_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICindication_IEsT.Unmarshal(m, b)
}
func (m *RICindication_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICindication_IEsT.Marshal(b, m, deterministic)
}
func (m *RICindication_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICindication_IEsT.Merge(m, src)
}
func (m *RICindication_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICindication_IEsT.Size(m)
}
func (m *RICindication_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICindication_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICindication_IEsT proto.InternalMessageInfo

func (m *RICindication_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICindication_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICindication_IEsT_Choice interface {
	isRICindication_IEsT_Choice()
}

type RICindication_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type RICindication_IEsT_RANfunctionID struct {
	RANfunctionID int64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

type RICindication_IEsT_RICactionID struct {
	RICactionID int64 `protobuf:"varint,5,opt,name=RICactionID,proto3,oneof"`
}

type RICindication_IEsT_RICindicationSN struct {
	RICindicationSN int64 `protobuf:"varint,6,opt,name=RICindicationSN,proto3,oneof"`
}

type RICindication_IEsT_RICindicationType struct {
	RICindicationType RICindicationType `protobuf:"varint,7,opt,name=RICindicationType,proto3,enum=e2ctypes.RICindicationType,oneof"`
}

type RICindication_IEsT_RICindicationHeader struct {
	RICindicationHeader string `protobuf:"bytes,8,opt,name=RICindicationHeader,proto3,oneof"`
}

type RICindication_IEsT_RICindicationMessage struct {
	RICindicationMessage string `protobuf:"bytes,9,opt,name=RICindicationMessage,proto3,oneof"`
}

type RICindication_IEsT_RICcallProcessID struct {
	RICcallProcessID string `protobuf:"bytes,10,opt,name=RICcallProcessID,proto3,oneof"`
}

func (*RICindication_IEsT_RICrequestID) isRICindication_IEsT_Choice() {}

func (*RICindication_IEsT_RANfunctionID) isRICindication_IEsT_Choice() {}

func (*RICindication_IEsT_RICactionID) isRICindication_IEsT_Choice() {}

func (*RICindication_IEsT_RICindicationSN) isRICindication_IEsT_Choice() {}

func (*RICindication_IEsT_RICindicationType) isRICindication_IEsT_Choice() {}

func (*RICindication_IEsT_RICindicationHeader) isRICindication_IEsT_Choice() {}

func (*RICindication_IEsT_RICindicationMessage) isRICindication_IEsT_Choice() {}

func (*RICindication_IEsT_RICcallProcessID) isRICindication_IEsT_Choice() {}

func (m *RICindication_IEsT) GetChoice() isRICindication_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICindication_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*RICindication_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *RICindication_IEsT) GetRANfunctionID() int64 {
	if x, ok := m.GetChoice().(*RICindication_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

func (m *RICindication_IEsT) GetRICactionID() int64 {
	if x, ok := m.GetChoice().(*RICindication_IEsT_RICactionID); ok {
		return x.RICactionID
	}
	return 0
}

func (m *RICindication_IEsT) GetRICindicationSN() int64 {
	if x, ok := m.GetChoice().(*RICindication_IEsT_RICindicationSN); ok {
		return x.RICindicationSN
	}
	return 0
}

func (m *RICindication_IEsT) GetRICindicationType() RICindicationType {
	if x, ok := m.GetChoice().(*RICindication_IEsT_RICindicationType); ok {
		return x.RICindicationType
	}
	return RICindicationType_RICindicationType_report
}

func (m *RICindication_IEsT) GetRICindicationHeader() string {
	if x, ok := m.GetChoice().(*RICindication_IEsT_RICindicationHeader); ok {
		return x.RICindicationHeader
	}
	return ""
}

func (m *RICindication_IEsT) GetRICindicationMessage() string {
	if x, ok := m.GetChoice().(*RICindication_IEsT_RICindicationMessage); ok {
		return x.RICindicationMessage
	}
	return ""
}

func (m *RICindication_IEsT) GetRICcallProcessID() string {
	if x, ok := m.GetChoice().(*RICindication_IEsT_RICcallProcessID); ok {
		return x.RICcallProcessID
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICindication_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICindication_IEsT_RICrequestID)(nil),
		(*RICindication_IEsT_RANfunctionID)(nil),
		(*RICindication_IEsT_RICactionID)(nil),
		(*RICindication_IEsT_RICindicationSN)(nil),
		(*RICindication_IEsT_RICindicationType)(nil),
		(*RICindication_IEsT_RICindicationHeader)(nil),
		(*RICindication_IEsT_RICindicationMessage)(nil),
		(*RICindication_IEsT_RICcallProcessID)(nil),
	}
}

// Deprecated: Do not use.
type E2SetupRequestIEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*E2SetupRequestIEsT_GlobalE2Node_ID
	//	*E2SetupRequestIEsT_RANfunctions_List
	Choice               isE2SetupRequestIEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *E2SetupRequestIEsT) Reset()         { *m = E2SetupRequestIEsT{} }
func (m *E2SetupRequestIEsT) String() string { return proto.CompactTextString(m) }
func (*E2SetupRequestIEsT) ProtoMessage()    {}
func (*E2SetupRequestIEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{1}
}

func (m *E2SetupRequestIEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_E2SetupRequestIEsT.Unmarshal(m, b)
}
func (m *E2SetupRequestIEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_E2SetupRequestIEsT.Marshal(b, m, deterministic)
}
func (m *E2SetupRequestIEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_E2SetupRequestIEsT.Merge(m, src)
}
func (m *E2SetupRequestIEsT) XXX_Size() int {
	return xxx_messageInfo_E2SetupRequestIEsT.Size(m)
}
func (m *E2SetupRequestIEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_E2SetupRequestIEsT.DiscardUnknown(m)
}

var xxx_messageInfo_E2SetupRequestIEsT proto.InternalMessageInfo

func (m *E2SetupRequestIEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *E2SetupRequestIEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isE2SetupRequestIEsT_Choice interface {
	isE2SetupRequestIEsT_Choice()
}

type E2SetupRequestIEsT_GlobalE2Node_ID struct {
	GlobalE2Node_ID *GlobalE2Node_IDT `protobuf:"bytes,3,opt,name=GlobalE2node_ID,json=GlobalE2nodeID,proto3,oneof"`
}

type E2SetupRequestIEsT_RANfunctions_List struct {
	RANfunctions_List *RANfunctions_ListT `protobuf:"bytes,4,opt,name=RANfunctions_List,json=RANfunctionsList,proto3,oneof"`
}

func (*E2SetupRequestIEsT_GlobalE2Node_ID) isE2SetupRequestIEsT_Choice() {}

func (*E2SetupRequestIEsT_RANfunctions_List) isE2SetupRequestIEsT_Choice() {}

func (m *E2SetupRequestIEsT) GetChoice() isE2SetupRequestIEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *E2SetupRequestIEsT) GetGlobalE2Node_ID() *GlobalE2Node_IDT {
	if x, ok := m.GetChoice().(*E2SetupRequestIEsT_GlobalE2Node_ID); ok {
		return x.GlobalE2Node_ID
	}
	return nil
}

func (m *E2SetupRequestIEsT) GetRANfunctions_List() *RANfunctions_ListT {
	if x, ok := m.GetChoice().(*E2SetupRequestIEsT_RANfunctions_List); ok {
		return x.RANfunctions_List
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*E2SetupRequestIEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*E2SetupRequestIEsT_GlobalE2Node_ID)(nil),
		(*E2SetupRequestIEsT_RANfunctions_List)(nil),
	}
}

// Deprecated: Do not use.
type ErrorIndication_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*ErrorIndication_IEsT_RICrequestID
	//	*ErrorIndication_IEsT_RANfunctionID
	//	*ErrorIndication_IEsT_Cause
	//	*ErrorIndication_IEsT_CriticalityDiagnostics
	Choice               isErrorIndication_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ErrorIndication_IEsT) Reset()         { *m = ErrorIndication_IEsT{} }
func (m *ErrorIndication_IEsT) String() string { return proto.CompactTextString(m) }
func (*ErrorIndication_IEsT) ProtoMessage()    {}
func (*ErrorIndication_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{2}
}

func (m *ErrorIndication_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorIndication_IEsT.Unmarshal(m, b)
}
func (m *ErrorIndication_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorIndication_IEsT.Marshal(b, m, deterministic)
}
func (m *ErrorIndication_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorIndication_IEsT.Merge(m, src)
}
func (m *ErrorIndication_IEsT) XXX_Size() int {
	return xxx_messageInfo_ErrorIndication_IEsT.Size(m)
}
func (m *ErrorIndication_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorIndication_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorIndication_IEsT proto.InternalMessageInfo

func (m *ErrorIndication_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *ErrorIndication_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isErrorIndication_IEsT_Choice interface {
	isErrorIndication_IEsT_Choice()
}

type ErrorIndication_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type ErrorIndication_IEsT_RANfunctionID struct {
	RANfunctionID uint64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

type ErrorIndication_IEsT_Cause struct {
	Cause *CauseT `protobuf:"bytes,5,opt,name=Cause,proto3,oneof"`
}

type ErrorIndication_IEsT_CriticalityDiagnostics struct {
	CriticalityDiagnostics *CriticalityDiagnosticsT `protobuf:"bytes,6,opt,name=CriticalityDiagnostics,proto3,oneof"`
}

func (*ErrorIndication_IEsT_RICrequestID) isErrorIndication_IEsT_Choice() {}

func (*ErrorIndication_IEsT_RANfunctionID) isErrorIndication_IEsT_Choice() {}

func (*ErrorIndication_IEsT_Cause) isErrorIndication_IEsT_Choice() {}

func (*ErrorIndication_IEsT_CriticalityDiagnostics) isErrorIndication_IEsT_Choice() {}

func (m *ErrorIndication_IEsT) GetChoice() isErrorIndication_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *ErrorIndication_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*ErrorIndication_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *ErrorIndication_IEsT) GetRANfunctionID() uint64 {
	if x, ok := m.GetChoice().(*ErrorIndication_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

func (m *ErrorIndication_IEsT) GetCause() *CauseT {
	if x, ok := m.GetChoice().(*ErrorIndication_IEsT_Cause); ok {
		return x.Cause
	}
	return nil
}

func (m *ErrorIndication_IEsT) GetCriticalityDiagnostics() *CriticalityDiagnosticsT {
	if x, ok := m.GetChoice().(*ErrorIndication_IEsT_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ErrorIndication_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ErrorIndication_IEsT_RICrequestID)(nil),
		(*ErrorIndication_IEsT_RANfunctionID)(nil),
		(*ErrorIndication_IEsT_Cause)(nil),
		(*ErrorIndication_IEsT_CriticalityDiagnostics)(nil),
	}
}

// Deprecated: Do not use.
type RICsubscriptionResponse_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICsubscriptionResponse_IEsT_RICrequestID
	//	*RICsubscriptionResponse_IEsT_RANfunctionID
	//	*RICsubscriptionResponse_IEsT_RICaction_Admitted_List
	//	*RICsubscriptionResponse_IEsT_RICaction_NotAdmitted_List
	Choice               isRICsubscriptionResponse_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *RICsubscriptionResponse_IEsT) Reset()         { *m = RICsubscriptionResponse_IEsT{} }
func (m *RICsubscriptionResponse_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICsubscriptionResponse_IEsT) ProtoMessage()    {}
func (*RICsubscriptionResponse_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{3}
}

func (m *RICsubscriptionResponse_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICsubscriptionResponse_IEsT.Unmarshal(m, b)
}
func (m *RICsubscriptionResponse_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICsubscriptionResponse_IEsT.Marshal(b, m, deterministic)
}
func (m *RICsubscriptionResponse_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICsubscriptionResponse_IEsT.Merge(m, src)
}
func (m *RICsubscriptionResponse_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICsubscriptionResponse_IEsT.Size(m)
}
func (m *RICsubscriptionResponse_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICsubscriptionResponse_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICsubscriptionResponse_IEsT proto.InternalMessageInfo

func (m *RICsubscriptionResponse_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICsubscriptionResponse_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICsubscriptionResponse_IEsT_Choice interface {
	isRICsubscriptionResponse_IEsT_Choice()
}

type RICsubscriptionResponse_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type RICsubscriptionResponse_IEsT_RANfunctionID struct {
	RANfunctionID int64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

type RICsubscriptionResponse_IEsT_RICaction_Admitted_List struct {
	RICaction_Admitted_List *RICaction_Admitted_ListT `protobuf:"bytes,5,opt,name=RICaction_Admitted_List,json=RICactionAdmittedList,proto3,oneof"`
}

type RICsubscriptionResponse_IEsT_RICaction_NotAdmitted_List struct {
	RICaction_NotAdmitted_List *RICaction_NotAdmitted_ListT `protobuf:"bytes,6,opt,name=RICaction_NotAdmitted_List,json=RICactionNotAdmittedList,proto3,oneof"`
}

func (*RICsubscriptionResponse_IEsT_RICrequestID) isRICsubscriptionResponse_IEsT_Choice() {}

func (*RICsubscriptionResponse_IEsT_RANfunctionID) isRICsubscriptionResponse_IEsT_Choice() {}

func (*RICsubscriptionResponse_IEsT_RICaction_Admitted_List) isRICsubscriptionResponse_IEsT_Choice() {}

func (*RICsubscriptionResponse_IEsT_RICaction_NotAdmitted_List) isRICsubscriptionResponse_IEsT_Choice() {
}

func (m *RICsubscriptionResponse_IEsT) GetChoice() isRICsubscriptionResponse_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICsubscriptionResponse_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*RICsubscriptionResponse_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *RICsubscriptionResponse_IEsT) GetRANfunctionID() int64 {
	if x, ok := m.GetChoice().(*RICsubscriptionResponse_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

func (m *RICsubscriptionResponse_IEsT) GetRICaction_Admitted_List() *RICaction_Admitted_ListT {
	if x, ok := m.GetChoice().(*RICsubscriptionResponse_IEsT_RICaction_Admitted_List); ok {
		return x.RICaction_Admitted_List
	}
	return nil
}

func (m *RICsubscriptionResponse_IEsT) GetRICaction_NotAdmitted_List() *RICaction_NotAdmitted_ListT {
	if x, ok := m.GetChoice().(*RICsubscriptionResponse_IEsT_RICaction_NotAdmitted_List); ok {
		return x.RICaction_NotAdmitted_List
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICsubscriptionResponse_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICsubscriptionResponse_IEsT_RICrequestID)(nil),
		(*RICsubscriptionResponse_IEsT_RANfunctionID)(nil),
		(*RICsubscriptionResponse_IEsT_RICaction_Admitted_List)(nil),
		(*RICsubscriptionResponse_IEsT_RICaction_NotAdmitted_List)(nil),
	}
}

// Deprecated: Do not use.
type RICsubscriptionDeleteResponse_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICsubscriptionDeleteResponse_IEsT_RICrequestID
	//	*RICsubscriptionDeleteResponse_IEsT_RANfunctionID
	Choice               isRICsubscriptionDeleteResponse_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *RICsubscriptionDeleteResponse_IEsT) Reset()         { *m = RICsubscriptionDeleteResponse_IEsT{} }
func (m *RICsubscriptionDeleteResponse_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICsubscriptionDeleteResponse_IEsT) ProtoMessage()    {}
func (*RICsubscriptionDeleteResponse_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{4}
}

func (m *RICsubscriptionDeleteResponse_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICsubscriptionDeleteResponse_IEsT.Unmarshal(m, b)
}
func (m *RICsubscriptionDeleteResponse_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICsubscriptionDeleteResponse_IEsT.Marshal(b, m, deterministic)
}
func (m *RICsubscriptionDeleteResponse_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICsubscriptionDeleteResponse_IEsT.Merge(m, src)
}
func (m *RICsubscriptionDeleteResponse_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICsubscriptionDeleteResponse_IEsT.Size(m)
}
func (m *RICsubscriptionDeleteResponse_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICsubscriptionDeleteResponse_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICsubscriptionDeleteResponse_IEsT proto.InternalMessageInfo

func (m *RICsubscriptionDeleteResponse_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICsubscriptionDeleteResponse_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICsubscriptionDeleteResponse_IEsT_Choice interface {
	isRICsubscriptionDeleteResponse_IEsT_Choice()
}

type RICsubscriptionDeleteResponse_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type RICsubscriptionDeleteResponse_IEsT_RANfunctionID struct {
	RANfunctionID int64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

func (*RICsubscriptionDeleteResponse_IEsT_RICrequestID) isRICsubscriptionDeleteResponse_IEsT_Choice() {
}

func (*RICsubscriptionDeleteResponse_IEsT_RANfunctionID) isRICsubscriptionDeleteResponse_IEsT_Choice() {
}

func (m *RICsubscriptionDeleteResponse_IEsT) GetChoice() isRICsubscriptionDeleteResponse_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICsubscriptionDeleteResponse_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*RICsubscriptionDeleteResponse_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *RICsubscriptionDeleteResponse_IEsT) GetRANfunctionID() int64 {
	if x, ok := m.GetChoice().(*RICsubscriptionDeleteResponse_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICsubscriptionDeleteResponse_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICsubscriptionDeleteResponse_IEsT_RICrequestID)(nil),
		(*RICsubscriptionDeleteResponse_IEsT_RANfunctionID)(nil),
	}
}

// Deprecated: Do not use.
type RICserviceUpdateAcknowledge_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICserviceUpdateAcknowledge_IEsT_RANfunctionsID_List
	//	*RICserviceUpdateAcknowledge_IEsT_RANfunctionsIDcause_List
	Choice               isRICserviceUpdateAcknowledge_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *RICserviceUpdateAcknowledge_IEsT) Reset()         { *m = RICserviceUpdateAcknowledge_IEsT{} }
func (m *RICserviceUpdateAcknowledge_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICserviceUpdateAcknowledge_IEsT) ProtoMessage()    {}
func (*RICserviceUpdateAcknowledge_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{5}
}

func (m *RICserviceUpdateAcknowledge_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICserviceUpdateAcknowledge_IEsT.Unmarshal(m, b)
}
func (m *RICserviceUpdateAcknowledge_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICserviceUpdateAcknowledge_IEsT.Marshal(b, m, deterministic)
}
func (m *RICserviceUpdateAcknowledge_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICserviceUpdateAcknowledge_IEsT.Merge(m, src)
}
func (m *RICserviceUpdateAcknowledge_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICserviceUpdateAcknowledge_IEsT.Size(m)
}
func (m *RICserviceUpdateAcknowledge_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICserviceUpdateAcknowledge_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICserviceUpdateAcknowledge_IEsT proto.InternalMessageInfo

func (m *RICserviceUpdateAcknowledge_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICserviceUpdateAcknowledge_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICserviceUpdateAcknowledge_IEsT_Choice interface {
	isRICserviceUpdateAcknowledge_IEsT_Choice()
}

type RICserviceUpdateAcknowledge_IEsT_RANfunctionsID_List struct {
	RANfunctionsID_List *RANfunctionsID_ListT `protobuf:"bytes,3,opt,name=RANfunctionsID_List,json=RANfunctionsIDList,proto3,oneof"`
}

type RICserviceUpdateAcknowledge_IEsT_RANfunctionsIDcause_List struct {
	RANfunctionsIDcause_List *RANfunctionsIDcause_ListT `protobuf:"bytes,4,opt,name=RANfunctionsIDcause_List,json=RANfunctionsIDcauseList,proto3,oneof"`
}

func (*RICserviceUpdateAcknowledge_IEsT_RANfunctionsID_List) isRICserviceUpdateAcknowledge_IEsT_Choice() {
}

func (*RICserviceUpdateAcknowledge_IEsT_RANfunctionsIDcause_List) isRICserviceUpdateAcknowledge_IEsT_Choice() {
}

func (m *RICserviceUpdateAcknowledge_IEsT) GetChoice() isRICserviceUpdateAcknowledge_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICserviceUpdateAcknowledge_IEsT) GetRANfunctionsID_List() *RANfunctionsID_ListT {
	if x, ok := m.GetChoice().(*RICserviceUpdateAcknowledge_IEsT_RANfunctionsID_List); ok {
		return x.RANfunctionsID_List
	}
	return nil
}

func (m *RICserviceUpdateAcknowledge_IEsT) GetRANfunctionsIDcause_List() *RANfunctionsIDcause_ListT {
	if x, ok := m.GetChoice().(*RICserviceUpdateAcknowledge_IEsT_RANfunctionsIDcause_List); ok {
		return x.RANfunctionsIDcause_List
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICserviceUpdateAcknowledge_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICserviceUpdateAcknowledge_IEsT_RANfunctionsID_List)(nil),
		(*RICserviceUpdateAcknowledge_IEsT_RANfunctionsIDcause_List)(nil),
	}
}

// Deprecated: Do not use.
type RICcontrolAcknowledge_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICcontrolAcknowledge_IEsT_RICrequestID
	//	*RICcontrolAcknowledge_IEsT_RANfunctionID
	//	*RICcontrolAcknowledge_IEsT_RICcallProcessID
	//	*RICcontrolAcknowledge_IEsT_RICcontrolStatus
	//	*RICcontrolAcknowledge_IEsT_RICcontrolOutcome
	Choice               isRICcontrolAcknowledge_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *RICcontrolAcknowledge_IEsT) Reset()         { *m = RICcontrolAcknowledge_IEsT{} }
func (m *RICcontrolAcknowledge_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICcontrolAcknowledge_IEsT) ProtoMessage()    {}
func (*RICcontrolAcknowledge_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{6}
}

func (m *RICcontrolAcknowledge_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICcontrolAcknowledge_IEsT.Unmarshal(m, b)
}
func (m *RICcontrolAcknowledge_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICcontrolAcknowledge_IEsT.Marshal(b, m, deterministic)
}
func (m *RICcontrolAcknowledge_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICcontrolAcknowledge_IEsT.Merge(m, src)
}
func (m *RICcontrolAcknowledge_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICcontrolAcknowledge_IEsT.Size(m)
}
func (m *RICcontrolAcknowledge_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICcontrolAcknowledge_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICcontrolAcknowledge_IEsT proto.InternalMessageInfo

func (m *RICcontrolAcknowledge_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICcontrolAcknowledge_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICcontrolAcknowledge_IEsT_Choice interface {
	isRICcontrolAcknowledge_IEsT_Choice()
}

type RICcontrolAcknowledge_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type RICcontrolAcknowledge_IEsT_RANfunctionID struct {
	RANfunctionID int64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

type RICcontrolAcknowledge_IEsT_RICcallProcessID struct {
	RICcallProcessID string `protobuf:"bytes,5,opt,name=RICcallProcessID,proto3,oneof"`
}

type RICcontrolAcknowledge_IEsT_RICcontrolStatus struct {
	RICcontrolStatus RICcontrolStatusT `protobuf:"varint,6,opt,name=RICcontrolStatus,proto3,enum=e2ctypes.RICcontrolStatusT,oneof"`
}

type RICcontrolAcknowledge_IEsT_RICcontrolOutcome struct {
	RICcontrolOutcome string `protobuf:"bytes,7,opt,name=RICcontrolOutcome,proto3,oneof"`
}

func (*RICcontrolAcknowledge_IEsT_RICrequestID) isRICcontrolAcknowledge_IEsT_Choice() {}

func (*RICcontrolAcknowledge_IEsT_RANfunctionID) isRICcontrolAcknowledge_IEsT_Choice() {}

func (*RICcontrolAcknowledge_IEsT_RICcallProcessID) isRICcontrolAcknowledge_IEsT_Choice() {}

func (*RICcontrolAcknowledge_IEsT_RICcontrolStatus) isRICcontrolAcknowledge_IEsT_Choice() {}

func (*RICcontrolAcknowledge_IEsT_RICcontrolOutcome) isRICcontrolAcknowledge_IEsT_Choice() {}

func (m *RICcontrolAcknowledge_IEsT) GetChoice() isRICcontrolAcknowledge_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICcontrolAcknowledge_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*RICcontrolAcknowledge_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *RICcontrolAcknowledge_IEsT) GetRANfunctionID() int64 {
	if x, ok := m.GetChoice().(*RICcontrolAcknowledge_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

func (m *RICcontrolAcknowledge_IEsT) GetRICcallProcessID() string {
	if x, ok := m.GetChoice().(*RICcontrolAcknowledge_IEsT_RICcallProcessID); ok {
		return x.RICcallProcessID
	}
	return ""
}

func (m *RICcontrolAcknowledge_IEsT) GetRICcontrolStatus() RICcontrolStatusT {
	if x, ok := m.GetChoice().(*RICcontrolAcknowledge_IEsT_RICcontrolStatus); ok {
		return x.RICcontrolStatus
	}
	return RICcontrolStatusT_RICcontrolStatus_success
}

func (m *RICcontrolAcknowledge_IEsT) GetRICcontrolOutcome() string {
	if x, ok := m.GetChoice().(*RICcontrolAcknowledge_IEsT_RICcontrolOutcome); ok {
		return x.RICcontrolOutcome
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICcontrolAcknowledge_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICcontrolAcknowledge_IEsT_RICrequestID)(nil),
		(*RICcontrolAcknowledge_IEsT_RANfunctionID)(nil),
		(*RICcontrolAcknowledge_IEsT_RICcallProcessID)(nil),
		(*RICcontrolAcknowledge_IEsT_RICcontrolStatus)(nil),
		(*RICcontrolAcknowledge_IEsT_RICcontrolOutcome)(nil),
	}
}

// Deprecated: Do not use.
type E2SetupResponseIEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*E2SetupResponseIEsT_GlobalRIC_ID
	//	*E2SetupResponseIEsT_RANfunctionsID_List
	//	*E2SetupResponseIEsT_RANfunctionsIDcause_List
	Choice               isE2SetupResponseIEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *E2SetupResponseIEsT) Reset()         { *m = E2SetupResponseIEsT{} }
func (m *E2SetupResponseIEsT) String() string { return proto.CompactTextString(m) }
func (*E2SetupResponseIEsT) ProtoMessage()    {}
func (*E2SetupResponseIEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{7}
}

func (m *E2SetupResponseIEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_E2SetupResponseIEsT.Unmarshal(m, b)
}
func (m *E2SetupResponseIEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_E2SetupResponseIEsT.Marshal(b, m, deterministic)
}
func (m *E2SetupResponseIEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_E2SetupResponseIEsT.Merge(m, src)
}
func (m *E2SetupResponseIEsT) XXX_Size() int {
	return xxx_messageInfo_E2SetupResponseIEsT.Size(m)
}
func (m *E2SetupResponseIEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_E2SetupResponseIEsT.DiscardUnknown(m)
}

var xxx_messageInfo_E2SetupResponseIEsT proto.InternalMessageInfo

func (m *E2SetupResponseIEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *E2SetupResponseIEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isE2SetupResponseIEsT_Choice interface {
	isE2SetupResponseIEsT_Choice()
}

type E2SetupResponseIEsT_GlobalRIC_ID struct {
	GlobalRIC_ID *GlobalRIC_IDT `protobuf:"bytes,3,opt,name=GlobalRIC_ID,json=GlobalRICID,proto3,oneof"`
}

type E2SetupResponseIEsT_RANfunctionsID_List struct {
	RANfunctionsID_List *RANfunctionsID_ListT `protobuf:"bytes,4,opt,name=RANfunctionsID_List,json=RANfunctionsIDList,proto3,oneof"`
}

type E2SetupResponseIEsT_RANfunctionsIDcause_List struct {
	RANfunctionsIDcause_List *RANfunctionsIDcause_ListT `protobuf:"bytes,5,opt,name=RANfunctionsIDcause_List,json=RANfunctionsIDcauseList,proto3,oneof"`
}

func (*E2SetupResponseIEsT_GlobalRIC_ID) isE2SetupResponseIEsT_Choice() {}

func (*E2SetupResponseIEsT_RANfunctionsID_List) isE2SetupResponseIEsT_Choice() {}

func (*E2SetupResponseIEsT_RANfunctionsIDcause_List) isE2SetupResponseIEsT_Choice() {}

func (m *E2SetupResponseIEsT) GetChoice() isE2SetupResponseIEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *E2SetupResponseIEsT) GetGlobalRIC_ID() *GlobalRIC_IDT {
	if x, ok := m.GetChoice().(*E2SetupResponseIEsT_GlobalRIC_ID); ok {
		return x.GlobalRIC_ID
	}
	return nil
}

func (m *E2SetupResponseIEsT) GetRANfunctionsID_List() *RANfunctionsID_ListT {
	if x, ok := m.GetChoice().(*E2SetupResponseIEsT_RANfunctionsID_List); ok {
		return x.RANfunctionsID_List
	}
	return nil
}

func (m *E2SetupResponseIEsT) GetRANfunctionsIDcause_List() *RANfunctionsIDcause_ListT {
	if x, ok := m.GetChoice().(*E2SetupResponseIEsT_RANfunctionsIDcause_List); ok {
		return x.RANfunctionsIDcause_List
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*E2SetupResponseIEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*E2SetupResponseIEsT_GlobalRIC_ID)(nil),
		(*E2SetupResponseIEsT_RANfunctionsID_List)(nil),
		(*E2SetupResponseIEsT_RANfunctionsIDcause_List)(nil),
	}
}

// Deprecated: Do not use.
type ResetResponseIEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*ResetResponseIEsT_CriticalityDiagnostics
	Choice               isResetResponseIEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *ResetResponseIEsT) Reset()         { *m = ResetResponseIEsT{} }
func (m *ResetResponseIEsT) String() string { return proto.CompactTextString(m) }
func (*ResetResponseIEsT) ProtoMessage()    {}
func (*ResetResponseIEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{8}
}

func (m *ResetResponseIEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetResponseIEsT.Unmarshal(m, b)
}
func (m *ResetResponseIEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetResponseIEsT.Marshal(b, m, deterministic)
}
func (m *ResetResponseIEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetResponseIEsT.Merge(m, src)
}
func (m *ResetResponseIEsT) XXX_Size() int {
	return xxx_messageInfo_ResetResponseIEsT.Size(m)
}
func (m *ResetResponseIEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetResponseIEsT.DiscardUnknown(m)
}

var xxx_messageInfo_ResetResponseIEsT proto.InternalMessageInfo

func (m *ResetResponseIEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *ResetResponseIEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isResetResponseIEsT_Choice interface {
	isResetResponseIEsT_Choice()
}

type ResetResponseIEsT_CriticalityDiagnostics struct {
	CriticalityDiagnostics *CriticalityDiagnosticsT `protobuf:"bytes,3,opt,name=CriticalityDiagnostics,proto3,oneof"`
}

func (*ResetResponseIEsT_CriticalityDiagnostics) isResetResponseIEsT_Choice() {}

func (m *ResetResponseIEsT) GetChoice() isResetResponseIEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *ResetResponseIEsT) GetCriticalityDiagnostics() *CriticalityDiagnosticsT {
	if x, ok := m.GetChoice().(*ResetResponseIEsT_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ResetResponseIEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ResetResponseIEsT_CriticalityDiagnostics)(nil),
	}
}

// Deprecated: Do not use.
type RICsubscriptionFailure_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICsubscriptionFailure_IEsT_RICrequestID
	//	*RICsubscriptionFailure_IEsT_RANfunctionID
	//	*RICsubscriptionFailure_IEsT_RICaction_NotAdmitted_List
	//	*RICsubscriptionFailure_IEsT_CriticalityDiagnostics
	Choice               isRICsubscriptionFailure_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *RICsubscriptionFailure_IEsT) Reset()         { *m = RICsubscriptionFailure_IEsT{} }
func (m *RICsubscriptionFailure_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICsubscriptionFailure_IEsT) ProtoMessage()    {}
func (*RICsubscriptionFailure_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{9}
}

func (m *RICsubscriptionFailure_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICsubscriptionFailure_IEsT.Unmarshal(m, b)
}
func (m *RICsubscriptionFailure_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICsubscriptionFailure_IEsT.Marshal(b, m, deterministic)
}
func (m *RICsubscriptionFailure_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICsubscriptionFailure_IEsT.Merge(m, src)
}
func (m *RICsubscriptionFailure_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICsubscriptionFailure_IEsT.Size(m)
}
func (m *RICsubscriptionFailure_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICsubscriptionFailure_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICsubscriptionFailure_IEsT proto.InternalMessageInfo

func (m *RICsubscriptionFailure_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICsubscriptionFailure_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICsubscriptionFailure_IEsT_Choice interface {
	isRICsubscriptionFailure_IEsT_Choice()
}

type RICsubscriptionFailure_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type RICsubscriptionFailure_IEsT_RANfunctionID struct {
	RANfunctionID int64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

type RICsubscriptionFailure_IEsT_RICaction_NotAdmitted_List struct {
	RICaction_NotAdmitted_List *RICaction_NotAdmitted_ListT `protobuf:"bytes,5,opt,name=RICaction_NotAdmitted_List,json=RICactionNotAdmittedList,proto3,oneof"`
}

type RICsubscriptionFailure_IEsT_CriticalityDiagnostics struct {
	CriticalityDiagnostics *CriticalityDiagnosticsT `protobuf:"bytes,6,opt,name=CriticalityDiagnostics,proto3,oneof"`
}

func (*RICsubscriptionFailure_IEsT_RICrequestID) isRICsubscriptionFailure_IEsT_Choice() {}

func (*RICsubscriptionFailure_IEsT_RANfunctionID) isRICsubscriptionFailure_IEsT_Choice() {}

func (*RICsubscriptionFailure_IEsT_RICaction_NotAdmitted_List) isRICsubscriptionFailure_IEsT_Choice() {
}

func (*RICsubscriptionFailure_IEsT_CriticalityDiagnostics) isRICsubscriptionFailure_IEsT_Choice() {}

func (m *RICsubscriptionFailure_IEsT) GetChoice() isRICsubscriptionFailure_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICsubscriptionFailure_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*RICsubscriptionFailure_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *RICsubscriptionFailure_IEsT) GetRANfunctionID() int64 {
	if x, ok := m.GetChoice().(*RICsubscriptionFailure_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

func (m *RICsubscriptionFailure_IEsT) GetRICaction_NotAdmitted_List() *RICaction_NotAdmitted_ListT {
	if x, ok := m.GetChoice().(*RICsubscriptionFailure_IEsT_RICaction_NotAdmitted_List); ok {
		return x.RICaction_NotAdmitted_List
	}
	return nil
}

func (m *RICsubscriptionFailure_IEsT) GetCriticalityDiagnostics() *CriticalityDiagnosticsT {
	if x, ok := m.GetChoice().(*RICsubscriptionFailure_IEsT_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICsubscriptionFailure_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICsubscriptionFailure_IEsT_RICrequestID)(nil),
		(*RICsubscriptionFailure_IEsT_RANfunctionID)(nil),
		(*RICsubscriptionFailure_IEsT_RICaction_NotAdmitted_List)(nil),
		(*RICsubscriptionFailure_IEsT_CriticalityDiagnostics)(nil),
	}
}

// Deprecated: Do not use.
type RICsubscriptionDeleteFailure_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICsubscriptionDeleteFailure_IEsT_RICrequestID
	//	*RICsubscriptionDeleteFailure_IEsT_RANfunctionID
	//	*RICsubscriptionDeleteFailure_IEsT_Cause
	//	*RICsubscriptionDeleteFailure_IEsT_CriticalityDiagnostics
	Choice               isRICsubscriptionDeleteFailure_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *RICsubscriptionDeleteFailure_IEsT) Reset()         { *m = RICsubscriptionDeleteFailure_IEsT{} }
func (m *RICsubscriptionDeleteFailure_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICsubscriptionDeleteFailure_IEsT) ProtoMessage()    {}
func (*RICsubscriptionDeleteFailure_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{10}
}

func (m *RICsubscriptionDeleteFailure_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICsubscriptionDeleteFailure_IEsT.Unmarshal(m, b)
}
func (m *RICsubscriptionDeleteFailure_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICsubscriptionDeleteFailure_IEsT.Marshal(b, m, deterministic)
}
func (m *RICsubscriptionDeleteFailure_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICsubscriptionDeleteFailure_IEsT.Merge(m, src)
}
func (m *RICsubscriptionDeleteFailure_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICsubscriptionDeleteFailure_IEsT.Size(m)
}
func (m *RICsubscriptionDeleteFailure_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICsubscriptionDeleteFailure_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICsubscriptionDeleteFailure_IEsT proto.InternalMessageInfo

func (m *RICsubscriptionDeleteFailure_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICsubscriptionDeleteFailure_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICsubscriptionDeleteFailure_IEsT_Choice interface {
	isRICsubscriptionDeleteFailure_IEsT_Choice()
}

type RICsubscriptionDeleteFailure_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type RICsubscriptionDeleteFailure_IEsT_RANfunctionID struct {
	RANfunctionID uint64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

type RICsubscriptionDeleteFailure_IEsT_Cause struct {
	Cause *CauseT `protobuf:"bytes,5,opt,name=Cause,proto3,oneof"`
}

type RICsubscriptionDeleteFailure_IEsT_CriticalityDiagnostics struct {
	CriticalityDiagnostics *CriticalityDiagnosticsT `protobuf:"bytes,6,opt,name=CriticalityDiagnostics,proto3,oneof"`
}

func (*RICsubscriptionDeleteFailure_IEsT_RICrequestID) isRICsubscriptionDeleteFailure_IEsT_Choice() {}

func (*RICsubscriptionDeleteFailure_IEsT_RANfunctionID) isRICsubscriptionDeleteFailure_IEsT_Choice() {}

func (*RICsubscriptionDeleteFailure_IEsT_Cause) isRICsubscriptionDeleteFailure_IEsT_Choice() {}

func (*RICsubscriptionDeleteFailure_IEsT_CriticalityDiagnostics) isRICsubscriptionDeleteFailure_IEsT_Choice() {
}

func (m *RICsubscriptionDeleteFailure_IEsT) GetChoice() isRICsubscriptionDeleteFailure_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICsubscriptionDeleteFailure_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*RICsubscriptionDeleteFailure_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *RICsubscriptionDeleteFailure_IEsT) GetRANfunctionID() uint64 {
	if x, ok := m.GetChoice().(*RICsubscriptionDeleteFailure_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

func (m *RICsubscriptionDeleteFailure_IEsT) GetCause() *CauseT {
	if x, ok := m.GetChoice().(*RICsubscriptionDeleteFailure_IEsT_Cause); ok {
		return x.Cause
	}
	return nil
}

func (m *RICsubscriptionDeleteFailure_IEsT) GetCriticalityDiagnostics() *CriticalityDiagnosticsT {
	if x, ok := m.GetChoice().(*RICsubscriptionDeleteFailure_IEsT_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICsubscriptionDeleteFailure_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICsubscriptionDeleteFailure_IEsT_RICrequestID)(nil),
		(*RICsubscriptionDeleteFailure_IEsT_RANfunctionID)(nil),
		(*RICsubscriptionDeleteFailure_IEsT_Cause)(nil),
		(*RICsubscriptionDeleteFailure_IEsT_CriticalityDiagnostics)(nil),
	}
}

// Deprecated: Do not use.
type RICserviceUpdateFailure_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICserviceUpdateFailure_IEsT_RANfunctionsIDcause_List
	//	*RICserviceUpdateFailure_IEsT_TimeToWait
	//	*RICserviceUpdateFailure_IEsT_CriticalityDiagnostics
	Choice               isRICserviceUpdateFailure_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *RICserviceUpdateFailure_IEsT) Reset()         { *m = RICserviceUpdateFailure_IEsT{} }
func (m *RICserviceUpdateFailure_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICserviceUpdateFailure_IEsT) ProtoMessage()    {}
func (*RICserviceUpdateFailure_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{11}
}

func (m *RICserviceUpdateFailure_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICserviceUpdateFailure_IEsT.Unmarshal(m, b)
}
func (m *RICserviceUpdateFailure_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICserviceUpdateFailure_IEsT.Marshal(b, m, deterministic)
}
func (m *RICserviceUpdateFailure_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICserviceUpdateFailure_IEsT.Merge(m, src)
}
func (m *RICserviceUpdateFailure_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICserviceUpdateFailure_IEsT.Size(m)
}
func (m *RICserviceUpdateFailure_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICserviceUpdateFailure_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICserviceUpdateFailure_IEsT proto.InternalMessageInfo

func (m *RICserviceUpdateFailure_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICserviceUpdateFailure_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICserviceUpdateFailure_IEsT_Choice interface {
	isRICserviceUpdateFailure_IEsT_Choice()
}

type RICserviceUpdateFailure_IEsT_RANfunctionsIDcause_List struct {
	RANfunctionsIDcause_List *RANfunctionsIDcause_ListT `protobuf:"bytes,3,opt,name=RANfunctionsIDcause_List,json=RANfunctionsIDcauseList,proto3,oneof"`
}

type RICserviceUpdateFailure_IEsT_TimeToWait struct {
	TimeToWait TimeToWaitT `protobuf:"varint,4,opt,name=TimeToWait,proto3,enum=e2ctypes.TimeToWaitT,oneof"`
}

type RICserviceUpdateFailure_IEsT_CriticalityDiagnostics struct {
	CriticalityDiagnostics *CriticalityDiagnosticsT `protobuf:"bytes,5,opt,name=CriticalityDiagnostics,proto3,oneof"`
}

func (*RICserviceUpdateFailure_IEsT_RANfunctionsIDcause_List) isRICserviceUpdateFailure_IEsT_Choice() {
}

func (*RICserviceUpdateFailure_IEsT_TimeToWait) isRICserviceUpdateFailure_IEsT_Choice() {}

func (*RICserviceUpdateFailure_IEsT_CriticalityDiagnostics) isRICserviceUpdateFailure_IEsT_Choice() {}

func (m *RICserviceUpdateFailure_IEsT) GetChoice() isRICserviceUpdateFailure_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICserviceUpdateFailure_IEsT) GetRANfunctionsIDcause_List() *RANfunctionsIDcause_ListT {
	if x, ok := m.GetChoice().(*RICserviceUpdateFailure_IEsT_RANfunctionsIDcause_List); ok {
		return x.RANfunctionsIDcause_List
	}
	return nil
}

func (m *RICserviceUpdateFailure_IEsT) GetTimeToWait() TimeToWaitT {
	if x, ok := m.GetChoice().(*RICserviceUpdateFailure_IEsT_TimeToWait); ok {
		return x.TimeToWait
	}
	return TimeToWaitT_TimeToWait_v1s
}

func (m *RICserviceUpdateFailure_IEsT) GetCriticalityDiagnostics() *CriticalityDiagnosticsT {
	if x, ok := m.GetChoice().(*RICserviceUpdateFailure_IEsT_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICserviceUpdateFailure_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICserviceUpdateFailure_IEsT_RANfunctionsIDcause_List)(nil),
		(*RICserviceUpdateFailure_IEsT_TimeToWait)(nil),
		(*RICserviceUpdateFailure_IEsT_CriticalityDiagnostics)(nil),
	}
}

// Deprecated: Do not use.
type RICcontrolFailure_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICcontrolFailure_IEsT_RICrequestID
	//	*RICcontrolFailure_IEsT_RANfunctionID
	//	*RICcontrolFailure_IEsT_RICcallProcessID
	//	*RICcontrolFailure_IEsT_Cause
	//	*RICcontrolFailure_IEsT_RICcontrolOutcome
	Choice               isRICcontrolFailure_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RICcontrolFailure_IEsT) Reset()         { *m = RICcontrolFailure_IEsT{} }
func (m *RICcontrolFailure_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICcontrolFailure_IEsT) ProtoMessage()    {}
func (*RICcontrolFailure_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{12}
}

func (m *RICcontrolFailure_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICcontrolFailure_IEsT.Unmarshal(m, b)
}
func (m *RICcontrolFailure_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICcontrolFailure_IEsT.Marshal(b, m, deterministic)
}
func (m *RICcontrolFailure_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICcontrolFailure_IEsT.Merge(m, src)
}
func (m *RICcontrolFailure_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICcontrolFailure_IEsT.Size(m)
}
func (m *RICcontrolFailure_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICcontrolFailure_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICcontrolFailure_IEsT proto.InternalMessageInfo

func (m *RICcontrolFailure_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICcontrolFailure_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICcontrolFailure_IEsT_Choice interface {
	isRICcontrolFailure_IEsT_Choice()
}

type RICcontrolFailure_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type RICcontrolFailure_IEsT_RANfunctionID struct {
	RANfunctionID int64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

type RICcontrolFailure_IEsT_RICcallProcessID struct {
	RICcallProcessID []byte `protobuf:"bytes,5,opt,name=RICcallProcessID,proto3,oneof"`
}

type RICcontrolFailure_IEsT_Cause struct {
	Cause *CauseT `protobuf:"bytes,6,opt,name=Cause,proto3,oneof"`
}

type RICcontrolFailure_IEsT_RICcontrolOutcome struct {
	RICcontrolOutcome []byte `protobuf:"bytes,7,opt,name=RICcontrolOutcome,proto3,oneof"`
}

func (*RICcontrolFailure_IEsT_RICrequestID) isRICcontrolFailure_IEsT_Choice() {}

func (*RICcontrolFailure_IEsT_RANfunctionID) isRICcontrolFailure_IEsT_Choice() {}

func (*RICcontrolFailure_IEsT_RICcallProcessID) isRICcontrolFailure_IEsT_Choice() {}

func (*RICcontrolFailure_IEsT_Cause) isRICcontrolFailure_IEsT_Choice() {}

func (*RICcontrolFailure_IEsT_RICcontrolOutcome) isRICcontrolFailure_IEsT_Choice() {}

func (m *RICcontrolFailure_IEsT) GetChoice() isRICcontrolFailure_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICcontrolFailure_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*RICcontrolFailure_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *RICcontrolFailure_IEsT) GetRANfunctionID() int64 {
	if x, ok := m.GetChoice().(*RICcontrolFailure_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

func (m *RICcontrolFailure_IEsT) GetRICcallProcessID() []byte {
	if x, ok := m.GetChoice().(*RICcontrolFailure_IEsT_RICcallProcessID); ok {
		return x.RICcallProcessID
	}
	return nil
}

func (m *RICcontrolFailure_IEsT) GetCause() *CauseT {
	if x, ok := m.GetChoice().(*RICcontrolFailure_IEsT_Cause); ok {
		return x.Cause
	}
	return nil
}

func (m *RICcontrolFailure_IEsT) GetRICcontrolOutcome() []byte {
	if x, ok := m.GetChoice().(*RICcontrolFailure_IEsT_RICcontrolOutcome); ok {
		return x.RICcontrolOutcome
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICcontrolFailure_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICcontrolFailure_IEsT_RICrequestID)(nil),
		(*RICcontrolFailure_IEsT_RANfunctionID)(nil),
		(*RICcontrolFailure_IEsT_RICcallProcessID)(nil),
		(*RICcontrolFailure_IEsT_Cause)(nil),
		(*RICcontrolFailure_IEsT_RICcontrolOutcome)(nil),
	}
}

// Deprecated: Do not use.
type E2SetupFailureIEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*E2SetupFailureIEsT_Cause
	//	*E2SetupFailureIEsT_TimeToWait
	//	*E2SetupFailureIEsT_CriticalityDiagnostics
	Choice               isE2SetupFailureIEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *E2SetupFailureIEsT) Reset()         { *m = E2SetupFailureIEsT{} }
func (m *E2SetupFailureIEsT) String() string { return proto.CompactTextString(m) }
func (*E2SetupFailureIEsT) ProtoMessage()    {}
func (*E2SetupFailureIEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{13}
}

func (m *E2SetupFailureIEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_E2SetupFailureIEsT.Unmarshal(m, b)
}
func (m *E2SetupFailureIEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_E2SetupFailureIEsT.Marshal(b, m, deterministic)
}
func (m *E2SetupFailureIEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_E2SetupFailureIEsT.Merge(m, src)
}
func (m *E2SetupFailureIEsT) XXX_Size() int {
	return xxx_messageInfo_E2SetupFailureIEsT.Size(m)
}
func (m *E2SetupFailureIEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_E2SetupFailureIEsT.DiscardUnknown(m)
}

var xxx_messageInfo_E2SetupFailureIEsT proto.InternalMessageInfo

func (m *E2SetupFailureIEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *E2SetupFailureIEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isE2SetupFailureIEsT_Choice interface {
	isE2SetupFailureIEsT_Choice()
}

type E2SetupFailureIEsT_Cause struct {
	Cause *CauseT `protobuf:"bytes,3,opt,name=Cause,proto3,oneof"`
}

type E2SetupFailureIEsT_TimeToWait struct {
	TimeToWait TimeToWaitT `protobuf:"varint,4,opt,name=TimeToWait,proto3,enum=e2ctypes.TimeToWaitT,oneof"`
}

type E2SetupFailureIEsT_CriticalityDiagnostics struct {
	CriticalityDiagnostics *CriticalityDiagnosticsT `protobuf:"bytes,5,opt,name=CriticalityDiagnostics,proto3,oneof"`
}

func (*E2SetupFailureIEsT_Cause) isE2SetupFailureIEsT_Choice() {}

func (*E2SetupFailureIEsT_TimeToWait) isE2SetupFailureIEsT_Choice() {}

func (*E2SetupFailureIEsT_CriticalityDiagnostics) isE2SetupFailureIEsT_Choice() {}

func (m *E2SetupFailureIEsT) GetChoice() isE2SetupFailureIEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *E2SetupFailureIEsT) GetCause() *CauseT {
	if x, ok := m.GetChoice().(*E2SetupFailureIEsT_Cause); ok {
		return x.Cause
	}
	return nil
}

func (m *E2SetupFailureIEsT) GetTimeToWait() TimeToWaitT {
	if x, ok := m.GetChoice().(*E2SetupFailureIEsT_TimeToWait); ok {
		return x.TimeToWait
	}
	return TimeToWaitT_TimeToWait_v1s
}

func (m *E2SetupFailureIEsT) GetCriticalityDiagnostics() *CriticalityDiagnosticsT {
	if x, ok := m.GetChoice().(*E2SetupFailureIEsT_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*E2SetupFailureIEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*E2SetupFailureIEsT_Cause)(nil),
		(*E2SetupFailureIEsT_TimeToWait)(nil),
		(*E2SetupFailureIEsT_CriticalityDiagnostics)(nil),
	}
}

// Deprecated: Do not use.
type RICsubscriptionRequest_IEsT struct {
	Id          ProtocolIE_IDT `protobuf:"varint,1,opt,name=id,proto3,enum=e2ctypes.ProtocolIE_IDT" json:"id,omitempty"`
	Criticality CriticalityT   `protobuf:"varint,2,opt,name=criticality,proto3,enum=e2ctypes.CriticalityT" json:"criticality,omitempty"`
	// Types that are valid to be assigned to Choice:
	//	*RICsubscriptionRequest_IEsT_RICrequestID
	//	*RICsubscriptionRequest_IEsT_RANfunctionID
	//	*RICsubscriptionRequest_IEsT_RICsubscriptionDetails
	Choice               isRICsubscriptionRequest_IEsT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *RICsubscriptionRequest_IEsT) Reset()         { *m = RICsubscriptionRequest_IEsT{} }
func (m *RICsubscriptionRequest_IEsT) String() string { return proto.CompactTextString(m) }
func (*RICsubscriptionRequest_IEsT) ProtoMessage()    {}
func (*RICsubscriptionRequest_IEsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_7e410ff4c511aaec, []int{14}
}

func (m *RICsubscriptionRequest_IEsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RICsubscriptionRequest_IEsT.Unmarshal(m, b)
}
func (m *RICsubscriptionRequest_IEsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RICsubscriptionRequest_IEsT.Marshal(b, m, deterministic)
}
func (m *RICsubscriptionRequest_IEsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RICsubscriptionRequest_IEsT.Merge(m, src)
}
func (m *RICsubscriptionRequest_IEsT) XXX_Size() int {
	return xxx_messageInfo_RICsubscriptionRequest_IEsT.Size(m)
}
func (m *RICsubscriptionRequest_IEsT) XXX_DiscardUnknown() {
	xxx_messageInfo_RICsubscriptionRequest_IEsT.DiscardUnknown(m)
}

var xxx_messageInfo_RICsubscriptionRequest_IEsT proto.InternalMessageInfo

func (m *RICsubscriptionRequest_IEsT) GetId() ProtocolIE_IDT {
	if m != nil {
		return m.Id
	}
	return ProtocolIE_IDT_ProtocolIE_ID_id_Dummy
}

func (m *RICsubscriptionRequest_IEsT) GetCriticality() CriticalityT {
	if m != nil {
		return m.Criticality
	}
	return CriticalityT_Criticality_reject
}

type isRICsubscriptionRequest_IEsT_Choice interface {
	isRICsubscriptionRequest_IEsT_Choice()
}

type RICsubscriptionRequest_IEsT_RICrequestID struct {
	RICrequestID *RICrequestIDT `protobuf:"bytes,3,opt,name=RICrequestID,proto3,oneof"`
}

type RICsubscriptionRequest_IEsT_RANfunctionID struct {
	RANfunctionID int64 `protobuf:"varint,4,opt,name=RANfunctionID,proto3,oneof"`
}

type RICsubscriptionRequest_IEsT_RICsubscriptionDetails struct {
	RICsubscriptionDetails *RICsubscriptionDetailsT `protobuf:"bytes,5,opt,name=RICsubscriptionDetails,proto3,oneof"`
}

func (*RICsubscriptionRequest_IEsT_RICrequestID) isRICsubscriptionRequest_IEsT_Choice() {}

func (*RICsubscriptionRequest_IEsT_RANfunctionID) isRICsubscriptionRequest_IEsT_Choice() {}

func (*RICsubscriptionRequest_IEsT_RICsubscriptionDetails) isRICsubscriptionRequest_IEsT_Choice() {}

func (m *RICsubscriptionRequest_IEsT) GetChoice() isRICsubscriptionRequest_IEsT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

func (m *RICsubscriptionRequest_IEsT) GetRICrequestID() *RICrequestIDT {
	if x, ok := m.GetChoice().(*RICsubscriptionRequest_IEsT_RICrequestID); ok {
		return x.RICrequestID
	}
	return nil
}

func (m *RICsubscriptionRequest_IEsT) GetRANfunctionID() int64 {
	if x, ok := m.GetChoice().(*RICsubscriptionRequest_IEsT_RANfunctionID); ok {
		return x.RANfunctionID
	}
	return 0
}

func (m *RICsubscriptionRequest_IEsT) GetRICsubscriptionDetails() *RICsubscriptionDetailsT {
	if x, ok := m.GetChoice().(*RICsubscriptionRequest_IEsT_RICsubscriptionDetails); ok {
		return x.RICsubscriptionDetails
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RICsubscriptionRequest_IEsT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RICsubscriptionRequest_IEsT_RICrequestID)(nil),
		(*RICsubscriptionRequest_IEsT_RANfunctionID)(nil),
		(*RICsubscriptionRequest_IEsT_RICsubscriptionDetails)(nil),
	}
}

func init() {
	proto.RegisterType((*RICindication_IEsT)(nil), "e2ctypes.RICindication_IEs_t")
	proto.RegisterType((*E2SetupRequestIEsT)(nil), "e2ctypes.E2setupRequestIEs_t")
	proto.RegisterType((*ErrorIndication_IEsT)(nil), "e2ctypes.ErrorIndication_IEs_t")
	proto.RegisterType((*RICsubscriptionResponse_IEsT)(nil), "e2ctypes.RICsubscriptionResponse_IEs_t")
	proto.RegisterType((*RICsubscriptionDeleteResponse_IEsT)(nil), "e2ctypes.RICsubscriptionDeleteResponse_IEs_t")
	proto.RegisterType((*RICserviceUpdateAcknowledge_IEsT)(nil), "e2ctypes.RICserviceUpdateAcknowledge_IEs_t")
	proto.RegisterType((*RICcontrolAcknowledge_IEsT)(nil), "e2ctypes.RICcontrolAcknowledge_IEs_t")
	proto.RegisterType((*E2SetupResponseIEsT)(nil), "e2ctypes.E2setupResponseIEs_t")
	proto.RegisterType((*ResetResponseIEsT)(nil), "e2ctypes.ResetResponseIEs_t")
	proto.RegisterType((*RICsubscriptionFailure_IEsT)(nil), "e2ctypes.RICsubscriptionFailure_IEs_t")
	proto.RegisterType((*RICsubscriptionDeleteFailure_IEsT)(nil), "e2ctypes.RICsubscriptionDeleteFailure_IEs_t")
	proto.RegisterType((*RICserviceUpdateFailure_IEsT)(nil), "e2ctypes.RICserviceUpdateFailure_IEs_t")
	proto.RegisterType((*RICcontrolFailure_IEsT)(nil), "e2ctypes.RICcontrolFailure_IEs_t")
	proto.RegisterType((*E2SetupFailureIEsT)(nil), "e2ctypes.E2setupFailureIEs_t")
	proto.RegisterType((*RICsubscriptionRequest_IEsT)(nil), "e2ctypes.RICsubscriptionRequest_IEs_t")
}

func init() { proto.RegisterFile("ProtocolIE-Field.proto", fileDescriptor_7e410ff4c511aaec) }

var fileDescriptor_7e410ff4c511aaec = []byte{
	// 1037 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x58, 0xc1, 0x6e, 0xe4, 0x44,
	0x13, 0x8e, 0xed, 0x4c, 0xfe, 0xa4, 0x26, 0x7f, 0x36, 0xe9, 0x6c, 0x26, 0xde, 0x6c, 0x22, 0x86,
	0x59, 0xb4, 0xca, 0x22, 0x92, 0x83, 0xe1, 0x00, 0x48, 0x20, 0x65, 0xc7, 0x13, 0xc6, 0xb0, 0x84,
	0x95, 0x37, 0x88, 0xcb, 0x22, 0xcb, 0xb1, 0x7b, 0x43, 0x0b, 0x67, 0x7a, 0x70, 0xf7, 0x80, 0x72,
	0x83, 0x23, 0x17, 0x5e, 0x81, 0x03, 0x12, 0xcf, 0xc0, 0x11, 0x71, 0x46, 0x9c, 0x79, 0x02, 0x9e,
	0x02, 0x21, 0xe4, 0x76, 0x8f, 0xdd, 0xf6, 0xf4, 0x64, 0x39, 0x64, 0x27, 0xda, 0xb9, 0xd6, 0xf7,
	0x75, 0xb9, 0xbb, 0xaa, 0xab, 0xea, 0x73, 0x43, 0xeb, 0x71, 0x4a, 0x39, 0x8d, 0x68, 0xe2, 0xf5,
	0x0e, 0x8e, 0x09, 0x4e, 0xe2, 0xc3, 0x61, 0x66, 0x40, 0xcb, 0xd8, 0x89, 0xf8, 0xe5, 0x10, 0xb3,
	0x9d, 0x66, 0x37, 0x1c, 0x31, 0x9c, 0x9b, 0x77, 0x36, 0x15, 0xba, 0xe7, 0x4a, 0xe3, 0x46, 0x37,
	0x25, 0x9c, 0x44, 0x61, 0x42, 0xf8, 0xa5, 0x34, 0x21, 0xdf, 0xeb, 0xa6, 0xf8, 0xab, 0x11, 0x66,
	0xbc, 0xa0, 0x6d, 0xfb, 0x5e, 0x97, 0x0c, 0x62, 0x12, 0x85, 0x9c, 0xd0, 0xc1, 0xe9, 0xe5, 0x70,
	0xec, 0x74, 0xeb, 0x83, 0x84, 0x9e, 0x85, 0x49, 0xcf, 0x19, 0xd0, 0x18, 0x1f, 0x28, 0xfc, 0xa3,
	0x93, 0x67, 0xa3, 0x41, 0x94, 0xb1, 0xd9, 0xc1, 0x23, 0xc2, 0xb8, 0x04, 0xee, 0xa8, 0x80, 0xe7,
	0xaa, 0xd0, 0x5e, 0x15, 0x8a, 0xb2, 0xad, 0x57, 0x60, 0xaf, 0x1b, 0x0a, 0xf0, 0xe0, 0x28, 0xbe,
	0x20, 0x9c, 0xe3, 0x58, 0x5d, 0xdd, 0x2e, 0xe1, 0x13, 0xca, 0x75, 0x8c, 0x96, 0xef, 0x75, 0x23,
	0x3a, 0xe0, 0x29, 0x4d, 0x9e, 0xf0, 0x90, 0x8f, 0x98, 0xb4, 0xef, 0x2a, 0x21, 0x70, 0x49, 0x78,
	0x3e, 0xa0, 0x8c, 0x93, 0x68, 0x8c, 0xa2, 0xfc, 0x80, 0xbe, 0xd7, 0x2d, 0x4f, 0xb7, 0x7e, 0x4a,
	0x2e, 0xf0, 0x29, 0xfd, 0x2c, 0x24, 0x63, 0xdf, 0xbb, 0xbe, 0xd7, 0x65, 0xa3, 0x33, 0x16, 0xa5,
	0x64, 0x98, 0xed, 0xc1, 0xc5, 0x3c, 0x24, 0x89, 0xf4, 0xd1, 0xf9, 0x79, 0x11, 0x36, 0x2b, 0x01,
	0x0c, 0xbc, 0x1e, 0x0b, 0x38, 0x7a, 0x00, 0x26, 0x89, 0x6d, 0xa3, 0x6d, 0xec, 0xaf, 0x39, 0x77,
	0x0e, 0xc7, 0x59, 0x3b, 0x2c, 0xf3, 0x14, 0x78, 0x6e, 0xc0, 0x7d, 0x93, 0xc4, 0xe8, 0x1d, 0x68,
	0x46, 0xe5, 0x36, 0x6d, 0x53, 0xac, 0xd9, 0x2e, 0xd7, 0x28, 0x67, 0x08, 0xb8, 0xaf, 0x72, 0xd1,
	0xfb, 0xb0, 0xaa, 0x66, 0xd4, 0xb6, 0xda, 0xc6, 0x7e, 0xd3, 0xb1, 0xcb, 0xb5, 0x2a, 0x1a, 0xf0,
	0xfe, 0x82, 0x5f, 0xe1, 0xa3, 0xfb, 0xf0, 0x7f, 0x25, 0x33, 0x9e, 0x6b, 0x2f, 0xb6, 0x8d, 0x7d,
	0xab, 0xbf, 0xe0, 0x57, 0xcd, 0xa8, 0x03, 0xcd, 0x22, 0x07, 0x9e, 0x6b, 0x37, 0x24, 0x4b, 0x35,
	0xa2, 0xd7, 0xe1, 0x56, 0x25, 0x10, 0x4f, 0x4e, 0xec, 0x25, 0xc9, 0xab, 0x03, 0xe8, 0x23, 0xd8,
	0x98, 0xb8, 0x75, 0xf6, 0xff, 0xc4, 0xc1, 0xef, 0x56, 0x36, 0x5f, 0xa5, 0xf4, 0x17, 0xfc, 0xc9,
	0x75, 0xc8, 0xa9, 0x65, 0xa0, 0x8f, 0xc3, 0x18, 0xa7, 0xf6, 0x72, 0xdb, 0xd8, 0x5f, 0xe9, 0x2f,
	0xf8, 0x3a, 0x10, 0xbd, 0x05, 0xb7, 0x2b, 0xe6, 0x8f, 0x31, 0x63, 0xe1, 0x39, 0xb6, 0x57, 0xe4,
	0x22, 0x2d, 0x8a, 0xde, 0x80, 0xf5, 0xec, 0xa2, 0x85, 0x49, 0xf2, 0x38, 0xa5, 0x11, 0x66, 0xcc,
	0x73, 0x6d, 0x90, 0x2b, 0x26, 0x90, 0x77, 0x4d, 0xdb, 0x78, 0xb8, 0x0c, 0x4b, 0xd1, 0x17, 0x94,
	0x44, 0xb8, 0xf3, 0xa3, 0x09, 0x9b, 0x3d, 0x87, 0x61, 0x3e, 0x1a, 0xfa, 0x32, 0xfe, 0x33, 0xbc,
	0x28, 0xc7, 0x70, 0x4b, 0xad, 0xe6, 0xa0, 0xb8, 0x2b, 0x4a, 0xb8, 0x6b, 0x04, 0x71, 0x5d, 0xd6,
	0x54, 0xa3, 0xe7, 0xa2, 0x47, 0xb0, 0xa1, 0x96, 0x72, 0x90, 0xd5, 0xa0, 0xb8, 0x34, 0x4d, 0x67,
	0x4f, 0x49, 0x5c, 0x9d, 0x22, 0x7c, 0xad, 0xab, 0xe6, 0xcc, 0x5a, 0x8b, 0xd0, 0xdf, 0x26, 0x6c,
	0xf5, 0xd2, 0x94, 0xa6, 0xde, 0x1c, 0x15, 0xd3, 0xe2, 0x64, 0x31, 0x3d, 0x80, 0x86, 0xe8, 0xdd,
	0xa2, 0x8c, 0x9a, 0xce, 0x86, 0xb2, 0xb9, 0xcc, 0x2c, 0x3c, 0xe7, 0x0c, 0xf4, 0x14, 0x5a, 0xfa,
	0x0e, 0x26, 0x4a, 0xab, 0xe9, 0x74, 0xb4, 0x07, 0x53, 0x78, 0xc2, 0xd9, 0x14, 0x1f, 0xb5, 0xf0,
	0xff, 0x66, 0xc1, 0x5e, 0xad, 0xd5, 0xf9, 0x98, 0x0d, 0xe9, 0x80, 0xe1, 0xb9, 0xec, 0x69, 0x9f,
	0xc3, 0x76, 0xd1, 0xbe, 0x82, 0xf1, 0x50, 0xc9, 0x2f, 0x74, 0x9e, 0x98, 0x7b, 0x95, 0x4f, 0xea,
	0x88, 0xe2, 0xeb, 0x5b, 0x05, 0x38, 0xc6, 0x32, 0x08, 0x3d, 0x83, 0x9d, 0x72, 0x95, 0x32, 0xb6,
	0xf2, 0x2f, 0xe4, 0xe9, 0xbb, 0xaf, 0xfb, 0x42, 0x9d, 0x2b, 0x3e, 0x62, 0x17, 0xb8, 0x02, 0x6b,
	0x6a, 0xe8, 0x3b, 0x13, 0xee, 0x4d, 0xcc, 0xab, 0x04, 0x73, 0x3c, 0xcf, 0xa9, 0xac, 0xc5, 0xe0,
	0x0f, 0x13, 0x5e, 0xcd, 0x62, 0x80, 0xd3, 0xaf, 0x49, 0x84, 0x3f, 0x1d, 0xc6, 0x21, 0xc7, 0x47,
	0xd1, 0x97, 0x03, 0xfa, 0x4d, 0x82, 0xe3, 0xf3, 0xd9, 0x46, 0xc0, 0x87, 0xcd, 0xaa, 0xf4, 0xc9,
	0xd3, 0x9f, 0x07, 0xe2, 0x15, 0x7d, 0xc7, 0x94, 0x24, 0x11, 0x0f, 0x54, 0x05, 0xc4, 0xcd, 0x0a,
	0xc1, 0xd6, 0xc8, 0x29, 0xb5, 0x15, 0xbf, 0x36, 0xcd, 0x71, 0xc9, 0x14, 0xde, 0xb7, 0xa7, 0xc8,
	0xb2, 0x5a, 0x40, 0x7f, 0xb2, 0xe0, 0x6e, 0x29, 0xb0, 0x6e, 0x2a, 0x94, 0xb3, 0xea, 0x0b, 0xba,
	0x21, 0xdf, 0x98, 0x36, 0xe4, 0xd1, 0x87, 0x39, 0x5b, 0xd5, 0x9e, 0xa2, 0xb8, 0xd7, 0x9c, 0xdd,
	0xca, 0xce, 0x2a, 0x0c, 0x39, 0x0e, 0x6b, 0x56, 0x74, 0x28, 0x54, 0x91, 0xb4, 0x7d, 0x32, 0xe2,
	0x11, 0xbd, 0xc8, 0x55, 0xd1, 0x8a, 0x14, 0x3e, 0x55, 0xa8, 0x96, 0xa5, 0x6f, 0x2d, 0xb8, 0x5d,
	0x08, 0x8c, 0xbc, 0xd8, 0x67, 0x99, 0x9e, 0xf7, 0x60, 0xb5, 0x90, 0xd3, 0x81, 0x2e, 0x3d, 0x2a,
	0x2a, 0x02, 0xd0, 0x2c, 0x2c, 0x9e, 0x3b, 0xad, 0x50, 0x16, 0x5f, 0x54, 0xa1, 0x34, 0x5e, 0x44,
	0xa1, 0xfc, 0x65, 0x00, 0xf2, 0x31, 0xc3, 0xfc, 0x26, 0x12, 0x30, 0x5d, 0x2b, 0x58, 0xd7, 0xae,
	0x15, 0x7e, 0xb5, 0xa0, 0xfe, 0x5b, 0x74, 0x1c, 0x92, 0x64, 0x94, 0xce, 0x67, 0x4b, 0xb8, 0x7a,
	0x96, 0x37, 0xae, 0x6b, 0x96, 0xcf, 0x54, 0xee, 0x7d, 0x6f, 0x41, 0x47, 0xab, 0x14, 0xe6, 0x26,
	0x91, 0x2f, 0x8f, 0xf4, 0xfe, 0x41, 0x4a, 0x6f, 0x55, 0xb1, 0xdc, 0x44, 0x1a, 0xae, 0x6a, 0x98,
	0xd6, 0xb5, 0x34, 0x4c, 0xf4, 0x36, 0x40, 0xf9, 0xc2, 0x22, 0xd2, 0xb4, 0xe6, 0xb4, 0x4a, 0xa7,
	0x25, 0x26, 0xdc, 0x28, 0xdc, 0x2b, 0x12, 0xd2, 0xb8, 0xf6, 0x84, 0xfc, 0x63, 0x8a, 0x9f, 0x03,
	0x39, 0x6f, 0xe7, 0xb9, 0xb5, 0x4d, 0x53, 0x3b, 0xab, 0x5a, 0xb5, 0x53, 0xd4, 0xcf, 0xd2, 0x73,
	0xeb, 0x67, 0xaa, 0x98, 0x59, 0xfd, 0x2f, 0x62, 0xe6, 0xf7, 0xf2, 0xb5, 0x44, 0x46, 0x7f, 0x96,
	0xc1, 0x2f, 0x8e, 0x69, 0x3d, 0xf7, 0x98, 0x2f, 0xc7, 0x7d, 0xfe, 0xd3, 0x9c, 0x98, 0xd7, 0xf2,
	0x11, 0x6a, 0x2e, 0x2f, 0xf5, 0x53, 0x68, 0xe9, 0x1f, 0x6d, 0x27, 0x43, 0xab, 0xe7, 0xe5, 0xa1,
	0xd5, 0x63, 0xd5, 0xd0, 0x3e, 0xb4, 0x7e, 0x31, 0x8c, 0xb3, 0x25, 0xf1, 0x18, 0xfc, 0xe6, 0xbf,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x83, 0xbe, 0x36, 0x5c, 0xb7, 0x17, 0x00, 0x00,
}
