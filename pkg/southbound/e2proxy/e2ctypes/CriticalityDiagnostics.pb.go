// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CriticalityDiagnostics.proto

package e2ctypes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CriticalityDiagnosticsT struct {
	ProcedureCode             ProcedureCodeT                   `protobuf:"varint,1,opt,name=procedureCode,proto3,enum=e2ctypes.ProcedureCodeT" json:"procedureCode,omitempty"`
	TriggeringMessage         TriggeringMessageT               `protobuf:"varint,2,opt,name=triggeringMessage,proto3,enum=e2ctypes.TriggeringMessageT" json:"triggeringMessage,omitempty"`
	ProcedureCriticality      CriticalityT                     `protobuf:"varint,3,opt,name=procedureCriticality,proto3,enum=e2ctypes.CriticalityT" json:"procedureCriticality,omitempty"`
	RicRequestorID            *RICrequestIDT                   `protobuf:"bytes,4,opt,name=ricRequestorID,proto3" json:"ricRequestorID,omitempty"`
	IEsCriticalityDiagnostics *CriticalityDiagnostics_IE_ListT `protobuf:"bytes,5,opt,name=iEsCriticalityDiagnostics,proto3" json:"iEsCriticalityDiagnostics,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                         `json:"-"`
	XXX_unrecognized          []byte                           `json:"-"`
	XXX_sizecache             int32                            `json:"-"`
}

func (m *CriticalityDiagnosticsT) Reset()         { *m = CriticalityDiagnosticsT{} }
func (m *CriticalityDiagnosticsT) String() string { return proto.CompactTextString(m) }
func (*CriticalityDiagnosticsT) ProtoMessage()    {}
func (*CriticalityDiagnosticsT) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae74d3e814df3ae7, []int{0}
}

func (m *CriticalityDiagnosticsT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CriticalityDiagnosticsT.Unmarshal(m, b)
}
func (m *CriticalityDiagnosticsT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CriticalityDiagnosticsT.Marshal(b, m, deterministic)
}
func (m *CriticalityDiagnosticsT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CriticalityDiagnosticsT.Merge(m, src)
}
func (m *CriticalityDiagnosticsT) XXX_Size() int {
	return xxx_messageInfo_CriticalityDiagnosticsT.Size(m)
}
func (m *CriticalityDiagnosticsT) XXX_DiscardUnknown() {
	xxx_messageInfo_CriticalityDiagnosticsT.DiscardUnknown(m)
}

var xxx_messageInfo_CriticalityDiagnosticsT proto.InternalMessageInfo

func (m *CriticalityDiagnosticsT) GetProcedureCode() ProcedureCodeT {
	if m != nil {
		return m.ProcedureCode
	}
	return ProcedureCodeT_ProcedureCode_id_dummy
}

func (m *CriticalityDiagnosticsT) GetTriggeringMessage() TriggeringMessageT {
	if m != nil {
		return m.TriggeringMessage
	}
	return TriggeringMessageT_TriggeringMessage_initiating_message
}

func (m *CriticalityDiagnosticsT) GetProcedureCriticality() CriticalityT {
	if m != nil {
		return m.ProcedureCriticality
	}
	return CriticalityT_Criticality_reject
}

func (m *CriticalityDiagnosticsT) GetRicRequestorID() *RICrequestIDT {
	if m != nil {
		return m.RicRequestorID
	}
	return nil
}

func (m *CriticalityDiagnosticsT) GetIEsCriticalityDiagnostics() *CriticalityDiagnostics_IE_ListT {
	if m != nil {
		return m.IEsCriticalityDiagnostics
	}
	return nil
}

func init() {
	proto.RegisterType((*CriticalityDiagnosticsT)(nil), "e2ctypes.CriticalityDiagnostics_t")
}

func init() { proto.RegisterFile("CriticalityDiagnostics.proto", fileDescriptor_ae74d3e814df3ae7) }

var fileDescriptor_ae74d3e814df3ae7 = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0xa9, 0x53, 0x91, 0x88, 0x83, 0x45, 0x61, 0xd9, 0x50, 0x18, 0xe2, 0xc3, 0x10, 0xd6,
	0x87, 0xfa, 0x03, 0x14, 0xda, 0x3e, 0x94, 0x29, 0x48, 0xf0, 0x3d, 0xd4, 0x2c, 0xc4, 0x0b, 0xb2,
	0xd4, 0xe4, 0xee, 0x61, 0x3f, 0xc7, 0x7f, 0x2a, 0xb6, 0x1b, 0xc9, 0xb6, 0xec, 0xf5, 0xde, 0x73,
	0xbe, 0x9c, 0x9c, 0x4b, 0x6e, 0x73, 0x0b, 0x08, 0xb2, 0xfe, 0x06, 0x5c, 0x17, 0x50, 0xeb, 0xa5,
	0x71, 0x08, 0xd2, 0xa5, 0x8d, 0x35, 0x68, 0xe8, 0x85, 0xca, 0x24, 0xae, 0x1b, 0xe5, 0xc6, 0xd7,
	0xef, 0xd6, 0x48, 0xb5, 0x58, 0x59, 0x95, 0x9b, 0x85, 0xea, 0xd6, 0xe3, 0x41, 0x60, 0xde, 0x8c,
	0x28, 0xaf, 0x72, 0xab, 0x7e, 0x56, 0xca, 0x61, 0x55, 0x6c, 0x66, 0xc3, 0x0f, 0x0b, 0x5a, 0x2b,
	0x0b, 0x4b, 0xfd, 0xa6, 0x9c, 0xab, 0xf5, 0xd6, 0xff, 0x10, 0x7f, 0x7c, 0x56, 0x95, 0xb3, 0x57,
	0x70, 0xd8, 0xa9, 0xee, 0x7f, 0x7b, 0x84, 0xc5, 0x85, 0x02, 0xe9, 0x33, 0xb9, 0x6a, 0xc2, 0x64,
	0x2c, 0x99, 0x24, 0xd3, 0x7e, 0x36, 0x4a, 0xb7, 0xc9, 0xd3, 0x9d, 0xe0, 0x02, 0xf9, 0xae, 0x9e,
	0xce, 0xc9, 0x00, 0xf7, 0xe3, 0xb1, 0x93, 0x16, 0x72, 0xe7, 0x21, 0x07, 0x3f, 0x10, 0xc8, 0x0f,
	0x7d, 0x74, 0x4e, 0x6e, 0x3c, 0xdd, 0x47, 0x66, 0xbd, 0x96, 0x37, 0xf4, 0xbc, 0x60, 0x29, 0x90,
	0x47, 0x4d, 0xf4, 0x85, 0xf4, 0x2d, 0x48, 0xde, 0x95, 0x69, 0x6c, 0x55, 0xb0, 0xd3, 0x49, 0x32,
	0xbd, 0xcc, 0x98, 0xc7, 0x84, 0x65, 0x0b, 0xe4, 0x7b, 0x7a, 0xfa, 0x45, 0x46, 0x50, 0xba, 0x78,
	0x77, 0xec, 0xac, 0x85, 0x3d, 0x46, 0x33, 0x85, 0x1d, 0x57, 0xa5, 0xf8, 0x3f, 0x86, 0x40, 0x7e,
	0x1c, 0xf6, 0x79, 0xde, 0x9e, 0xea, 0xe9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xdd, 0x5c, 0x41, 0xfe,
	0x4f, 0x02, 0x00, 0x00,
}
