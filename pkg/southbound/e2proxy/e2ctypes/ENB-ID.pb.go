// Code generated by protoc-gen-go. DO NOT EDIT.
// ENB-ID.proto is a deprecated file.

package e2ctypes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ENB_IDT struct {
	// Types that are valid to be assigned to Choice:
	//	*ENB_IDT_MacroENB_ID
	//	*ENB_IDT_HomeENB_ID
	//	*ENB_IDT_Short_MacroENB_ID
	//	*ENB_IDT_Long_MacroENB_ID
	Choice               isENB_IDT_Choice `protobuf_oneof:"choice"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ENB_IDT) Reset()         { *m = ENB_IDT{} }
func (m *ENB_IDT) String() string { return proto.CompactTextString(m) }
func (*ENB_IDT) ProtoMessage()    {}
func (*ENB_IDT) Descriptor() ([]byte, []int) {
	return fileDescriptor_95117b4dc9da449d, []int{0}
}

func (m *ENB_IDT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ENB_IDT.Unmarshal(m, b)
}
func (m *ENB_IDT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ENB_IDT.Marshal(b, m, deterministic)
}
func (m *ENB_IDT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ENB_IDT.Merge(m, src)
}
func (m *ENB_IDT) XXX_Size() int {
	return xxx_messageInfo_ENB_IDT.Size(m)
}
func (m *ENB_IDT) XXX_DiscardUnknown() {
	xxx_messageInfo_ENB_IDT.DiscardUnknown(m)
}

var xxx_messageInfo_ENB_IDT proto.InternalMessageInfo

type isENB_IDT_Choice interface {
	isENB_IDT_Choice()
}

type ENB_IDT_MacroENB_ID struct {
	MacroENB_ID *BIT_STRING `protobuf:"bytes,2,opt,name=macro_eNB_ID,json=macroENBID,proto3,oneof"`
}

type ENB_IDT_HomeENB_ID struct {
	HomeENB_ID *BIT_STRING `protobuf:"bytes,3,opt,name=home_eNB_ID,json=homeENBID,proto3,oneof"`
}

type ENB_IDT_Short_MacroENB_ID struct {
	Short_MacroENB_ID *BIT_STRING `protobuf:"bytes,4,opt,name=short_Macro_eNB_ID,json=shortMacroENBID,proto3,oneof"`
}

type ENB_IDT_Long_MacroENB_ID struct {
	Long_MacroENB_ID *BIT_STRING `protobuf:"bytes,5,opt,name=long_Macro_eNB_ID,json=longMacroENBID,proto3,oneof"`
}

func (*ENB_IDT_MacroENB_ID) isENB_IDT_Choice() {}

func (*ENB_IDT_HomeENB_ID) isENB_IDT_Choice() {}

func (*ENB_IDT_Short_MacroENB_ID) isENB_IDT_Choice() {}

func (*ENB_IDT_Long_MacroENB_ID) isENB_IDT_Choice() {}

func (m *ENB_IDT) GetChoice() isENB_IDT_Choice {
	if m != nil {
		return m.Choice
	}
	return nil
}

// Deprecated: Do not use.
func (m *ENB_IDT) GetMacroENB_ID() *BIT_STRING {
	if x, ok := m.GetChoice().(*ENB_IDT_MacroENB_ID); ok {
		return x.MacroENB_ID
	}
	return nil
}

// Deprecated: Do not use.
func (m *ENB_IDT) GetHomeENB_ID() *BIT_STRING {
	if x, ok := m.GetChoice().(*ENB_IDT_HomeENB_ID); ok {
		return x.HomeENB_ID
	}
	return nil
}

// Deprecated: Do not use.
func (m *ENB_IDT) GetShort_MacroENB_ID() *BIT_STRING {
	if x, ok := m.GetChoice().(*ENB_IDT_Short_MacroENB_ID); ok {
		return x.Short_MacroENB_ID
	}
	return nil
}

// Deprecated: Do not use.
func (m *ENB_IDT) GetLong_MacroENB_ID() *BIT_STRING {
	if x, ok := m.GetChoice().(*ENB_IDT_Long_MacroENB_ID); ok {
		return x.Long_MacroENB_ID
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ENB_IDT) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ENB_IDT_MacroENB_ID)(nil),
		(*ENB_IDT_HomeENB_ID)(nil),
		(*ENB_IDT_Short_MacroENB_ID)(nil),
		(*ENB_IDT_Long_MacroENB_ID)(nil),
	}
}

func init() {
	proto.RegisterType((*ENB_IDT)(nil), "e2ctypes.ENB_ID_t")
}

func init() { proto.RegisterFile("ENB-ID.proto", fileDescriptor_95117b4dc9da449d) }

var fileDescriptor_95117b4dc9da449d = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x71, 0xf5, 0x73, 0xd2,
	0xf5, 0x74, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x48, 0x35, 0x4a, 0x2e, 0xa9, 0x2c,
	0x48, 0x2d, 0x96, 0x12, 0x70, 0xf2, 0x0c, 0x89, 0x0f, 0x0e, 0x09, 0xf2, 0xf4, 0x73, 0x87, 0xc8,
	0x29, 0xcd, 0x63, 0xe2, 0xe2, 0x70, 0xf5, 0x73, 0x8a, 0xf7, 0x74, 0x89, 0x2f, 0x11, 0xb2, 0xe1,
	0xe2, 0xc9, 0x4d, 0x4c, 0x2e, 0xca, 0x8f, 0x4f, 0x05, 0x8b, 0x48, 0x30, 0x29, 0x30, 0x6a, 0x70,
	0x1b, 0x89, 0xe8, 0xc1, 0xf4, 0xeb, 0x21, 0xb4, 0x3b, 0x31, 0x49, 0x30, 0x7a, 0x30, 0x04, 0x71,
	0x81, 0xd5, 0xbb, 0xfa, 0x39, 0x79, 0xba, 0x08, 0x59, 0x71, 0x71, 0x67, 0xe4, 0xe7, 0xa6, 0xc2,
	0x34, 0x33, 0x13, 0xd4, 0xcc, 0x09, 0x52, 0x0e, 0xd1, 0xeb, 0xce, 0x25, 0x54, 0x9c, 0x91, 0x5f,
	0x54, 0x12, 0xef, 0x8b, 0x6c, 0x3f, 0x0b, 0x41, 0x23, 0xf8, 0xc1, 0xba, 0x7c, 0x11, 0x8e, 0x70,
	0xe5, 0x12, 0xcc, 0xc9, 0xcf, 0x4b, 0x47, 0x35, 0x87, 0x95, 0xa0, 0x39, 0x7c, 0x20, 0x4d, 0x08,
	0x63, 0x9c, 0x38, 0xb8, 0xd8, 0x92, 0x33, 0xf2, 0x33, 0x93, 0x53, 0x9d, 0x98, 0x77, 0x30, 0x32,
	0x26, 0xb1, 0x81, 0x03, 0xcb, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0xed, 0xef, 0xab, 0x89, 0x58,
	0x01, 0x00, 0x00,
}
