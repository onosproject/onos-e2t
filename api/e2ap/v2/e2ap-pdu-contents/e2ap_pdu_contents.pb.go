// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: api/e2ap/v2/e2ap_pdu_contents.proto

package e2ap_pdu_contents

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	e2ap_commondatatypes "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-commondatatypes"
	_ "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-constants"
	_ "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-containers"
	e2ap_ies "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-ies"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// sequence from e2ap_v2.asn:397
// {RICsubscriptionRequest}
type RicsubscriptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicsubscriptionRequestIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicsubscriptionRequest) Reset() {
	*x = RicsubscriptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionRequest) ProtoMessage() {}

func (x *RicsubscriptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionRequest.ProtoReflect.Descriptor instead.
func (*RicsubscriptionRequest) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{0}
}

func (x *RicsubscriptionRequest) GetProtocolIes() []*RicsubscriptionRequestIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:401
// {_RICsubscriptionRequest-IEs}
type RicsubscriptionRequestIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	// @inject_tag: aper:"canonicalOrder"
	Value *RicsubscriptionRequestIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicsubscriptionRequestIes) Reset() {
	*x = RicsubscriptionRequestIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionRequestIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionRequestIes) ProtoMessage() {}

func (x *RicsubscriptionRequestIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionRequestIes.ProtoReflect.Descriptor instead.
func (*RicsubscriptionRequestIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{1}
}

func (x *RicsubscriptionRequestIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicsubscriptionRequestIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicsubscriptionRequestIes) GetValue() *RicsubscriptionRequestIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicsubscriptionRequestIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicsubscriptionRequestIe:
	//	*RicsubscriptionRequestIe_RicrequestId
	//	*RicsubscriptionRequestIe_RanfunctionId
	//	*RicsubscriptionRequestIe_RicsubscriptionDetails
	RicsubscriptionRequestIe isRicsubscriptionRequestIe_RicsubscriptionRequestIe `protobuf_oneof:"ricsubscription_request_ie"`
}

func (x *RicsubscriptionRequestIe) Reset() {
	*x = RicsubscriptionRequestIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionRequestIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionRequestIe) ProtoMessage() {}

func (x *RicsubscriptionRequestIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionRequestIe.ProtoReflect.Descriptor instead.
func (*RicsubscriptionRequestIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{2}
}

func (m *RicsubscriptionRequestIe) GetRicsubscriptionRequestIe() isRicsubscriptionRequestIe_RicsubscriptionRequestIe {
	if m != nil {
		return m.RicsubscriptionRequestIe
	}
	return nil
}

func (x *RicsubscriptionRequestIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRicsubscriptionRequestIe().(*RicsubscriptionRequestIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RicsubscriptionRequestIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRicsubscriptionRequestIe().(*RicsubscriptionRequestIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *RicsubscriptionRequestIe) GetRicsubscriptionDetails() *RicsubscriptionDetails {
	if x, ok := x.GetRicsubscriptionRequestIe().(*RicsubscriptionRequestIe_RicsubscriptionDetails); ok {
		return x.RicsubscriptionDetails
	}
	return nil
}

type isRicsubscriptionRequestIe_RicsubscriptionRequestIe interface {
	isRicsubscriptionRequestIe_RicsubscriptionRequestIe()
}

type RicsubscriptionRequestIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RicsubscriptionRequestIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type RicsubscriptionRequestIe_RicsubscriptionDetails struct {
	//@inject_tag: aper:"valueExt"
	RicsubscriptionDetails *RicsubscriptionDetails `protobuf:"bytes,3,opt,name=ricsubscription_details,json=ricsubscriptionDetails,proto3,oneof" aper:"valueExt"`
}

func (*RicsubscriptionRequestIe_RicrequestId) isRicsubscriptionRequestIe_RicsubscriptionRequestIe() {}

func (*RicsubscriptionRequestIe_RanfunctionId) isRicsubscriptionRequestIe_RicsubscriptionRequestIe() {
}

func (*RicsubscriptionRequestIe_RicsubscriptionDetails) isRicsubscriptionRequestIe_RicsubscriptionRequestIe() {
}

// sequence from e2ap_v2.asn:410
// {RICsubscriptionDetails}
type RicsubscriptionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicEventTriggerDefinition *e2ap_commondatatypes.RiceventTriggerDefinition `protobuf:"bytes,1,opt,name=ric_event_trigger_definition,json=ricEventTriggerDefinition,proto3" json:"ric_event_trigger_definition,omitempty"`
	RicActionToBeSetupList    *RicactionsToBeSetupList                        `protobuf:"bytes,2,opt,name=ric_action_to_be_setup_list,json=ricAction-ToBeSetup-List,proto3" json:"ric_action_to_be_setup_list,omitempty"`
}

func (x *RicsubscriptionDetails) Reset() {
	*x = RicsubscriptionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDetails) ProtoMessage() {}

func (x *RicsubscriptionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDetails.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDetails) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{3}
}

func (x *RicsubscriptionDetails) GetRicEventTriggerDefinition() *e2ap_commondatatypes.RiceventTriggerDefinition {
	if x != nil {
		return x.RicEventTriggerDefinition
	}
	return nil
}

func (x *RicsubscriptionDetails) GetRicActionToBeSetupList() *RicactionsToBeSetupList {
	if x != nil {
		return x.RicActionToBeSetupList
	}
	return nil
}

// sequence from e2ap_v2.asn:415
// {RICactions-ToBeSetup-List}
type RicactionsToBeSetupList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:16"
	Value []*RicactionToBeSetupItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:16"`
}

func (x *RicactionsToBeSetupList) Reset() {
	*x = RicactionsToBeSetupList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionsToBeSetupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionsToBeSetupList) ProtoMessage() {}

func (x *RicactionsToBeSetupList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionsToBeSetupList.ProtoReflect.Descriptor instead.
func (*RicactionsToBeSetupList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{4}
}

func (x *RicactionsToBeSetupList) GetValue() []*RicactionToBeSetupItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:417
// {_RICaction-ToBeSetup-ItemIEs}
type RicactionToBeSetupItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	// @inject_tag: aper:"canonicalOrder"
	Value *RicactionToBeSetupItemIe `protobuf:"bytes,3,opt,name=value,json=ricActionToBeSetupItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicactionToBeSetupItemIes) Reset() {
	*x = RicactionToBeSetupItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionToBeSetupItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionToBeSetupItemIes) ProtoMessage() {}

func (x *RicactionToBeSetupItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionToBeSetupItemIes.ProtoReflect.Descriptor instead.
func (*RicactionToBeSetupItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{5}
}

func (x *RicactionToBeSetupItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicactionToBeSetupItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicactionToBeSetupItemIes) GetValue() *RicactionToBeSetupItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicactionToBeSetupItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicactionToBeSetupItemIe:
	//	*RicactionToBeSetupItemIe_RicactionToBeSetupItem
	RicactionToBeSetupItemIe isRicactionToBeSetupItemIe_RicactionToBeSetupItemIe `protobuf_oneof:"ricaction_to_be_setup_item_ie"`
}

func (x *RicactionToBeSetupItemIe) Reset() {
	*x = RicactionToBeSetupItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionToBeSetupItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionToBeSetupItemIe) ProtoMessage() {}

func (x *RicactionToBeSetupItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionToBeSetupItemIe.ProtoReflect.Descriptor instead.
func (*RicactionToBeSetupItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{6}
}

func (m *RicactionToBeSetupItemIe) GetRicactionToBeSetupItemIe() isRicactionToBeSetupItemIe_RicactionToBeSetupItemIe {
	if m != nil {
		return m.RicactionToBeSetupItemIe
	}
	return nil
}

func (x *RicactionToBeSetupItemIe) GetRicactionToBeSetupItem() *RicactionToBeSetupItem {
	if x, ok := x.GetRicactionToBeSetupItemIe().(*RicactionToBeSetupItemIe_RicactionToBeSetupItem); ok {
		return x.RicactionToBeSetupItem
	}
	return nil
}

type isRicactionToBeSetupItemIe_RicactionToBeSetupItemIe interface {
	isRicactionToBeSetupItemIe_RicactionToBeSetupItemIe()
}

type RicactionToBeSetupItemIe_RicactionToBeSetupItem struct {
	//@inject_tag: aper:"valueExt"
	RicactionToBeSetupItem *RicactionToBeSetupItem `protobuf:"bytes,1,opt,name=ricaction_to_be_setup_item,json=ricactionToBeSetupItem,proto3,oneof" aper:"valueExt"`
}

func (*RicactionToBeSetupItemIe_RicactionToBeSetupItem) isRicactionToBeSetupItemIe_RicactionToBeSetupItemIe() {
}

// sequence from e2ap_v2.asn:423
// {RICaction-ToBeSetup-Item}
type RicactionToBeSetupItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicActionId *e2ap_ies.RicactionId `protobuf:"bytes,1,opt,name=ric_action_id,json=ricActionID,proto3" json:"ric_action_id,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:2,valueExt"
	RicActionType e2ap_ies.RicactionType `protobuf:"varint,2,opt,name=ric_action_type,json=ricActionType,proto3,enum=e2ap.v2.RicactionType" json:"ric_action_type,omitempty" aper:"valueLB:0,valueUB:2,valueExt"`
	// @inject_tag: aper:"optional"
	RicActionDefinition *e2ap_commondatatypes.RicactionDefinition `protobuf:"bytes,3,opt,name=ric_action_definition,json=ricActionDefinition,proto3,oneof" json:"ric_action_definition,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional,valueExt"
	RicSubsequentAction *e2ap_ies.RicsubsequentAction `protobuf:"bytes,4,opt,name=ric_subsequent_action,json=ricSubsequentAction,proto3,oneof" json:"ric_subsequent_action,omitempty" aper:"optional,valueExt"`
}

func (x *RicactionToBeSetupItem) Reset() {
	*x = RicactionToBeSetupItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionToBeSetupItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionToBeSetupItem) ProtoMessage() {}

func (x *RicactionToBeSetupItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionToBeSetupItem.ProtoReflect.Descriptor instead.
func (*RicactionToBeSetupItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{7}
}

func (x *RicactionToBeSetupItem) GetRicActionId() *e2ap_ies.RicactionId {
	if x != nil {
		return x.RicActionId
	}
	return nil
}

func (x *RicactionToBeSetupItem) GetRicActionType() e2ap_ies.RicactionType {
	if x != nil {
		return x.RicActionType
	}
	return e2ap_ies.RicactionType(0)
}

func (x *RicactionToBeSetupItem) GetRicActionDefinition() *e2ap_commondatatypes.RicactionDefinition {
	if x != nil {
		return x.RicActionDefinition
	}
	return nil
}

func (x *RicactionToBeSetupItem) GetRicSubsequentAction() *e2ap_ies.RicsubsequentAction {
	if x != nil {
		return x.RicSubsequentAction
	}
	return nil
}

// sequence from e2ap_v2.asn:436
// {RICsubscriptionResponse}
type RicsubscriptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicsubscriptionResponseIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicsubscriptionResponse) Reset() {
	*x = RicsubscriptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionResponse) ProtoMessage() {}

func (x *RicsubscriptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionResponse.ProtoReflect.Descriptor instead.
func (*RicsubscriptionResponse) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{8}
}

func (x *RicsubscriptionResponse) GetProtocolIes() []*RicsubscriptionResponseIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:440
// {_RICsubscriptionResponse-IEs}
type RicsubscriptionResponseIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicsubscriptionResponseIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicsubscriptionResponseIes) Reset() {
	*x = RicsubscriptionResponseIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionResponseIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionResponseIes) ProtoMessage() {}

func (x *RicsubscriptionResponseIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionResponseIes.ProtoReflect.Descriptor instead.
func (*RicsubscriptionResponseIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{9}
}

func (x *RicsubscriptionResponseIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicsubscriptionResponseIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicsubscriptionResponseIes) GetValue() *RicsubscriptionResponseIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicsubscriptionResponseIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicsubscriptionResponseIe:
	//	*RicsubscriptionResponseIe_RicrequestId
	//	*RicsubscriptionResponseIe_RanfunctionId
	//	*RicsubscriptionResponseIe_RicactionsAdmitted
	//	*RicsubscriptionResponseIe_RicactionsNotAdmitted
	RicsubscriptionResponseIe isRicsubscriptionResponseIe_RicsubscriptionResponseIe `protobuf_oneof:"ricsubscription_response_ie"`
}

func (x *RicsubscriptionResponseIe) Reset() {
	*x = RicsubscriptionResponseIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionResponseIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionResponseIe) ProtoMessage() {}

func (x *RicsubscriptionResponseIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionResponseIe.ProtoReflect.Descriptor instead.
func (*RicsubscriptionResponseIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{10}
}

func (m *RicsubscriptionResponseIe) GetRicsubscriptionResponseIe() isRicsubscriptionResponseIe_RicsubscriptionResponseIe {
	if m != nil {
		return m.RicsubscriptionResponseIe
	}
	return nil
}

func (x *RicsubscriptionResponseIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRicsubscriptionResponseIe().(*RicsubscriptionResponseIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RicsubscriptionResponseIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRicsubscriptionResponseIe().(*RicsubscriptionResponseIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *RicsubscriptionResponseIe) GetRicactionsAdmitted() *RicactionAdmittedList {
	if x, ok := x.GetRicsubscriptionResponseIe().(*RicsubscriptionResponseIe_RicactionsAdmitted); ok {
		return x.RicactionsAdmitted
	}
	return nil
}

func (x *RicsubscriptionResponseIe) GetRicactionsNotAdmitted() *RicactionNotAdmittedList {
	if x, ok := x.GetRicsubscriptionResponseIe().(*RicsubscriptionResponseIe_RicactionsNotAdmitted); ok {
		return x.RicactionsNotAdmitted
	}
	return nil
}

type isRicsubscriptionResponseIe_RicsubscriptionResponseIe interface {
	isRicsubscriptionResponseIe_RicsubscriptionResponseIe()
}

type RicsubscriptionResponseIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RicsubscriptionResponseIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type RicsubscriptionResponseIe_RicactionsAdmitted struct {
	RicactionsAdmitted *RicactionAdmittedList `protobuf:"bytes,3,opt,name=ricactions_admitted,json=ricactionsAdmitted,proto3,oneof"`
}

type RicsubscriptionResponseIe_RicactionsNotAdmitted struct {
	RicactionsNotAdmitted *RicactionNotAdmittedList `protobuf:"bytes,4,opt,name=ricactions_not_admitted,json=ricactionsNotAdmitted,proto3,oneof"`
}

func (*RicsubscriptionResponseIe_RicrequestId) isRicsubscriptionResponseIe_RicsubscriptionResponseIe() {
}

func (*RicsubscriptionResponseIe_RanfunctionId) isRicsubscriptionResponseIe_RicsubscriptionResponseIe() {
}

func (*RicsubscriptionResponseIe_RicactionsAdmitted) isRicsubscriptionResponseIe_RicsubscriptionResponseIe() {
}

func (*RicsubscriptionResponseIe_RicactionsNotAdmitted) isRicsubscriptionResponseIe_RicsubscriptionResponseIe() {
}

// sequence from e2ap_v2.asn:450
// {RICaction-Admitted-List}
type RicactionAdmittedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:16"
	Value []*RicactionAdmittedItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:16"`
}

func (x *RicactionAdmittedList) Reset() {
	*x = RicactionAdmittedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionAdmittedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionAdmittedList) ProtoMessage() {}

func (x *RicactionAdmittedList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionAdmittedList.ProtoReflect.Descriptor instead.
func (*RicactionAdmittedList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{11}
}

func (x *RicactionAdmittedList) GetValue() []*RicactionAdmittedItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:452
// {_RICaction-Admitted-ItemIEs}
type RicactionAdmittedItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicactionAdmittedItemIe `protobuf:"bytes,3,opt,name=value,json=ricActionAdmittedItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicactionAdmittedItemIes) Reset() {
	*x = RicactionAdmittedItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionAdmittedItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionAdmittedItemIes) ProtoMessage() {}

func (x *RicactionAdmittedItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionAdmittedItemIes.ProtoReflect.Descriptor instead.
func (*RicactionAdmittedItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{12}
}

func (x *RicactionAdmittedItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicactionAdmittedItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicactionAdmittedItemIes) GetValue() *RicactionAdmittedItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicactionAdmittedItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicactionAdmittedItemIe:
	//	*RicactionAdmittedItemIe_RicactionAdmittedItem
	RicactionAdmittedItemIe isRicactionAdmittedItemIe_RicactionAdmittedItemIe `protobuf_oneof:"ricaction_admitted_item_ie"`
}

func (x *RicactionAdmittedItemIe) Reset() {
	*x = RicactionAdmittedItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionAdmittedItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionAdmittedItemIe) ProtoMessage() {}

func (x *RicactionAdmittedItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionAdmittedItemIe.ProtoReflect.Descriptor instead.
func (*RicactionAdmittedItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{13}
}

func (m *RicactionAdmittedItemIe) GetRicactionAdmittedItemIe() isRicactionAdmittedItemIe_RicactionAdmittedItemIe {
	if m != nil {
		return m.RicactionAdmittedItemIe
	}
	return nil
}

func (x *RicactionAdmittedItemIe) GetRicactionAdmittedItem() *RicactionAdmittedItem {
	if x, ok := x.GetRicactionAdmittedItemIe().(*RicactionAdmittedItemIe_RicactionAdmittedItem); ok {
		return x.RicactionAdmittedItem
	}
	return nil
}

type isRicactionAdmittedItemIe_RicactionAdmittedItemIe interface {
	isRicactionAdmittedItemIe_RicactionAdmittedItemIe()
}

type RicactionAdmittedItemIe_RicactionAdmittedItem struct {
	//@inject_tag: aper:"valueExt"
	RicactionAdmittedItem *RicactionAdmittedItem `protobuf:"bytes,1,opt,name=ricaction_admitted_item,json=ricactionAdmittedItem,proto3,oneof" aper:"valueExt"`
}

func (*RicactionAdmittedItemIe_RicactionAdmittedItem) isRicactionAdmittedItemIe_RicactionAdmittedItemIe() {
}

// sequence from e2ap_v2.asn:458
// {RICaction-Admitted-Item}
type RicactionAdmittedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicActionId *e2ap_ies.RicactionId `protobuf:"bytes,1,opt,name=ric_action_id,json=ricActionID,proto3" json:"ric_action_id,omitempty"`
}

func (x *RicactionAdmittedItem) Reset() {
	*x = RicactionAdmittedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionAdmittedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionAdmittedItem) ProtoMessage() {}

func (x *RicactionAdmittedItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionAdmittedItem.ProtoReflect.Descriptor instead.
func (*RicactionAdmittedItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{14}
}

func (x *RicactionAdmittedItem) GetRicActionId() *e2ap_ies.RicactionId {
	if x != nil {
		return x.RicActionId
	}
	return nil
}

// sequence from e2ap_v2.asn:462
// {RICaction-NotAdmitted-List}
type RicactionNotAdmittedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:16"
	Value []*RicactionNotAdmittedItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:0,sizeUB:16"`
}

func (x *RicactionNotAdmittedList) Reset() {
	*x = RicactionNotAdmittedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionNotAdmittedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionNotAdmittedList) ProtoMessage() {}

func (x *RicactionNotAdmittedList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionNotAdmittedList.ProtoReflect.Descriptor instead.
func (*RicactionNotAdmittedList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{15}
}

func (x *RicactionNotAdmittedList) GetValue() []*RicactionNotAdmittedItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:464
// {RICaction-NotAdmitted-ItemIEs}
type RicactionNotAdmittedItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicactionNotAdmittedItemIe `protobuf:"bytes,3,opt,name=value,json=ricActionNotAdmittedItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicactionNotAdmittedItemIes) Reset() {
	*x = RicactionNotAdmittedItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionNotAdmittedItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionNotAdmittedItemIes) ProtoMessage() {}

func (x *RicactionNotAdmittedItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionNotAdmittedItemIes.ProtoReflect.Descriptor instead.
func (*RicactionNotAdmittedItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{16}
}

func (x *RicactionNotAdmittedItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicactionNotAdmittedItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicactionNotAdmittedItemIes) GetValue() *RicactionNotAdmittedItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicactionNotAdmittedItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicactionNotAdmittedItemIe:
	//	*RicactionNotAdmittedItemIe_RicactionNotAdmittedItem
	RicactionNotAdmittedItemIe isRicactionNotAdmittedItemIe_RicactionNotAdmittedItemIe `protobuf_oneof:"ricaction_not_admitted_item_ie"`
}

func (x *RicactionNotAdmittedItemIe) Reset() {
	*x = RicactionNotAdmittedItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionNotAdmittedItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionNotAdmittedItemIe) ProtoMessage() {}

func (x *RicactionNotAdmittedItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionNotAdmittedItemIe.ProtoReflect.Descriptor instead.
func (*RicactionNotAdmittedItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{17}
}

func (m *RicactionNotAdmittedItemIe) GetRicactionNotAdmittedItemIe() isRicactionNotAdmittedItemIe_RicactionNotAdmittedItemIe {
	if m != nil {
		return m.RicactionNotAdmittedItemIe
	}
	return nil
}

func (x *RicactionNotAdmittedItemIe) GetRicactionNotAdmittedItem() *RicactionNotAdmittedItem {
	if x, ok := x.GetRicactionNotAdmittedItemIe().(*RicactionNotAdmittedItemIe_RicactionNotAdmittedItem); ok {
		return x.RicactionNotAdmittedItem
	}
	return nil
}

type isRicactionNotAdmittedItemIe_RicactionNotAdmittedItemIe interface {
	isRicactionNotAdmittedItemIe_RicactionNotAdmittedItemIe()
}

type RicactionNotAdmittedItemIe_RicactionNotAdmittedItem struct {
	//@inject_tag: aper:"valueExt"
	RicactionNotAdmittedItem *RicactionNotAdmittedItem `protobuf:"bytes,1,opt,name=ricaction_not_admitted_item,json=ricactionNotAdmittedItem,proto3,oneof" aper:"valueExt"`
}

func (*RicactionNotAdmittedItemIe_RicactionNotAdmittedItem) isRicactionNotAdmittedItemIe_RicactionNotAdmittedItemIe() {
}

// sequence from e2ap_v2.asn:470
// {RICaction-NotAdmitted-Item}
type RicactionNotAdmittedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicActionId *e2ap_ies.RicactionId `protobuf:"bytes,1,opt,name=ric_action_id,json=ricActionID,proto3" json:"ric_action_id,omitempty"`
	// @inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,2,opt,name=cause,proto3" json:"cause,omitempty" aper:"choiceExt"`
}

func (x *RicactionNotAdmittedItem) Reset() {
	*x = RicactionNotAdmittedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionNotAdmittedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionNotAdmittedItem) ProtoMessage() {}

func (x *RicactionNotAdmittedItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionNotAdmittedItem.ProtoReflect.Descriptor instead.
func (*RicactionNotAdmittedItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{18}
}

func (x *RicactionNotAdmittedItem) GetRicActionId() *e2ap_ies.RicactionId {
	if x != nil {
		return x.RicActionId
	}
	return nil
}

func (x *RicactionNotAdmittedItem) GetCause() *e2ap_ies.Cause {
	if x != nil {
		return x.Cause
	}
	return nil
}

// sequence from e2ap_v2.asn:481
// {RICsubscriptionFailure}
type RicsubscriptionFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicsubscriptionFailureIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicsubscriptionFailure) Reset() {
	*x = RicsubscriptionFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionFailure) ProtoMessage() {}

func (x *RicsubscriptionFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionFailure.ProtoReflect.Descriptor instead.
func (*RicsubscriptionFailure) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{19}
}

func (x *RicsubscriptionFailure) GetProtocolIes() []*RicsubscriptionFailureIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:485
// {_RICsubscriptionFailure-IEs}
type RicsubscriptionFailureIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicsubscriptionFailureIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicsubscriptionFailureIes) Reset() {
	*x = RicsubscriptionFailureIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionFailureIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionFailureIes) ProtoMessage() {}

func (x *RicsubscriptionFailureIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionFailureIes.ProtoReflect.Descriptor instead.
func (*RicsubscriptionFailureIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{20}
}

func (x *RicsubscriptionFailureIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicsubscriptionFailureIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicsubscriptionFailureIes) GetValue() *RicsubscriptionFailureIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicsubscriptionFailureIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicsubscriptionFailureIe:
	//	*RicsubscriptionFailureIe_RicrequestId
	//	*RicsubscriptionFailureIe_RanfunctionId
	//	*RicsubscriptionFailureIe_Cause
	//	*RicsubscriptionFailureIe_CriticalityDiagnostics
	RicsubscriptionFailureIe isRicsubscriptionFailureIe_RicsubscriptionFailureIe `protobuf_oneof:"ricsubscription_failure_ie"`
}

func (x *RicsubscriptionFailureIe) Reset() {
	*x = RicsubscriptionFailureIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionFailureIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionFailureIe) ProtoMessage() {}

func (x *RicsubscriptionFailureIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionFailureIe.ProtoReflect.Descriptor instead.
func (*RicsubscriptionFailureIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{21}
}

func (m *RicsubscriptionFailureIe) GetRicsubscriptionFailureIe() isRicsubscriptionFailureIe_RicsubscriptionFailureIe {
	if m != nil {
		return m.RicsubscriptionFailureIe
	}
	return nil
}

func (x *RicsubscriptionFailureIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRicsubscriptionFailureIe().(*RicsubscriptionFailureIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RicsubscriptionFailureIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRicsubscriptionFailureIe().(*RicsubscriptionFailureIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *RicsubscriptionFailureIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetRicsubscriptionFailureIe().(*RicsubscriptionFailureIe_Cause); ok {
		return x.Cause
	}
	return nil
}

func (x *RicsubscriptionFailureIe) GetCriticalityDiagnostics() *e2ap_ies.CriticalityDiagnostics {
	if x, ok := x.GetRicsubscriptionFailureIe().(*RicsubscriptionFailureIe_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

type isRicsubscriptionFailureIe_RicsubscriptionFailureIe interface {
	isRicsubscriptionFailureIe_RicsubscriptionFailureIe()
}

type RicsubscriptionFailureIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RicsubscriptionFailureIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type RicsubscriptionFailureIe_Cause struct {
	//@inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,3,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

type RicsubscriptionFailureIe_CriticalityDiagnostics struct {
	//@inject_tag: aper:"valueExt"
	CriticalityDiagnostics *e2ap_ies.CriticalityDiagnostics `protobuf:"bytes,4,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3,oneof" aper:"valueExt"`
}

func (*RicsubscriptionFailureIe_RicrequestId) isRicsubscriptionFailureIe_RicsubscriptionFailureIe() {}

func (*RicsubscriptionFailureIe_RanfunctionId) isRicsubscriptionFailureIe_RicsubscriptionFailureIe() {
}

func (*RicsubscriptionFailureIe_Cause) isRicsubscriptionFailureIe_RicsubscriptionFailureIe() {}

func (*RicsubscriptionFailureIe_CriticalityDiagnostics) isRicsubscriptionFailureIe_RicsubscriptionFailureIe() {
}

// sequence from e2ap_v2.asn:504
// {RICsubscriptionDeleteRequest}
type RicsubscriptionDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicsubscriptionDeleteRequestIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicsubscriptionDeleteRequest) Reset() {
	*x = RicsubscriptionDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteRequest) ProtoMessage() {}

func (x *RicsubscriptionDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteRequest.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteRequest) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{22}
}

func (x *RicsubscriptionDeleteRequest) GetProtocolIes() []*RicsubscriptionDeleteRequestIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:508
// {_RICsubscriptionDeleteRequest-IEs}
type RicsubscriptionDeleteRequestIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicsubscriptionDeleteRequestIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicsubscriptionDeleteRequestIes) Reset() {
	*x = RicsubscriptionDeleteRequestIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteRequestIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteRequestIes) ProtoMessage() {}

func (x *RicsubscriptionDeleteRequestIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteRequestIes.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteRequestIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{23}
}

func (x *RicsubscriptionDeleteRequestIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicsubscriptionDeleteRequestIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicsubscriptionDeleteRequestIes) GetValue() *RicsubscriptionDeleteRequestIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicsubscriptionDeleteRequestIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicsubscriptionDeleteRequestIe:
	//	*RicsubscriptionDeleteRequestIe_RicrequestId
	//	*RicsubscriptionDeleteRequestIe_RanfunctionId
	RicsubscriptionDeleteRequestIe isRicsubscriptionDeleteRequestIe_RicsubscriptionDeleteRequestIe `protobuf_oneof:"ricsubscription_delete_request_ie"`
}

func (x *RicsubscriptionDeleteRequestIe) Reset() {
	*x = RicsubscriptionDeleteRequestIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteRequestIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteRequestIe) ProtoMessage() {}

func (x *RicsubscriptionDeleteRequestIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteRequestIe.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteRequestIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{24}
}

func (m *RicsubscriptionDeleteRequestIe) GetRicsubscriptionDeleteRequestIe() isRicsubscriptionDeleteRequestIe_RicsubscriptionDeleteRequestIe {
	if m != nil {
		return m.RicsubscriptionDeleteRequestIe
	}
	return nil
}

func (x *RicsubscriptionDeleteRequestIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRicsubscriptionDeleteRequestIe().(*RicsubscriptionDeleteRequestIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RicsubscriptionDeleteRequestIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRicsubscriptionDeleteRequestIe().(*RicsubscriptionDeleteRequestIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

type isRicsubscriptionDeleteRequestIe_RicsubscriptionDeleteRequestIe interface {
	isRicsubscriptionDeleteRequestIe_RicsubscriptionDeleteRequestIe()
}

type RicsubscriptionDeleteRequestIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RicsubscriptionDeleteRequestIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

func (*RicsubscriptionDeleteRequestIe_RicrequestId) isRicsubscriptionDeleteRequestIe_RicsubscriptionDeleteRequestIe() {
}

func (*RicsubscriptionDeleteRequestIe_RanfunctionId) isRicsubscriptionDeleteRequestIe_RicsubscriptionDeleteRequestIe() {
}

// sequence from e2ap_v2.asn:520
// {RICsubscriptionDeleteResponse}
type RicsubscriptionDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicsubscriptionDeleteResponseIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicsubscriptionDeleteResponse) Reset() {
	*x = RicsubscriptionDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteResponse) ProtoMessage() {}

func (x *RicsubscriptionDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteResponse.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteResponse) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{25}
}

func (x *RicsubscriptionDeleteResponse) GetProtocolIes() []*RicsubscriptionDeleteResponseIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:524
// {_RICsubscriptionDeleteResponse-IEs}
type RicsubscriptionDeleteResponseIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicsubscriptionDeleteResponseIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicsubscriptionDeleteResponseIes) Reset() {
	*x = RicsubscriptionDeleteResponseIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteResponseIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteResponseIes) ProtoMessage() {}

func (x *RicsubscriptionDeleteResponseIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteResponseIes.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteResponseIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{26}
}

func (x *RicsubscriptionDeleteResponseIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicsubscriptionDeleteResponseIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicsubscriptionDeleteResponseIes) GetValue() *RicsubscriptionDeleteResponseIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicsubscriptionDeleteResponseIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicsubscriptionDeleteResponseIe:
	//	*RicsubscriptionDeleteResponseIe_RicrequestId
	//	*RicsubscriptionDeleteResponseIe_RanfunctionId
	RicsubscriptionDeleteResponseIe isRicsubscriptionDeleteResponseIe_RicsubscriptionDeleteResponseIe `protobuf_oneof:"ricsubscription_delete_response_ie"`
}

func (x *RicsubscriptionDeleteResponseIe) Reset() {
	*x = RicsubscriptionDeleteResponseIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteResponseIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteResponseIe) ProtoMessage() {}

func (x *RicsubscriptionDeleteResponseIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteResponseIe.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteResponseIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{27}
}

func (m *RicsubscriptionDeleteResponseIe) GetRicsubscriptionDeleteResponseIe() isRicsubscriptionDeleteResponseIe_RicsubscriptionDeleteResponseIe {
	if m != nil {
		return m.RicsubscriptionDeleteResponseIe
	}
	return nil
}

func (x *RicsubscriptionDeleteResponseIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRicsubscriptionDeleteResponseIe().(*RicsubscriptionDeleteResponseIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RicsubscriptionDeleteResponseIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRicsubscriptionDeleteResponseIe().(*RicsubscriptionDeleteResponseIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

type isRicsubscriptionDeleteResponseIe_RicsubscriptionDeleteResponseIe interface {
	isRicsubscriptionDeleteResponseIe_RicsubscriptionDeleteResponseIe()
}

type RicsubscriptionDeleteResponseIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RicsubscriptionDeleteResponseIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

func (*RicsubscriptionDeleteResponseIe_RicrequestId) isRicsubscriptionDeleteResponseIe_RicsubscriptionDeleteResponseIe() {
}

func (*RicsubscriptionDeleteResponseIe_RanfunctionId) isRicsubscriptionDeleteResponseIe_RicsubscriptionDeleteResponseIe() {
}

// sequence from e2ap_v2.asn:535
// {RICsubscriptionDeleteFailure}
type RicsubscriptionDeleteFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicsubscriptionDeleteFailureIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicsubscriptionDeleteFailure) Reset() {
	*x = RicsubscriptionDeleteFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteFailure) ProtoMessage() {}

func (x *RicsubscriptionDeleteFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteFailure.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteFailure) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{28}
}

func (x *RicsubscriptionDeleteFailure) GetProtocolIes() []*RicsubscriptionDeleteFailureIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:539
// {_RICsubscriptionDeleteFailure-IEs}
type RicsubscriptionDeleteFailureIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicsubscriptionDeleteFailureIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicsubscriptionDeleteFailureIes) Reset() {
	*x = RicsubscriptionDeleteFailureIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteFailureIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteFailureIes) ProtoMessage() {}

func (x *RicsubscriptionDeleteFailureIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteFailureIes.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteFailureIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{29}
}

func (x *RicsubscriptionDeleteFailureIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicsubscriptionDeleteFailureIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicsubscriptionDeleteFailureIes) GetValue() *RicsubscriptionDeleteFailureIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicsubscriptionDeleteFailureIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicsubscriptionDeleteFailureIe:
	//	*RicsubscriptionDeleteFailureIe_RicrequestId
	//	*RicsubscriptionDeleteFailureIe_RanfunctionId
	//	*RicsubscriptionDeleteFailureIe_Cause
	//	*RicsubscriptionDeleteFailureIe_CriticalityDiagnostics
	RicsubscriptionDeleteFailureIe isRicsubscriptionDeleteFailureIe_RicsubscriptionDeleteFailureIe `protobuf_oneof:"ricsubscription_delete_failure_ie"`
}

func (x *RicsubscriptionDeleteFailureIe) Reset() {
	*x = RicsubscriptionDeleteFailureIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteFailureIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteFailureIe) ProtoMessage() {}

func (x *RicsubscriptionDeleteFailureIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteFailureIe.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteFailureIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{30}
}

func (m *RicsubscriptionDeleteFailureIe) GetRicsubscriptionDeleteFailureIe() isRicsubscriptionDeleteFailureIe_RicsubscriptionDeleteFailureIe {
	if m != nil {
		return m.RicsubscriptionDeleteFailureIe
	}
	return nil
}

func (x *RicsubscriptionDeleteFailureIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRicsubscriptionDeleteFailureIe().(*RicsubscriptionDeleteFailureIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RicsubscriptionDeleteFailureIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRicsubscriptionDeleteFailureIe().(*RicsubscriptionDeleteFailureIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *RicsubscriptionDeleteFailureIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetRicsubscriptionDeleteFailureIe().(*RicsubscriptionDeleteFailureIe_Cause); ok {
		return x.Cause
	}
	return nil
}

func (x *RicsubscriptionDeleteFailureIe) GetCriticalityDiagnostics() *e2ap_ies.CriticalityDiagnostics {
	if x, ok := x.GetRicsubscriptionDeleteFailureIe().(*RicsubscriptionDeleteFailureIe_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

type isRicsubscriptionDeleteFailureIe_RicsubscriptionDeleteFailureIe interface {
	isRicsubscriptionDeleteFailureIe_RicsubscriptionDeleteFailureIe()
}

type RicsubscriptionDeleteFailureIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RicsubscriptionDeleteFailureIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type RicsubscriptionDeleteFailureIe_Cause struct {
	//@inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,3,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

type RicsubscriptionDeleteFailureIe_CriticalityDiagnostics struct {
	//@inject_tag: aper:"valueExt"
	CriticalityDiagnostics *e2ap_ies.CriticalityDiagnostics `protobuf:"bytes,4,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3,oneof" aper:"valueExt"`
}

func (*RicsubscriptionDeleteFailureIe_RicrequestId) isRicsubscriptionDeleteFailureIe_RicsubscriptionDeleteFailureIe() {
}

func (*RicsubscriptionDeleteFailureIe_RanfunctionId) isRicsubscriptionDeleteFailureIe_RicsubscriptionDeleteFailureIe() {
}

func (*RicsubscriptionDeleteFailureIe_Cause) isRicsubscriptionDeleteFailureIe_RicsubscriptionDeleteFailureIe() {
}

func (*RicsubscriptionDeleteFailureIe_CriticalityDiagnostics) isRicsubscriptionDeleteFailureIe_RicsubscriptionDeleteFailureIe() {
}

// sequence from e2ap_v2.asn:559
// {RICsubscriptionDeleteRequired}
type RicsubscriptionDeleteRequired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicsubscriptionDeleteRequiredIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicsubscriptionDeleteRequired) Reset() {
	*x = RicsubscriptionDeleteRequired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteRequired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteRequired) ProtoMessage() {}

func (x *RicsubscriptionDeleteRequired) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteRequired.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteRequired) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{31}
}

func (x *RicsubscriptionDeleteRequired) GetProtocolIes() []*RicsubscriptionDeleteRequiredIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:563
// {_RICsubscriptionDeleteRequired-IEs}
type RicsubscriptionDeleteRequiredIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicsubscriptionDeleteRequiredIe `protobuf:"bytes,3,opt,name=value,json=ricSubscriptionListWithCause,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicsubscriptionDeleteRequiredIes) Reset() {
	*x = RicsubscriptionDeleteRequiredIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteRequiredIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteRequiredIes) ProtoMessage() {}

func (x *RicsubscriptionDeleteRequiredIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteRequiredIes.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteRequiredIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{32}
}

func (x *RicsubscriptionDeleteRequiredIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicsubscriptionDeleteRequiredIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicsubscriptionDeleteRequiredIes) GetValue() *RicsubscriptionDeleteRequiredIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicsubscriptionDeleteRequiredIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicsubscriptionDeleteRequiredIe:
	//	*RicsubscriptionDeleteRequiredIe_RicsubscriptionToBeRemoved
	RicsubscriptionDeleteRequiredIe isRicsubscriptionDeleteRequiredIe_RicsubscriptionDeleteRequiredIe `protobuf_oneof:"ricsubscription_delete_required_ie"`
}

func (x *RicsubscriptionDeleteRequiredIe) Reset() {
	*x = RicsubscriptionDeleteRequiredIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionDeleteRequiredIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionDeleteRequiredIe) ProtoMessage() {}

func (x *RicsubscriptionDeleteRequiredIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionDeleteRequiredIe.ProtoReflect.Descriptor instead.
func (*RicsubscriptionDeleteRequiredIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{33}
}

func (m *RicsubscriptionDeleteRequiredIe) GetRicsubscriptionDeleteRequiredIe() isRicsubscriptionDeleteRequiredIe_RicsubscriptionDeleteRequiredIe {
	if m != nil {
		return m.RicsubscriptionDeleteRequiredIe
	}
	return nil
}

func (x *RicsubscriptionDeleteRequiredIe) GetRicsubscriptionToBeRemoved() *RicsubscriptionListWithCause {
	if x, ok := x.GetRicsubscriptionDeleteRequiredIe().(*RicsubscriptionDeleteRequiredIe_RicsubscriptionToBeRemoved); ok {
		return x.RicsubscriptionToBeRemoved
	}
	return nil
}

type isRicsubscriptionDeleteRequiredIe_RicsubscriptionDeleteRequiredIe interface {
	isRicsubscriptionDeleteRequiredIe_RicsubscriptionDeleteRequiredIe()
}

type RicsubscriptionDeleteRequiredIe_RicsubscriptionToBeRemoved struct {
	RicsubscriptionToBeRemoved *RicsubscriptionListWithCause `protobuf:"bytes,1,opt,name=ricsubscription_to_be_removed,json=ricsubscriptionToBeRemoved,proto3,oneof"`
}

func (*RicsubscriptionDeleteRequiredIe_RicsubscriptionToBeRemoved) isRicsubscriptionDeleteRequiredIe_RicsubscriptionDeleteRequiredIe() {
}

// sequence from e2ap_v2.asn:568
// {RICsubscription-List-withCause}
type RicsubscriptionListWithCause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:4294967295"
	Value []*RicsubscriptionWithCauseItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:4294967295"`
}

func (x *RicsubscriptionListWithCause) Reset() {
	*x = RicsubscriptionListWithCause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionListWithCause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionListWithCause) ProtoMessage() {}

func (x *RicsubscriptionListWithCause) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionListWithCause.ProtoReflect.Descriptor instead.
func (*RicsubscriptionListWithCause) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{34}
}

func (x *RicsubscriptionListWithCause) GetValue() []*RicsubscriptionWithCauseItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:570
// {_RICsubscription-withCause-ItemIEs}
type RicsubscriptionWithCauseItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicsubscriptionWithCauseItemIe `protobuf:"bytes,3,opt,name=value,json=ricSubscriptionListWithCause,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicsubscriptionWithCauseItemIes) Reset() {
	*x = RicsubscriptionWithCauseItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionWithCauseItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionWithCauseItemIes) ProtoMessage() {}

func (x *RicsubscriptionWithCauseItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionWithCauseItemIes.ProtoReflect.Descriptor instead.
func (*RicsubscriptionWithCauseItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{35}
}

func (x *RicsubscriptionWithCauseItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicsubscriptionWithCauseItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicsubscriptionWithCauseItemIes) GetValue() *RicsubscriptionWithCauseItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicsubscriptionWithCauseItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicsubscriptionWithCauseItemIe:
	//	*RicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItem
	RicsubscriptionWithCauseItemIe isRicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItemIe `protobuf_oneof:"ricsubscription_with_cause_item_ie"`
}

func (x *RicsubscriptionWithCauseItemIe) Reset() {
	*x = RicsubscriptionWithCauseItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionWithCauseItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionWithCauseItemIe) ProtoMessage() {}

func (x *RicsubscriptionWithCauseItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionWithCauseItemIe.ProtoReflect.Descriptor instead.
func (*RicsubscriptionWithCauseItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{36}
}

func (m *RicsubscriptionWithCauseItemIe) GetRicsubscriptionWithCauseItemIe() isRicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItemIe {
	if m != nil {
		return m.RicsubscriptionWithCauseItemIe
	}
	return nil
}

func (x *RicsubscriptionWithCauseItemIe) GetRicsubscriptionWithCauseItem() *RicsubscriptionWithCauseItem {
	if x, ok := x.GetRicsubscriptionWithCauseItemIe().(*RicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItem); ok {
		return x.RicsubscriptionWithCauseItem
	}
	return nil
}

type isRicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItemIe interface {
	isRicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItemIe()
}

type RicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItem struct {
	//@inject_tag: aper:"valueExt"
	RicsubscriptionWithCauseItem *RicsubscriptionWithCauseItem `protobuf:"bytes,1,opt,name=ricsubscription_with_cause_item,json=ricsubscriptionWithCauseItem,proto3,oneof" aper:"valueExt"`
}

func (*RicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItem) isRicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItemIe() {
}

// sequence from e2ap_v2.asn:576
// {RICsubscription-withCause-Item}
type RicsubscriptionWithCauseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	RicRequestId  *e2ap_ies.RicrequestId  `protobuf:"bytes,1,opt,name=ric_request_id,json=ricRequestID,proto3" json:"ric_request_id,omitempty" aper:"valueExt"`
	RanFunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ran_function_id,json=ranFunctionID,proto3" json:"ran_function_id,omitempty"`
	// @inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,3,opt,name=cause,proto3" json:"cause,omitempty" aper:"choiceExt"`
}

func (x *RicsubscriptionWithCauseItem) Reset() {
	*x = RicsubscriptionWithCauseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubscriptionWithCauseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubscriptionWithCauseItem) ProtoMessage() {}

func (x *RicsubscriptionWithCauseItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubscriptionWithCauseItem.ProtoReflect.Descriptor instead.
func (*RicsubscriptionWithCauseItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{37}
}

func (x *RicsubscriptionWithCauseItem) GetRicRequestId() *e2ap_ies.RicrequestId {
	if x != nil {
		return x.RicRequestId
	}
	return nil
}

func (x *RicsubscriptionWithCauseItem) GetRanFunctionId() *e2ap_ies.RanfunctionId {
	if x != nil {
		return x.RanFunctionId
	}
	return nil
}

func (x *RicsubscriptionWithCauseItem) GetCause() *e2ap_ies.Cause {
	if x != nil {
		return x.Cause
	}
	return nil
}

// sequence from e2ap_v2.asn:593
// {RICindication}
type Ricindication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicindicationIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *Ricindication) Reset() {
	*x = Ricindication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ricindication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ricindication) ProtoMessage() {}

func (x *Ricindication) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ricindication.ProtoReflect.Descriptor instead.
func (*Ricindication) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{38}
}

func (x *Ricindication) GetProtocolIes() []*RicindicationIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:597
// {_RICindication-IEs}
type RicindicationIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicindicationIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicindicationIes) Reset() {
	*x = RicindicationIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicindicationIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicindicationIes) ProtoMessage() {}

func (x *RicindicationIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicindicationIes.ProtoReflect.Descriptor instead.
func (*RicindicationIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{39}
}

func (x *RicindicationIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicindicationIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicindicationIes) GetValue() *RicindicationIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicindicationIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicindicationIe:
	//	*RicindicationIe_RicrequestId
	//	*RicindicationIe_RanfunctionId
	//	*RicindicationIe_RicactionId
	//	*RicindicationIe_RicindicationSn
	//	*RicindicationIe_RicindicationType
	//	*RicindicationIe_RicindicationHeader
	//	*RicindicationIe_RicindicationMessage
	//	*RicindicationIe_RiccallProcessId
	RicindicationIe isRicindicationIe_RicindicationIe `protobuf_oneof:"ricindication_ie"`
}

func (x *RicindicationIe) Reset() {
	*x = RicindicationIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicindicationIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicindicationIe) ProtoMessage() {}

func (x *RicindicationIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicindicationIe.ProtoReflect.Descriptor instead.
func (*RicindicationIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{40}
}

func (m *RicindicationIe) GetRicindicationIe() isRicindicationIe_RicindicationIe {
	if m != nil {
		return m.RicindicationIe
	}
	return nil
}

func (x *RicindicationIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRicindicationIe().(*RicindicationIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RicindicationIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRicindicationIe().(*RicindicationIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *RicindicationIe) GetRicactionId() *e2ap_ies.RicactionId {
	if x, ok := x.GetRicindicationIe().(*RicindicationIe_RicactionId); ok {
		return x.RicactionId
	}
	return nil
}

func (x *RicindicationIe) GetRicindicationSn() *e2ap_ies.RicindicationSn {
	if x, ok := x.GetRicindicationIe().(*RicindicationIe_RicindicationSn); ok {
		return x.RicindicationSn
	}
	return nil
}

func (x *RicindicationIe) GetRicindicationType() e2ap_ies.RicindicationType {
	if x, ok := x.GetRicindicationIe().(*RicindicationIe_RicindicationType); ok {
		return x.RicindicationType
	}
	return e2ap_ies.RicindicationType(0)
}

func (x *RicindicationIe) GetRicindicationHeader() *e2ap_commondatatypes.RicindicationHeader {
	if x, ok := x.GetRicindicationIe().(*RicindicationIe_RicindicationHeader); ok {
		return x.RicindicationHeader
	}
	return nil
}

func (x *RicindicationIe) GetRicindicationMessage() *e2ap_commondatatypes.RicindicationMessage {
	if x, ok := x.GetRicindicationIe().(*RicindicationIe_RicindicationMessage); ok {
		return x.RicindicationMessage
	}
	return nil
}

func (x *RicindicationIe) GetRiccallProcessId() *e2ap_commondatatypes.RiccallProcessId {
	if x, ok := x.GetRicindicationIe().(*RicindicationIe_RiccallProcessId); ok {
		return x.RiccallProcessId
	}
	return nil
}

type isRicindicationIe_RicindicationIe interface {
	isRicindicationIe_RicindicationIe()
}

type RicindicationIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RicindicationIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type RicindicationIe_RicactionId struct {
	RicactionId *e2ap_ies.RicactionId `protobuf:"bytes,3,opt,name=ricaction_id,json=ricactionId,proto3,oneof"`
}

type RicindicationIe_RicindicationSn struct {
	RicindicationSn *e2ap_ies.RicindicationSn `protobuf:"bytes,4,opt,name=ricindication_sn,json=ricindicationSn,proto3,oneof"`
}

type RicindicationIe_RicindicationType struct {
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:1"
	RicindicationType e2ap_ies.RicindicationType `protobuf:"varint,5,opt,name=ricindication_type,json=ricindicationType,proto3,enum=e2ap.v2.RicindicationType,oneof" aper:"valueExt,valueLB:0,valueUB:1"`
}

type RicindicationIe_RicindicationHeader struct {
	RicindicationHeader *e2ap_commondatatypes.RicindicationHeader `protobuf:"bytes,6,opt,name=ricindication_header,json=ricindicationHeader,proto3,oneof"`
}

type RicindicationIe_RicindicationMessage struct {
	RicindicationMessage *e2ap_commondatatypes.RicindicationMessage `protobuf:"bytes,7,opt,name=ricindication_message,json=ricindicationMessage,proto3,oneof"`
}

type RicindicationIe_RiccallProcessId struct {
	RiccallProcessId *e2ap_commondatatypes.RiccallProcessId `protobuf:"bytes,8,opt,name=riccall_process_id,json=riccallProcessId,proto3,oneof"`
}

func (*RicindicationIe_RicrequestId) isRicindicationIe_RicindicationIe() {}

func (*RicindicationIe_RanfunctionId) isRicindicationIe_RicindicationIe() {}

func (*RicindicationIe_RicactionId) isRicindicationIe_RicindicationIe() {}

func (*RicindicationIe_RicindicationSn) isRicindicationIe_RicindicationIe() {}

func (*RicindicationIe_RicindicationType) isRicindicationIe_RicindicationIe() {}

func (*RicindicationIe_RicindicationHeader) isRicindicationIe_RicindicationIe() {}

func (*RicindicationIe_RicindicationMessage) isRicindicationIe_RicindicationIe() {}

func (*RicindicationIe_RiccallProcessId) isRicindicationIe_RicindicationIe() {}

// sequence from e2ap_v2.asn:620
// {RICcontrolRequest}
type RiccontrolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RiccontrolRequestIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RiccontrolRequest) Reset() {
	*x = RiccontrolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolRequest) ProtoMessage() {}

func (x *RiccontrolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolRequest.ProtoReflect.Descriptor instead.
func (*RiccontrolRequest) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{41}
}

func (x *RiccontrolRequest) GetProtocolIes() []*RiccontrolRequestIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:624
// {_RICcontrolRequest-IEs}
type RiccontrolRequestIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RiccontrolRequestIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RiccontrolRequestIes) Reset() {
	*x = RiccontrolRequestIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolRequestIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolRequestIes) ProtoMessage() {}

func (x *RiccontrolRequestIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolRequestIes.ProtoReflect.Descriptor instead.
func (*RiccontrolRequestIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{42}
}

func (x *RiccontrolRequestIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RiccontrolRequestIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RiccontrolRequestIes) GetValue() *RiccontrolRequestIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RiccontrolRequestIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RiccontrolRequestIe:
	//	*RiccontrolRequestIe_RicrequestId
	//	*RiccontrolRequestIe_RanfunctionId
	//	*RiccontrolRequestIe_RiccallProcessId
	//	*RiccontrolRequestIe_RiccontrolHeader
	//	*RiccontrolRequestIe_RiccontrolMessage
	//	*RiccontrolRequestIe_RiccontrolAckRequest
	RiccontrolRequestIe isRiccontrolRequestIe_RiccontrolRequestIe `protobuf_oneof:"riccontrol_request_ie"`
}

func (x *RiccontrolRequestIe) Reset() {
	*x = RiccontrolRequestIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolRequestIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolRequestIe) ProtoMessage() {}

func (x *RiccontrolRequestIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolRequestIe.ProtoReflect.Descriptor instead.
func (*RiccontrolRequestIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{43}
}

func (m *RiccontrolRequestIe) GetRiccontrolRequestIe() isRiccontrolRequestIe_RiccontrolRequestIe {
	if m != nil {
		return m.RiccontrolRequestIe
	}
	return nil
}

func (x *RiccontrolRequestIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRiccontrolRequestIe().(*RiccontrolRequestIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RiccontrolRequestIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRiccontrolRequestIe().(*RiccontrolRequestIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *RiccontrolRequestIe) GetRiccallProcessId() *e2ap_commondatatypes.RiccallProcessId {
	if x, ok := x.GetRiccontrolRequestIe().(*RiccontrolRequestIe_RiccallProcessId); ok {
		return x.RiccallProcessId
	}
	return nil
}

func (x *RiccontrolRequestIe) GetRiccontrolHeader() *e2ap_commondatatypes.RiccontrolHeader {
	if x, ok := x.GetRiccontrolRequestIe().(*RiccontrolRequestIe_RiccontrolHeader); ok {
		return x.RiccontrolHeader
	}
	return nil
}

func (x *RiccontrolRequestIe) GetRiccontrolMessage() *e2ap_commondatatypes.RiccontrolMessage {
	if x, ok := x.GetRiccontrolRequestIe().(*RiccontrolRequestIe_RiccontrolMessage); ok {
		return x.RiccontrolMessage
	}
	return nil
}

func (x *RiccontrolRequestIe) GetRiccontrolAckRequest() e2ap_ies.RiccontrolAckRequest {
	if x, ok := x.GetRiccontrolRequestIe().(*RiccontrolRequestIe_RiccontrolAckRequest); ok {
		return x.RiccontrolAckRequest
	}
	return e2ap_ies.RiccontrolAckRequest(0)
}

type isRiccontrolRequestIe_RiccontrolRequestIe interface {
	isRiccontrolRequestIe_RiccontrolRequestIe()
}

type RiccontrolRequestIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RiccontrolRequestIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type RiccontrolRequestIe_RiccallProcessId struct {
	RiccallProcessId *e2ap_commondatatypes.RiccallProcessId `protobuf:"bytes,3,opt,name=riccall_process_id,json=riccallProcessId,proto3,oneof"`
}

type RiccontrolRequestIe_RiccontrolHeader struct {
	RiccontrolHeader *e2ap_commondatatypes.RiccontrolHeader `protobuf:"bytes,4,opt,name=riccontrol_header,json=riccontrolHeader,proto3,oneof"`
}

type RiccontrolRequestIe_RiccontrolMessage struct {
	RiccontrolMessage *e2ap_commondatatypes.RiccontrolMessage `protobuf:"bytes,5,opt,name=riccontrol_message,json=riccontrolMessage,proto3,oneof"`
}

type RiccontrolRequestIe_RiccontrolAckRequest struct {
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:1"
	RiccontrolAckRequest e2ap_ies.RiccontrolAckRequest `protobuf:"varint,6,opt,name=riccontrol_ack_request,json=riccontrolAckRequest,proto3,enum=e2ap.v2.RiccontrolAckRequest,oneof" aper:"valueExt,valueLB:0,valueUB:1"`
}

func (*RiccontrolRequestIe_RicrequestId) isRiccontrolRequestIe_RiccontrolRequestIe() {}

func (*RiccontrolRequestIe_RanfunctionId) isRiccontrolRequestIe_RiccontrolRequestIe() {}

func (*RiccontrolRequestIe_RiccallProcessId) isRiccontrolRequestIe_RiccontrolRequestIe() {}

func (*RiccontrolRequestIe_RiccontrolHeader) isRiccontrolRequestIe_RiccontrolRequestIe() {}

func (*RiccontrolRequestIe_RiccontrolMessage) isRiccontrolRequestIe_RiccontrolRequestIe() {}

func (*RiccontrolRequestIe_RiccontrolAckRequest) isRiccontrolRequestIe_RiccontrolRequestIe() {}

// sequence from e2ap_v2.asn:639
// {RICcontrolAcknowledge}
type RiccontrolAcknowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RiccontrolAcknowledgeIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RiccontrolAcknowledge) Reset() {
	*x = RiccontrolAcknowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolAcknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolAcknowledge) ProtoMessage() {}

func (x *RiccontrolAcknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolAcknowledge.ProtoReflect.Descriptor instead.
func (*RiccontrolAcknowledge) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{44}
}

func (x *RiccontrolAcknowledge) GetProtocolIes() []*RiccontrolAcknowledgeIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:643
// {_RICcontrolAcknowledge-IEs}
type RiccontrolAcknowledgeIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RiccontrolAcknowledgeIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RiccontrolAcknowledgeIes) Reset() {
	*x = RiccontrolAcknowledgeIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolAcknowledgeIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolAcknowledgeIes) ProtoMessage() {}

func (x *RiccontrolAcknowledgeIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolAcknowledgeIes.ProtoReflect.Descriptor instead.
func (*RiccontrolAcknowledgeIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{45}
}

func (x *RiccontrolAcknowledgeIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RiccontrolAcknowledgeIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RiccontrolAcknowledgeIes) GetValue() *RiccontrolAcknowledgeIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RiccontrolAcknowledgeIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RiccontrolAcknowledgeIe:
	//	*RiccontrolAcknowledgeIe_RicrequestId
	//	*RiccontrolAcknowledgeIe_RanfunctionId
	//	*RiccontrolAcknowledgeIe_RiccallProcessId
	//	*RiccontrolAcknowledgeIe_RiccontrolOutcome
	RiccontrolAcknowledgeIe isRiccontrolAcknowledgeIe_RiccontrolAcknowledgeIe `protobuf_oneof:"riccontrol_acknowledge_ie"`
}

func (x *RiccontrolAcknowledgeIe) Reset() {
	*x = RiccontrolAcknowledgeIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolAcknowledgeIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolAcknowledgeIe) ProtoMessage() {}

func (x *RiccontrolAcknowledgeIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolAcknowledgeIe.ProtoReflect.Descriptor instead.
func (*RiccontrolAcknowledgeIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{46}
}

func (m *RiccontrolAcknowledgeIe) GetRiccontrolAcknowledgeIe() isRiccontrolAcknowledgeIe_RiccontrolAcknowledgeIe {
	if m != nil {
		return m.RiccontrolAcknowledgeIe
	}
	return nil
}

func (x *RiccontrolAcknowledgeIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRiccontrolAcknowledgeIe().(*RiccontrolAcknowledgeIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RiccontrolAcknowledgeIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRiccontrolAcknowledgeIe().(*RiccontrolAcknowledgeIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *RiccontrolAcknowledgeIe) GetRiccallProcessId() *e2ap_commondatatypes.RiccallProcessId {
	if x, ok := x.GetRiccontrolAcknowledgeIe().(*RiccontrolAcknowledgeIe_RiccallProcessId); ok {
		return x.RiccallProcessId
	}
	return nil
}

func (x *RiccontrolAcknowledgeIe) GetRiccontrolOutcome() *e2ap_commondatatypes.RiccontrolOutcome {
	if x, ok := x.GetRiccontrolAcknowledgeIe().(*RiccontrolAcknowledgeIe_RiccontrolOutcome); ok {
		return x.RiccontrolOutcome
	}
	return nil
}

type isRiccontrolAcknowledgeIe_RiccontrolAcknowledgeIe interface {
	isRiccontrolAcknowledgeIe_RiccontrolAcknowledgeIe()
}

type RiccontrolAcknowledgeIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RiccontrolAcknowledgeIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type RiccontrolAcknowledgeIe_RiccallProcessId struct {
	RiccallProcessId *e2ap_commondatatypes.RiccallProcessId `protobuf:"bytes,3,opt,name=riccall_process_id,json=riccallProcessId,proto3,oneof"`
}

type RiccontrolAcknowledgeIe_RiccontrolOutcome struct {
	RiccontrolOutcome *e2ap_commondatatypes.RiccontrolOutcome `protobuf:"bytes,4,opt,name=riccontrol_outcome,json=riccontrolOutcome,proto3,oneof"`
}

func (*RiccontrolAcknowledgeIe_RicrequestId) isRiccontrolAcknowledgeIe_RiccontrolAcknowledgeIe() {}

func (*RiccontrolAcknowledgeIe_RanfunctionId) isRiccontrolAcknowledgeIe_RiccontrolAcknowledgeIe() {}

func (*RiccontrolAcknowledgeIe_RiccallProcessId) isRiccontrolAcknowledgeIe_RiccontrolAcknowledgeIe() {
}

func (*RiccontrolAcknowledgeIe_RiccontrolOutcome) isRiccontrolAcknowledgeIe_RiccontrolAcknowledgeIe() {
}

// sequence from e2ap_v2.asn:656
// {RICcontrolFailure}
type RiccontrolFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RiccontrolFailureIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RiccontrolFailure) Reset() {
	*x = RiccontrolFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolFailure) ProtoMessage() {}

func (x *RiccontrolFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolFailure.ProtoReflect.Descriptor instead.
func (*RiccontrolFailure) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{47}
}

func (x *RiccontrolFailure) GetProtocolIes() []*RiccontrolFailureIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:660
// {_RICcontrolFailure-IEs}
type RiccontrolFailureIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RiccontrolFailureIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RiccontrolFailureIes) Reset() {
	*x = RiccontrolFailureIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolFailureIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolFailureIes) ProtoMessage() {}

func (x *RiccontrolFailureIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolFailureIes.ProtoReflect.Descriptor instead.
func (*RiccontrolFailureIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{48}
}

func (x *RiccontrolFailureIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RiccontrolFailureIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RiccontrolFailureIes) GetValue() *RiccontrolFailureIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RiccontrolFailureIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RiccontrolFailureIe:
	//	*RiccontrolFailureIe_RicrequestId
	//	*RiccontrolFailureIe_RanfunctionId
	//	*RiccontrolFailureIe_RiccallProcessId
	//	*RiccontrolFailureIe_Cause
	//	*RiccontrolFailureIe_RiccontrolOutcome
	RiccontrolFailureIe isRiccontrolFailureIe_RiccontrolFailureIe `protobuf_oneof:"riccontrol_failure_ie"`
}

func (x *RiccontrolFailureIe) Reset() {
	*x = RiccontrolFailureIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RiccontrolFailureIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RiccontrolFailureIe) ProtoMessage() {}

func (x *RiccontrolFailureIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RiccontrolFailureIe.ProtoReflect.Descriptor instead.
func (*RiccontrolFailureIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{49}
}

func (m *RiccontrolFailureIe) GetRiccontrolFailureIe() isRiccontrolFailureIe_RiccontrolFailureIe {
	if m != nil {
		return m.RiccontrolFailureIe
	}
	return nil
}

func (x *RiccontrolFailureIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetRiccontrolFailureIe().(*RiccontrolFailureIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *RiccontrolFailureIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetRiccontrolFailureIe().(*RiccontrolFailureIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *RiccontrolFailureIe) GetRiccallProcessId() *e2ap_commondatatypes.RiccallProcessId {
	if x, ok := x.GetRiccontrolFailureIe().(*RiccontrolFailureIe_RiccallProcessId); ok {
		return x.RiccallProcessId
	}
	return nil
}

func (x *RiccontrolFailureIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetRiccontrolFailureIe().(*RiccontrolFailureIe_Cause); ok {
		return x.Cause
	}
	return nil
}

func (x *RiccontrolFailureIe) GetRiccontrolOutcome() *e2ap_commondatatypes.RiccontrolOutcome {
	if x, ok := x.GetRiccontrolFailureIe().(*RiccontrolFailureIe_RiccontrolOutcome); ok {
		return x.RiccontrolOutcome
	}
	return nil
}

type isRiccontrolFailureIe_RiccontrolFailureIe interface {
	isRiccontrolFailureIe_RiccontrolFailureIe()
}

type RiccontrolFailureIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,1,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type RiccontrolFailureIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,2,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type RiccontrolFailureIe_RiccallProcessId struct {
	RiccallProcessId *e2ap_commondatatypes.RiccallProcessId `protobuf:"bytes,3,opt,name=riccall_process_id,json=riccallProcessId,proto3,oneof"`
}

type RiccontrolFailureIe_Cause struct {
	//@inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,4,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

type RiccontrolFailureIe_RiccontrolOutcome struct {
	RiccontrolOutcome *e2ap_commondatatypes.RiccontrolOutcome `protobuf:"bytes,5,opt,name=riccontrol_outcome,json=riccontrolOutcome,proto3,oneof"`
}

func (*RiccontrolFailureIe_RicrequestId) isRiccontrolFailureIe_RiccontrolFailureIe() {}

func (*RiccontrolFailureIe_RanfunctionId) isRiccontrolFailureIe_RiccontrolFailureIe() {}

func (*RiccontrolFailureIe_RiccallProcessId) isRiccontrolFailureIe_RiccontrolFailureIe() {}

func (*RiccontrolFailureIe_Cause) isRiccontrolFailureIe_RiccontrolFailureIe() {}

func (*RiccontrolFailureIe_RiccontrolOutcome) isRiccontrolFailureIe_RiccontrolFailureIe() {}

// sequence from e2ap_v2.asn:686
// {ErrorIndication}
type ErrorIndication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*ErrorIndicationIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *ErrorIndication) Reset() {
	*x = ErrorIndication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorIndication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorIndication) ProtoMessage() {}

func (x *ErrorIndication) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorIndication.ProtoReflect.Descriptor instead.
func (*ErrorIndication) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{50}
}

func (x *ErrorIndication) GetProtocolIes() []*ErrorIndicationIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:690
// {_ErrorIndication-IEs}
type ErrorIndicationIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *ErrorIndicationIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *ErrorIndicationIes) Reset() {
	*x = ErrorIndicationIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorIndicationIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorIndicationIes) ProtoMessage() {}

func (x *ErrorIndicationIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorIndicationIes.ProtoReflect.Descriptor instead.
func (*ErrorIndicationIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{51}
}

func (x *ErrorIndicationIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ErrorIndicationIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *ErrorIndicationIes) GetValue() *ErrorIndicationIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type ErrorIndicationIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ErrorIndicationIe:
	//	*ErrorIndicationIe_TransactionId
	//	*ErrorIndicationIe_RicrequestId
	//	*ErrorIndicationIe_RanfunctionId
	//	*ErrorIndicationIe_Cause
	//	*ErrorIndicationIe_CriticalityDiagnostics
	ErrorIndicationIe isErrorIndicationIe_ErrorIndicationIe `protobuf_oneof:"error_indication_ie"`
}

func (x *ErrorIndicationIe) Reset() {
	*x = ErrorIndicationIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorIndicationIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorIndicationIe) ProtoMessage() {}

func (x *ErrorIndicationIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorIndicationIe.ProtoReflect.Descriptor instead.
func (*ErrorIndicationIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{52}
}

func (m *ErrorIndicationIe) GetErrorIndicationIe() isErrorIndicationIe_ErrorIndicationIe {
	if m != nil {
		return m.ErrorIndicationIe
	}
	return nil
}

func (x *ErrorIndicationIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetErrorIndicationIe().(*ErrorIndicationIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *ErrorIndicationIe) GetRicrequestId() *e2ap_ies.RicrequestId {
	if x, ok := x.GetErrorIndicationIe().(*ErrorIndicationIe_RicrequestId); ok {
		return x.RicrequestId
	}
	return nil
}

func (x *ErrorIndicationIe) GetRanfunctionId() *e2ap_ies.RanfunctionId {
	if x, ok := x.GetErrorIndicationIe().(*ErrorIndicationIe_RanfunctionId); ok {
		return x.RanfunctionId
	}
	return nil
}

func (x *ErrorIndicationIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetErrorIndicationIe().(*ErrorIndicationIe_Cause); ok {
		return x.Cause
	}
	return nil
}

func (x *ErrorIndicationIe) GetCriticalityDiagnostics() *e2ap_ies.CriticalityDiagnostics {
	if x, ok := x.GetErrorIndicationIe().(*ErrorIndicationIe_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

type isErrorIndicationIe_ErrorIndicationIe interface {
	isErrorIndicationIe_ErrorIndicationIe()
}

type ErrorIndicationIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type ErrorIndicationIe_RicrequestId struct {
	//@inject_tag: aper:"valueExt"
	RicrequestId *e2ap_ies.RicrequestId `protobuf:"bytes,2,opt,name=ricrequest_id,json=ricrequestId,proto3,oneof" aper:"valueExt"`
}

type ErrorIndicationIe_RanfunctionId struct {
	RanfunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,3,opt,name=ranfunction_id,json=ranfunctionId,proto3,oneof"`
}

type ErrorIndicationIe_Cause struct {
	//@inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,4,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

type ErrorIndicationIe_CriticalityDiagnostics struct {
	// @inject_tag: aper:"valueExt"
	CriticalityDiagnostics *e2ap_ies.CriticalityDiagnostics `protobuf:"bytes,5,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3,oneof" aper:"valueExt"`
}

func (*ErrorIndicationIe_TransactionId) isErrorIndicationIe_ErrorIndicationIe() {}

func (*ErrorIndicationIe_RicrequestId) isErrorIndicationIe_ErrorIndicationIe() {}

func (*ErrorIndicationIe_RanfunctionId) isErrorIndicationIe_ErrorIndicationIe() {}

func (*ErrorIndicationIe_Cause) isErrorIndicationIe_ErrorIndicationIe() {}

func (*ErrorIndicationIe_CriticalityDiagnostics) isErrorIndicationIe_ErrorIndicationIe() {}

// sequence from e2ap_v2.asn:711
// {E2setupRequest}
type E2SetupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2SetupRequestIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2SetupRequest) Reset() {
	*x = E2SetupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupRequest) ProtoMessage() {}

func (x *E2SetupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupRequest.ProtoReflect.Descriptor instead.
func (*E2SetupRequest) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{53}
}

func (x *E2SetupRequest) GetProtocolIes() []*E2SetupRequestIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:715
// {_E2setupRequestIEs}
type E2SetupRequestIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2SetupRequestIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2SetupRequestIes) Reset() {
	*x = E2SetupRequestIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupRequestIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupRequestIes) ProtoMessage() {}

func (x *E2SetupRequestIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupRequestIes.ProtoReflect.Descriptor instead.
func (*E2SetupRequestIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{54}
}

func (x *E2SetupRequestIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2SetupRequestIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2SetupRequestIes) GetValue() *E2SetupRequestIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2SetupRequestIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2SetupRequestIe:
	//	*E2SetupRequestIe_TransactionId
	//	*E2SetupRequestIe_GlobalE2NodeId
	//	*E2SetupRequestIe_RanfunctionsAdded
	//	*E2SetupRequestIe_E2NodeComponentConfigAddition
	E2SetupRequestIe isE2SetupRequestIe_E2SetupRequestIe `protobuf_oneof:"e2setup_request_ie"`
}

func (x *E2SetupRequestIe) Reset() {
	*x = E2SetupRequestIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupRequestIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupRequestIe) ProtoMessage() {}

func (x *E2SetupRequestIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupRequestIe.ProtoReflect.Descriptor instead.
func (*E2SetupRequestIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{55}
}

func (m *E2SetupRequestIe) GetE2SetupRequestIe() isE2SetupRequestIe_E2SetupRequestIe {
	if m != nil {
		return m.E2SetupRequestIe
	}
	return nil
}

func (x *E2SetupRequestIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2SetupRequestIe().(*E2SetupRequestIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2SetupRequestIe) GetGlobalE2NodeId() *e2ap_ies.GlobalE2NodeId {
	if x, ok := x.GetE2SetupRequestIe().(*E2SetupRequestIe_GlobalE2NodeId); ok {
		return x.GlobalE2NodeId
	}
	return nil
}

func (x *E2SetupRequestIe) GetRanfunctionsAdded() *RanfunctionsList {
	if x, ok := x.GetE2SetupRequestIe().(*E2SetupRequestIe_RanfunctionsAdded); ok {
		return x.RanfunctionsAdded
	}
	return nil
}

func (x *E2SetupRequestIe) GetE2NodeComponentConfigAddition() *E2NodeComponentConfigAdditionList {
	if x, ok := x.GetE2SetupRequestIe().(*E2SetupRequestIe_E2NodeComponentConfigAddition); ok {
		return x.E2NodeComponentConfigAddition
	}
	return nil
}

type isE2SetupRequestIe_E2SetupRequestIe interface {
	isE2SetupRequestIe_E2SetupRequestIe()
}

type E2SetupRequestIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2SetupRequestIe_GlobalE2NodeId struct {
	//@inject_tag: aper:"choiceExt"
	GlobalE2NodeId *e2ap_ies.GlobalE2NodeId `protobuf:"bytes,2,opt,name=global_e2node_id,json=globalE2nodeId,proto3,oneof" aper:"choiceExt"`
}

type E2SetupRequestIe_RanfunctionsAdded struct {
	RanfunctionsAdded *RanfunctionsList `protobuf:"bytes,3,opt,name=ranfunctions_added,json=ranfunctionsAdded,proto3,oneof"`
}

type E2SetupRequestIe_E2NodeComponentConfigAddition struct {
	E2NodeComponentConfigAddition *E2NodeComponentConfigAdditionList `protobuf:"bytes,4,opt,name=e2node_component_config_addition,json=e2nodeComponentConfigAddition,proto3,oneof"`
}

func (*E2SetupRequestIe_TransactionId) isE2SetupRequestIe_E2SetupRequestIe() {}

func (*E2SetupRequestIe_GlobalE2NodeId) isE2SetupRequestIe_E2SetupRequestIe() {}

func (*E2SetupRequestIe_RanfunctionsAdded) isE2SetupRequestIe_E2SetupRequestIe() {}

func (*E2SetupRequestIe_E2NodeComponentConfigAddition) isE2SetupRequestIe_E2SetupRequestIe() {}

// sequence from e2ap_v2.asn:730
// {E2setupResponse}
type E2SetupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2SetupResponseIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2SetupResponse) Reset() {
	*x = E2SetupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupResponse) ProtoMessage() {}

func (x *E2SetupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupResponse.ProtoReflect.Descriptor instead.
func (*E2SetupResponse) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{56}
}

func (x *E2SetupResponse) GetProtocolIes() []*E2SetupResponseIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:734
// {_E2setupResponseIEs}
type E2SetupResponseIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2SetupResponseIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2SetupResponseIes) Reset() {
	*x = E2SetupResponseIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupResponseIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupResponseIes) ProtoMessage() {}

func (x *E2SetupResponseIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupResponseIes.ProtoReflect.Descriptor instead.
func (*E2SetupResponseIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{57}
}

func (x *E2SetupResponseIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2SetupResponseIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2SetupResponseIes) GetValue() *E2SetupResponseIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2SetupResponseIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2SetupResponseIe:
	//	*E2SetupResponseIe_TransactionId
	//	*E2SetupResponseIe_GlobalRicId
	//	*E2SetupResponseIe_RanfunctionsAccepted
	//	*E2SetupResponseIe_RanfunctionsRejected
	//	*E2SetupResponseIe_E2NodeComponentConfigAdditionAck
	E2SetupResponseIe isE2SetupResponseIe_E2SetupResponseIe `protobuf_oneof:"e2setup_response_ie"`
}

func (x *E2SetupResponseIe) Reset() {
	*x = E2SetupResponseIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupResponseIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupResponseIe) ProtoMessage() {}

func (x *E2SetupResponseIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupResponseIe.ProtoReflect.Descriptor instead.
func (*E2SetupResponseIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{58}
}

func (m *E2SetupResponseIe) GetE2SetupResponseIe() isE2SetupResponseIe_E2SetupResponseIe {
	if m != nil {
		return m.E2SetupResponseIe
	}
	return nil
}

func (x *E2SetupResponseIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2SetupResponseIe().(*E2SetupResponseIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2SetupResponseIe) GetGlobalRicId() *e2ap_ies.GlobalRicId {
	if x, ok := x.GetE2SetupResponseIe().(*E2SetupResponseIe_GlobalRicId); ok {
		return x.GlobalRicId
	}
	return nil
}

func (x *E2SetupResponseIe) GetRanfunctionsAccepted() *RanfunctionsIdList {
	if x, ok := x.GetE2SetupResponseIe().(*E2SetupResponseIe_RanfunctionsAccepted); ok {
		return x.RanfunctionsAccepted
	}
	return nil
}

func (x *E2SetupResponseIe) GetRanfunctionsRejected() *RanfunctionsIdcauseList {
	if x, ok := x.GetE2SetupResponseIe().(*E2SetupResponseIe_RanfunctionsRejected); ok {
		return x.RanfunctionsRejected
	}
	return nil
}

func (x *E2SetupResponseIe) GetE2NodeComponentConfigAdditionAck() *E2NodeComponentConfigAdditionAckList {
	if x, ok := x.GetE2SetupResponseIe().(*E2SetupResponseIe_E2NodeComponentConfigAdditionAck); ok {
		return x.E2NodeComponentConfigAdditionAck
	}
	return nil
}

type isE2SetupResponseIe_E2SetupResponseIe interface {
	isE2SetupResponseIe_E2SetupResponseIe()
}

type E2SetupResponseIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2SetupResponseIe_GlobalRicId struct {
	//@inject_tag: aper:"valueExt"
	GlobalRicId *e2ap_ies.GlobalRicId `protobuf:"bytes,2,opt,name=global_ric_id,json=globalRicId,proto3,oneof" aper:"valueExt"`
}

type E2SetupResponseIe_RanfunctionsAccepted struct {
	RanfunctionsAccepted *RanfunctionsIdList `protobuf:"bytes,3,opt,name=ranfunctions_accepted,json=ranfunctionsAccepted,proto3,oneof"`
}

type E2SetupResponseIe_RanfunctionsRejected struct {
	RanfunctionsRejected *RanfunctionsIdcauseList `protobuf:"bytes,4,opt,name=ranfunctions_rejected,json=ranfunctionsRejected,proto3,oneof"`
}

type E2SetupResponseIe_E2NodeComponentConfigAdditionAck struct {
	E2NodeComponentConfigAdditionAck *E2NodeComponentConfigAdditionAckList `protobuf:"bytes,5,opt,name=e2node_component_config_addition_ack,json=e2nodeComponentConfigAdditionAck,proto3,oneof"`
}

func (*E2SetupResponseIe_TransactionId) isE2SetupResponseIe_E2SetupResponseIe() {}

func (*E2SetupResponseIe_GlobalRicId) isE2SetupResponseIe_E2SetupResponseIe() {}

func (*E2SetupResponseIe_RanfunctionsAccepted) isE2SetupResponseIe_E2SetupResponseIe() {}

func (*E2SetupResponseIe_RanfunctionsRejected) isE2SetupResponseIe_E2SetupResponseIe() {}

func (*E2SetupResponseIe_E2NodeComponentConfigAdditionAck) isE2SetupResponseIe_E2SetupResponseIe() {}

// sequence from e2ap_v2.asn:750
// {E2setupFailure}
type E2SetupFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2SetupFailureIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2SetupFailure) Reset() {
	*x = E2SetupFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupFailure) ProtoMessage() {}

func (x *E2SetupFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupFailure.ProtoReflect.Descriptor instead.
func (*E2SetupFailure) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{59}
}

func (x *E2SetupFailure) GetProtocolIes() []*E2SetupFailureIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:754
// {_E2setupFailureIEs}
type E2SetupFailureIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2SetupFailureIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2SetupFailureIes) Reset() {
	*x = E2SetupFailureIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupFailureIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupFailureIes) ProtoMessage() {}

func (x *E2SetupFailureIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupFailureIes.ProtoReflect.Descriptor instead.
func (*E2SetupFailureIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{60}
}

func (x *E2SetupFailureIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2SetupFailureIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2SetupFailureIes) GetValue() *E2SetupFailureIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2SetupFailureIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2SetupFailureIe:
	//	*E2SetupFailureIe_TransactionId
	//	*E2SetupFailureIe_Cause
	//	*E2SetupFailureIe_TimeToWait
	//	*E2SetupFailureIe_CriticalityDiagnostics
	//	*E2SetupFailureIe_TnlInformation
	E2SetupFailureIe isE2SetupFailureIe_E2SetupFailureIe `protobuf_oneof:"e2setup_failure_ie"`
}

func (x *E2SetupFailureIe) Reset() {
	*x = E2SetupFailureIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2SetupFailureIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2SetupFailureIe) ProtoMessage() {}

func (x *E2SetupFailureIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2SetupFailureIe.ProtoReflect.Descriptor instead.
func (*E2SetupFailureIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{61}
}

func (m *E2SetupFailureIe) GetE2SetupFailureIe() isE2SetupFailureIe_E2SetupFailureIe {
	if m != nil {
		return m.E2SetupFailureIe
	}
	return nil
}

func (x *E2SetupFailureIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2SetupFailureIe().(*E2SetupFailureIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2SetupFailureIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetE2SetupFailureIe().(*E2SetupFailureIe_Cause); ok {
		return x.Cause
	}
	return nil
}

func (x *E2SetupFailureIe) GetTimeToWait() e2ap_ies.TimeToWait {
	if x, ok := x.GetE2SetupFailureIe().(*E2SetupFailureIe_TimeToWait); ok {
		return x.TimeToWait
	}
	return e2ap_ies.TimeToWait(0)
}

func (x *E2SetupFailureIe) GetCriticalityDiagnostics() *e2ap_ies.CriticalityDiagnostics {
	if x, ok := x.GetE2SetupFailureIe().(*E2SetupFailureIe_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

func (x *E2SetupFailureIe) GetTnlInformation() *e2ap_ies.Tnlinformation {
	if x, ok := x.GetE2SetupFailureIe().(*E2SetupFailureIe_TnlInformation); ok {
		return x.TnlInformation
	}
	return nil
}

type isE2SetupFailureIe_E2SetupFailureIe interface {
	isE2SetupFailureIe_E2SetupFailureIe()
}

type E2SetupFailureIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2SetupFailureIe_Cause struct {
	//@inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,2,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

type E2SetupFailureIe_TimeToWait struct {
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:5"
	TimeToWait e2ap_ies.TimeToWait `protobuf:"varint,3,opt,name=time_to_wait,json=timeToWait,proto3,enum=e2ap.v2.TimeToWait,oneof" aper:"valueExt,valueLB:0,valueUB:5"`
}

type E2SetupFailureIe_CriticalityDiagnostics struct {
	//@inject_tag: aper:"valueExt"
	CriticalityDiagnostics *e2ap_ies.CriticalityDiagnostics `protobuf:"bytes,4,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3,oneof" aper:"valueExt"`
}

type E2SetupFailureIe_TnlInformation struct {
	//@inject_tag: aper:"valueExt"
	TnlInformation *e2ap_ies.Tnlinformation `protobuf:"bytes,5,opt,name=tnl_information,json=tnlInformation,proto3,oneof" aper:"valueExt"`
}

func (*E2SetupFailureIe_TransactionId) isE2SetupFailureIe_E2SetupFailureIe() {}

func (*E2SetupFailureIe_Cause) isE2SetupFailureIe_E2SetupFailureIe() {}

func (*E2SetupFailureIe_TimeToWait) isE2SetupFailureIe_E2SetupFailureIe() {}

func (*E2SetupFailureIe_CriticalityDiagnostics) isE2SetupFailureIe_E2SetupFailureIe() {}

func (*E2SetupFailureIe_TnlInformation) isE2SetupFailureIe_E2SetupFailureIe() {}

// sequence from e2ap_v2.asn:774
// {E2connectionUpdate}
type E2ConnectionUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2ConnectionUpdateIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2ConnectionUpdate) Reset() {
	*x = E2ConnectionUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdate) ProtoMessage() {}

func (x *E2ConnectionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdate.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdate) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{62}
}

func (x *E2ConnectionUpdate) GetProtocolIes() []*E2ConnectionUpdateIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:778
// {_E2connectionUpdate-IEs}
type E2ConnectionUpdateIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2ConnectionUpdateIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2ConnectionUpdateIes) Reset() {
	*x = E2ConnectionUpdateIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateIes) ProtoMessage() {}

func (x *E2ConnectionUpdateIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateIes.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{63}
}

func (x *E2ConnectionUpdateIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2ConnectionUpdateIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2ConnectionUpdateIes) GetValue() *E2ConnectionUpdateIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2ConnectionUpdateIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2ConnectionUpdateIe:
	//	*E2ConnectionUpdateIe_TransactionId
	//	*E2ConnectionUpdateIe_E2ConnectionUpdateAdd
	//	*E2ConnectionUpdateIe_E2ConnectionUpdateRemove
	//	*E2ConnectionUpdateIe_E2ConnectionUpdateModify
	E2ConnectionUpdateIe isE2ConnectionUpdateIe_E2ConnectionUpdateIe `protobuf_oneof:"e2connection_update_ie"`
}

func (x *E2ConnectionUpdateIe) Reset() {
	*x = E2ConnectionUpdateIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateIe) ProtoMessage() {}

func (x *E2ConnectionUpdateIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateIe.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{64}
}

func (m *E2ConnectionUpdateIe) GetE2ConnectionUpdateIe() isE2ConnectionUpdateIe_E2ConnectionUpdateIe {
	if m != nil {
		return m.E2ConnectionUpdateIe
	}
	return nil
}

func (x *E2ConnectionUpdateIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2ConnectionUpdateIe().(*E2ConnectionUpdateIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2ConnectionUpdateIe) GetE2ConnectionUpdateAdd() *E2ConnectionUpdateList {
	if x, ok := x.GetE2ConnectionUpdateIe().(*E2ConnectionUpdateIe_E2ConnectionUpdateAdd); ok {
		return x.E2ConnectionUpdateAdd
	}
	return nil
}

func (x *E2ConnectionUpdateIe) GetE2ConnectionUpdateRemove() *E2ConnectionUpdateRemoveList {
	if x, ok := x.GetE2ConnectionUpdateIe().(*E2ConnectionUpdateIe_E2ConnectionUpdateRemove); ok {
		return x.E2ConnectionUpdateRemove
	}
	return nil
}

func (x *E2ConnectionUpdateIe) GetE2ConnectionUpdateModify() *E2ConnectionUpdateList {
	if x, ok := x.GetE2ConnectionUpdateIe().(*E2ConnectionUpdateIe_E2ConnectionUpdateModify); ok {
		return x.E2ConnectionUpdateModify
	}
	return nil
}

type isE2ConnectionUpdateIe_E2ConnectionUpdateIe interface {
	isE2ConnectionUpdateIe_E2ConnectionUpdateIe()
}

type E2ConnectionUpdateIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2ConnectionUpdateIe_E2ConnectionUpdateAdd struct {
	E2ConnectionUpdateAdd *E2ConnectionUpdateList `protobuf:"bytes,2,opt,name=e2connection_update_add,json=e2connectionUpdateAdd,proto3,oneof"`
}

type E2ConnectionUpdateIe_E2ConnectionUpdateRemove struct {
	E2ConnectionUpdateRemove *E2ConnectionUpdateRemoveList `protobuf:"bytes,3,opt,name=e2connection_update_remove,json=e2connectionUpdateRemove,proto3,oneof"`
}

type E2ConnectionUpdateIe_E2ConnectionUpdateModify struct {
	E2ConnectionUpdateModify *E2ConnectionUpdateList `protobuf:"bytes,4,opt,name=e2connection_update_modify,json=e2connectionUpdateModify,proto3,oneof"`
}

func (*E2ConnectionUpdateIe_TransactionId) isE2ConnectionUpdateIe_E2ConnectionUpdateIe() {}

func (*E2ConnectionUpdateIe_E2ConnectionUpdateAdd) isE2ConnectionUpdateIe_E2ConnectionUpdateIe() {}

func (*E2ConnectionUpdateIe_E2ConnectionUpdateRemove) isE2ConnectionUpdateIe_E2ConnectionUpdateIe() {}

func (*E2ConnectionUpdateIe_E2ConnectionUpdateModify) isE2ConnectionUpdateIe_E2ConnectionUpdateIe() {}

// sequence from e2ap_v2.asn:786
// {E2connectionUpdate-List}
type E2ConnectionUpdateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:32"
	Value []*E2ConnectionUpdateItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:32"`
}

func (x *E2ConnectionUpdateList) Reset() {
	*x = E2ConnectionUpdateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateList) ProtoMessage() {}

func (x *E2ConnectionUpdateList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateList.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{65}
}

func (x *E2ConnectionUpdateList) GetValue() []*E2ConnectionUpdateItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:788
// {_E2connectionUpdate-ItemIEs}
type E2ConnectionUpdateItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2ConnectionUpdateItemIe `protobuf:"bytes,3,opt,name=value,json=E2connectionUpdateItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2ConnectionUpdateItemIes) Reset() {
	*x = E2ConnectionUpdateItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateItemIes) ProtoMessage() {}

func (x *E2ConnectionUpdateItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateItemIes.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{66}
}

func (x *E2ConnectionUpdateItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2ConnectionUpdateItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2ConnectionUpdateItemIes) GetValue() *E2ConnectionUpdateItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2ConnectionUpdateItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2ConnectionUpdateItemIe:
	//	*E2ConnectionUpdateItemIe_E2ConnectionUpdateItem
	E2ConnectionUpdateItemIe isE2ConnectionUpdateItemIe_E2ConnectionUpdateItemIe `protobuf_oneof:"e2connection_update_item_ie"`
}

func (x *E2ConnectionUpdateItemIe) Reset() {
	*x = E2ConnectionUpdateItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateItemIe) ProtoMessage() {}

func (x *E2ConnectionUpdateItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateItemIe.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{67}
}

func (m *E2ConnectionUpdateItemIe) GetE2ConnectionUpdateItemIe() isE2ConnectionUpdateItemIe_E2ConnectionUpdateItemIe {
	if m != nil {
		return m.E2ConnectionUpdateItemIe
	}
	return nil
}

func (x *E2ConnectionUpdateItemIe) GetE2ConnectionUpdateItem() *E2ConnectionUpdateItem {
	if x, ok := x.GetE2ConnectionUpdateItemIe().(*E2ConnectionUpdateItemIe_E2ConnectionUpdateItem); ok {
		return x.E2ConnectionUpdateItem
	}
	return nil
}

type isE2ConnectionUpdateItemIe_E2ConnectionUpdateItemIe interface {
	isE2ConnectionUpdateItemIe_E2ConnectionUpdateItemIe()
}

type E2ConnectionUpdateItemIe_E2ConnectionUpdateItem struct {
	//@inject_tag: aper:"valueExt"
	E2ConnectionUpdateItem *E2ConnectionUpdateItem `protobuf:"bytes,1,opt,name=e2connection_update_item,json=e2connectionUpdateItem,proto3,oneof" aper:"valueExt"`
}

func (*E2ConnectionUpdateItemIe_E2ConnectionUpdateItem) isE2ConnectionUpdateItemIe_E2ConnectionUpdateItemIe() {
}

// sequence from e2ap_v2.asn:794
// {E2connectionUpdate-Item}
type E2ConnectionUpdateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	TnlInformation *e2ap_ies.Tnlinformation `protobuf:"bytes,1,opt,name=tnl_information,json=tnlInformation,proto3" json:"tnl_information,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"valueLB:0,valueUB:2,valueExt"
	TnlUsage e2ap_ies.Tnlusage `protobuf:"varint,2,opt,name=tnl_usage,json=tnlUsage,proto3,enum=e2ap.v2.Tnlusage" json:"tnl_usage,omitempty" aper:"valueLB:0,valueUB:2,valueExt"`
}

func (x *E2ConnectionUpdateItem) Reset() {
	*x = E2ConnectionUpdateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateItem) ProtoMessage() {}

func (x *E2ConnectionUpdateItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateItem.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{68}
}

func (x *E2ConnectionUpdateItem) GetTnlInformation() *e2ap_ies.Tnlinformation {
	if x != nil {
		return x.TnlInformation
	}
	return nil
}

func (x *E2ConnectionUpdateItem) GetTnlUsage() e2ap_ies.Tnlusage {
	if x != nil {
		return x.TnlUsage
	}
	return e2ap_ies.Tnlusage(0)
}

// sequence from e2ap_v2.asn:799
// {E2connectionUpdateRemove-List}
type E2ConnectionUpdateRemoveList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:32"
	Value []*E2ConnectionUpdateRemoveItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:32"`
}

func (x *E2ConnectionUpdateRemoveList) Reset() {
	*x = E2ConnectionUpdateRemoveList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateRemoveList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateRemoveList) ProtoMessage() {}

func (x *E2ConnectionUpdateRemoveList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateRemoveList.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateRemoveList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{69}
}

func (x *E2ConnectionUpdateRemoveList) GetValue() []*E2ConnectionUpdateRemoveItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:801
// {_E2connectionUpdateRemove-ItemIEs}
type E2ConnectionUpdateRemoveItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2ConnectionUpdateRemoveItemIe `protobuf:"bytes,3,opt,name=value,json=E2connectionUpdateRemoveItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2ConnectionUpdateRemoveItemIes) Reset() {
	*x = E2ConnectionUpdateRemoveItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateRemoveItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateRemoveItemIes) ProtoMessage() {}

func (x *E2ConnectionUpdateRemoveItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateRemoveItemIes.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateRemoveItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{70}
}

func (x *E2ConnectionUpdateRemoveItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2ConnectionUpdateRemoveItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2ConnectionUpdateRemoveItemIes) GetValue() *E2ConnectionUpdateRemoveItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2ConnectionUpdateRemoveItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2ConnectionUpdateRemoveItemIe:
	//	*E2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItem
	E2ConnectionUpdateRemoveItemIe isE2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItemIe `protobuf_oneof:"e2connection_update_remove_item_ie"`
}

func (x *E2ConnectionUpdateRemoveItemIe) Reset() {
	*x = E2ConnectionUpdateRemoveItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateRemoveItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateRemoveItemIe) ProtoMessage() {}

func (x *E2ConnectionUpdateRemoveItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateRemoveItemIe.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateRemoveItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{71}
}

func (m *E2ConnectionUpdateRemoveItemIe) GetE2ConnectionUpdateRemoveItemIe() isE2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItemIe {
	if m != nil {
		return m.E2ConnectionUpdateRemoveItemIe
	}
	return nil
}

func (x *E2ConnectionUpdateRemoveItemIe) GetE2ConnectionUpdateRemoveItem() *E2ConnectionUpdateRemoveItem {
	if x, ok := x.GetE2ConnectionUpdateRemoveItemIe().(*E2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItem); ok {
		return x.E2ConnectionUpdateRemoveItem
	}
	return nil
}

type isE2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItemIe interface {
	isE2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItemIe()
}

type E2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItem struct {
	//@inject_tag: aper:"valueExt"
	E2ConnectionUpdateRemoveItem *E2ConnectionUpdateRemoveItem `protobuf:"bytes,1,opt,name=e2connection_update_remove_item,json=e2connectionUpdateRemoveItem,proto3,oneof" aper:"valueExt"`
}

func (*E2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItem) isE2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItemIe() {
}

// sequence from e2ap_v2.asn:807
// {E2connectionUpdateRemove-Item}
type E2ConnectionUpdateRemoveItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	TnlInformation *e2ap_ies.Tnlinformation `protobuf:"bytes,1,opt,name=tnl_information,json=tnlInformation,proto3" json:"tnl_information,omitempty" aper:"valueExt"`
}

func (x *E2ConnectionUpdateRemoveItem) Reset() {
	*x = E2ConnectionUpdateRemoveItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateRemoveItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateRemoveItem) ProtoMessage() {}

func (x *E2ConnectionUpdateRemoveItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateRemoveItem.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateRemoveItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{72}
}

func (x *E2ConnectionUpdateRemoveItem) GetTnlInformation() *e2ap_ies.Tnlinformation {
	if x != nil {
		return x.TnlInformation
	}
	return nil
}

// sequence from e2ap_v2.asn:819
// {E2connectionUpdateAcknowledge}
type E2ConnectionUpdateAcknowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2ConnectionUpdateAckIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2ConnectionUpdateAcknowledge) Reset() {
	*x = E2ConnectionUpdateAcknowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateAcknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateAcknowledge) ProtoMessage() {}

func (x *E2ConnectionUpdateAcknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateAcknowledge.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateAcknowledge) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{73}
}

func (x *E2ConnectionUpdateAcknowledge) GetProtocolIes() []*E2ConnectionUpdateAckIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:823
// {_E2connectionUpdateAck-IEs}
type E2ConnectionUpdateAckIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2ConnectionUpdateAckIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2ConnectionUpdateAckIes) Reset() {
	*x = E2ConnectionUpdateAckIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateAckIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateAckIes) ProtoMessage() {}

func (x *E2ConnectionUpdateAckIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateAckIes.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateAckIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{74}
}

func (x *E2ConnectionUpdateAckIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2ConnectionUpdateAckIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2ConnectionUpdateAckIes) GetValue() *E2ConnectionUpdateAckIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2ConnectionUpdateAckIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2ConnectionUpdateAckIe:
	//	*E2ConnectionUpdateAckIe_TransactionId
	//	*E2ConnectionUpdateAckIe_E2ConnectionSetup
	//	*E2ConnectionUpdateAckIe_E2ConnectionSetupFailed
	E2ConnectionUpdateAckIe isE2ConnectionUpdateAckIe_E2ConnectionUpdateAckIe `protobuf_oneof:"e2connection_update_ack_ie"`
}

func (x *E2ConnectionUpdateAckIe) Reset() {
	*x = E2ConnectionUpdateAckIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateAckIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateAckIe) ProtoMessage() {}

func (x *E2ConnectionUpdateAckIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateAckIe.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateAckIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{75}
}

func (m *E2ConnectionUpdateAckIe) GetE2ConnectionUpdateAckIe() isE2ConnectionUpdateAckIe_E2ConnectionUpdateAckIe {
	if m != nil {
		return m.E2ConnectionUpdateAckIe
	}
	return nil
}

func (x *E2ConnectionUpdateAckIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2ConnectionUpdateAckIe().(*E2ConnectionUpdateAckIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2ConnectionUpdateAckIe) GetE2ConnectionSetup() *E2ConnectionUpdateList {
	if x, ok := x.GetE2ConnectionUpdateAckIe().(*E2ConnectionUpdateAckIe_E2ConnectionSetup); ok {
		return x.E2ConnectionSetup
	}
	return nil
}

func (x *E2ConnectionUpdateAckIe) GetE2ConnectionSetupFailed() *E2ConnectionSetupFailedList {
	if x, ok := x.GetE2ConnectionUpdateAckIe().(*E2ConnectionUpdateAckIe_E2ConnectionSetupFailed); ok {
		return x.E2ConnectionSetupFailed
	}
	return nil
}

type isE2ConnectionUpdateAckIe_E2ConnectionUpdateAckIe interface {
	isE2ConnectionUpdateAckIe_E2ConnectionUpdateAckIe()
}

type E2ConnectionUpdateAckIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2ConnectionUpdateAckIe_E2ConnectionSetup struct {
	E2ConnectionSetup *E2ConnectionUpdateList `protobuf:"bytes,2,opt,name=e2connection_setup,json=e2connectionSetup,proto3,oneof"`
}

type E2ConnectionUpdateAckIe_E2ConnectionSetupFailed struct {
	E2ConnectionSetupFailed *E2ConnectionSetupFailedList `protobuf:"bytes,3,opt,name=e2connection_setup_failed,json=e2connectionSetupFailed,proto3,oneof"`
}

func (*E2ConnectionUpdateAckIe_TransactionId) isE2ConnectionUpdateAckIe_E2ConnectionUpdateAckIe() {}

func (*E2ConnectionUpdateAckIe_E2ConnectionSetup) isE2ConnectionUpdateAckIe_E2ConnectionUpdateAckIe() {
}

func (*E2ConnectionUpdateAckIe_E2ConnectionSetupFailed) isE2ConnectionUpdateAckIe_E2ConnectionUpdateAckIe() {
}

// sequence from e2ap_v2.asn:830
// {E2connectionSetupFailed-List}
type E2ConnectionSetupFailedList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:32"
	Value []*E2ConnectionSetupFailedItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:32"`
}

func (x *E2ConnectionSetupFailedList) Reset() {
	*x = E2ConnectionSetupFailedList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionSetupFailedList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionSetupFailedList) ProtoMessage() {}

func (x *E2ConnectionSetupFailedList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionSetupFailedList.ProtoReflect.Descriptor instead.
func (*E2ConnectionSetupFailedList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{76}
}

func (x *E2ConnectionSetupFailedList) GetValue() []*E2ConnectionSetupFailedItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:832
// {_E2connectionSetupFailed-ItemIEs}
type E2ConnectionSetupFailedItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2ConnectionSetupFailedItemIe `protobuf:"bytes,3,opt,name=value,json=E2connectionSetupFailedItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2ConnectionSetupFailedItemIes) Reset() {
	*x = E2ConnectionSetupFailedItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionSetupFailedItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionSetupFailedItemIes) ProtoMessage() {}

func (x *E2ConnectionSetupFailedItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionSetupFailedItemIes.ProtoReflect.Descriptor instead.
func (*E2ConnectionSetupFailedItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{77}
}

func (x *E2ConnectionSetupFailedItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2ConnectionSetupFailedItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2ConnectionSetupFailedItemIes) GetValue() *E2ConnectionSetupFailedItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2ConnectionSetupFailedItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2ConnectionSetupFailedItemIe:
	//	*E2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItem
	E2ConnectionSetupFailedItemIe isE2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItemIe `protobuf_oneof:"e2connection_setup_failed_item_ie"`
}

func (x *E2ConnectionSetupFailedItemIe) Reset() {
	*x = E2ConnectionSetupFailedItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionSetupFailedItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionSetupFailedItemIe) ProtoMessage() {}

func (x *E2ConnectionSetupFailedItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionSetupFailedItemIe.ProtoReflect.Descriptor instead.
func (*E2ConnectionSetupFailedItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{78}
}

func (m *E2ConnectionSetupFailedItemIe) GetE2ConnectionSetupFailedItemIe() isE2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItemIe {
	if m != nil {
		return m.E2ConnectionSetupFailedItemIe
	}
	return nil
}

func (x *E2ConnectionSetupFailedItemIe) GetE2ConnectionSetupFailedItem() *E2ConnectionSetupFailedItem {
	if x, ok := x.GetE2ConnectionSetupFailedItemIe().(*E2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItem); ok {
		return x.E2ConnectionSetupFailedItem
	}
	return nil
}

type isE2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItemIe interface {
	isE2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItemIe()
}

type E2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItem struct {
	//@inject_tag: aper:"valueExt"
	E2ConnectionSetupFailedItem *E2ConnectionSetupFailedItem `protobuf:"bytes,1,opt,name=e2connection_setup_failed_item,json=e2connectionSetupFailedItem,proto3,oneof" aper:"valueExt"`
}

func (*E2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItem) isE2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItemIe() {
}

// sequence from e2ap_v2.asn:838
// {E2connectionSetupFailed-Item}
type E2ConnectionSetupFailedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	TnlInformation *e2ap_ies.Tnlinformation `protobuf:"bytes,1,opt,name=tnl_information,json=tnlInformation,proto3" json:"tnl_information,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,2,opt,name=cause,proto3" json:"cause,omitempty" aper:"choiceExt"`
}

func (x *E2ConnectionSetupFailedItem) Reset() {
	*x = E2ConnectionSetupFailedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionSetupFailedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionSetupFailedItem) ProtoMessage() {}

func (x *E2ConnectionSetupFailedItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionSetupFailedItem.ProtoReflect.Descriptor instead.
func (*E2ConnectionSetupFailedItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{79}
}

func (x *E2ConnectionSetupFailedItem) GetTnlInformation() *e2ap_ies.Tnlinformation {
	if x != nil {
		return x.TnlInformation
	}
	return nil
}

func (x *E2ConnectionSetupFailedItem) GetCause() *e2ap_ies.Cause {
	if x != nil {
		return x.Cause
	}
	return nil
}

// sequence from e2ap_v2.asn:849
// {E2connectionUpdateFailure}
type E2ConnectionUpdateFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2ConnectionUpdateFailureIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2ConnectionUpdateFailure) Reset() {
	*x = E2ConnectionUpdateFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateFailure) ProtoMessage() {}

func (x *E2ConnectionUpdateFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateFailure.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateFailure) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{80}
}

func (x *E2ConnectionUpdateFailure) GetProtocolIes() []*E2ConnectionUpdateFailureIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:853
// {_E2connectionUpdateFailure-IEs}
type E2ConnectionUpdateFailureIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2ConnectionUpdateFailureIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2ConnectionUpdateFailureIes) Reset() {
	*x = E2ConnectionUpdateFailureIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateFailureIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateFailureIes) ProtoMessage() {}

func (x *E2ConnectionUpdateFailureIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateFailureIes.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateFailureIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{81}
}

func (x *E2ConnectionUpdateFailureIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2ConnectionUpdateFailureIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2ConnectionUpdateFailureIes) GetValue() *E2ConnectionUpdateFailureIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2ConnectionUpdateFailureIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2ConnectionUpdateFailureIe:
	//	*E2ConnectionUpdateFailureIe_TransactionId
	//	*E2ConnectionUpdateFailureIe_Cause
	//	*E2ConnectionUpdateFailureIe_TimeToWait
	//	*E2ConnectionUpdateFailureIe_CriticalityDiagnostics
	E2ConnectionUpdateFailureIe isE2ConnectionUpdateFailureIe_E2ConnectionUpdateFailureIe `protobuf_oneof:"e2connection_update_failure_ie"`
}

func (x *E2ConnectionUpdateFailureIe) Reset() {
	*x = E2ConnectionUpdateFailureIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateFailureIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateFailureIe) ProtoMessage() {}

func (x *E2ConnectionUpdateFailureIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateFailureIe.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateFailureIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{82}
}

func (m *E2ConnectionUpdateFailureIe) GetE2ConnectionUpdateFailureIe() isE2ConnectionUpdateFailureIe_E2ConnectionUpdateFailureIe {
	if m != nil {
		return m.E2ConnectionUpdateFailureIe
	}
	return nil
}

func (x *E2ConnectionUpdateFailureIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2ConnectionUpdateFailureIe().(*E2ConnectionUpdateFailureIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2ConnectionUpdateFailureIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetE2ConnectionUpdateFailureIe().(*E2ConnectionUpdateFailureIe_Cause); ok {
		return x.Cause
	}
	return nil
}

func (x *E2ConnectionUpdateFailureIe) GetTimeToWait() e2ap_ies.TimeToWait {
	if x, ok := x.GetE2ConnectionUpdateFailureIe().(*E2ConnectionUpdateFailureIe_TimeToWait); ok {
		return x.TimeToWait
	}
	return e2ap_ies.TimeToWait(0)
}

func (x *E2ConnectionUpdateFailureIe) GetCriticalityDiagnostics() *e2ap_ies.CriticalityDiagnostics {
	if x, ok := x.GetE2ConnectionUpdateFailureIe().(*E2ConnectionUpdateFailureIe_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

type isE2ConnectionUpdateFailureIe_E2ConnectionUpdateFailureIe interface {
	isE2ConnectionUpdateFailureIe_E2ConnectionUpdateFailureIe()
}

type E2ConnectionUpdateFailureIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2ConnectionUpdateFailureIe_Cause struct {
	// @inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,2,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

type E2ConnectionUpdateFailureIe_TimeToWait struct {
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:5"
	TimeToWait e2ap_ies.TimeToWait `protobuf:"varint,3,opt,name=time_to_wait,json=&Value,proto3,enum=e2ap.v2.TimeToWait,oneof" aper:"valueExt,valueLB:0,valueUB:5"`
}

type E2ConnectionUpdateFailureIe_CriticalityDiagnostics struct {
	// @inject_tag: aper:"valueExt"
	CriticalityDiagnostics *e2ap_ies.CriticalityDiagnostics `protobuf:"bytes,4,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3,oneof" aper:"valueExt"`
}

func (*E2ConnectionUpdateFailureIe_TransactionId) isE2ConnectionUpdateFailureIe_E2ConnectionUpdateFailureIe() {
}

func (*E2ConnectionUpdateFailureIe_Cause) isE2ConnectionUpdateFailureIe_E2ConnectionUpdateFailureIe() {
}

func (*E2ConnectionUpdateFailureIe_TimeToWait) isE2ConnectionUpdateFailureIe_E2ConnectionUpdateFailureIe() {
}

func (*E2ConnectionUpdateFailureIe_CriticalityDiagnostics) isE2ConnectionUpdateFailureIe_E2ConnectionUpdateFailureIe() {
}

// sequence from e2ap_v2.asn:872
// {E2nodeConfigurationUpdate}
type E2NodeConfigurationUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2NodeConfigurationUpdateIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2NodeConfigurationUpdate) Reset() {
	*x = E2NodeConfigurationUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdate) ProtoMessage() {}

func (x *E2NodeConfigurationUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdate.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdate) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{83}
}

func (x *E2NodeConfigurationUpdate) GetProtocolIes() []*E2NodeConfigurationUpdateIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:876
// {_E2nodeConfigurationUpdate-IEs}
type E2NodeConfigurationUpdateIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeConfigurationUpdateIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeConfigurationUpdateIes) Reset() {
	*x = E2NodeConfigurationUpdateIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateIes) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateIes.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{84}
}

func (x *E2NodeConfigurationUpdateIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeConfigurationUpdateIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeConfigurationUpdateIes) GetValue() *E2NodeConfigurationUpdateIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeConfigurationUpdateIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeConfigurationUpdateIe:
	//	*E2NodeConfigurationUpdateIe_TransactionId
	//	*E2NodeConfigurationUpdateIe_GlobalE2NodeId
	//	*E2NodeConfigurationUpdateIe_E2NodeComponentConfigAddition
	//	*E2NodeConfigurationUpdateIe_E2NodeComponentConfigUpdate
	//	*E2NodeConfigurationUpdateIe_E2NodeComponentConfigRemoval
	//	*E2NodeConfigurationUpdateIe_E2NodeTnlassociationRemoval
	E2NodeConfigurationUpdateIe isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe `protobuf_oneof:"e2node_configuration_update_ie"`
}

func (x *E2NodeConfigurationUpdateIe) Reset() {
	*x = E2NodeConfigurationUpdateIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateIe) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateIe.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{85}
}

func (m *E2NodeConfigurationUpdateIe) GetE2NodeConfigurationUpdateIe() isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe {
	if m != nil {
		return m.E2NodeConfigurationUpdateIe
	}
	return nil
}

func (x *E2NodeConfigurationUpdateIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2NodeConfigurationUpdateIe().(*E2NodeConfigurationUpdateIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2NodeConfigurationUpdateIe) GetGlobalE2NodeId() *e2ap_ies.GlobalE2NodeId {
	if x, ok := x.GetE2NodeConfigurationUpdateIe().(*E2NodeConfigurationUpdateIe_GlobalE2NodeId); ok {
		return x.GlobalE2NodeId
	}
	return nil
}

func (x *E2NodeConfigurationUpdateIe) GetE2NodeComponentConfigAddition() *E2NodeComponentConfigAdditionList {
	if x, ok := x.GetE2NodeConfigurationUpdateIe().(*E2NodeConfigurationUpdateIe_E2NodeComponentConfigAddition); ok {
		return x.E2NodeComponentConfigAddition
	}
	return nil
}

func (x *E2NodeConfigurationUpdateIe) GetE2NodeComponentConfigUpdate() *E2NodeComponentConfigUpdateList {
	if x, ok := x.GetE2NodeConfigurationUpdateIe().(*E2NodeConfigurationUpdateIe_E2NodeComponentConfigUpdate); ok {
		return x.E2NodeComponentConfigUpdate
	}
	return nil
}

func (x *E2NodeConfigurationUpdateIe) GetE2NodeComponentConfigRemoval() *E2NodeComponentConfigRemovalList {
	if x, ok := x.GetE2NodeConfigurationUpdateIe().(*E2NodeConfigurationUpdateIe_E2NodeComponentConfigRemoval); ok {
		return x.E2NodeComponentConfigRemoval
	}
	return nil
}

func (x *E2NodeConfigurationUpdateIe) GetE2NodeTnlassociationRemoval() *E2NodeTnlassociationRemovalList {
	if x, ok := x.GetE2NodeConfigurationUpdateIe().(*E2NodeConfigurationUpdateIe_E2NodeTnlassociationRemoval); ok {
		return x.E2NodeTnlassociationRemoval
	}
	return nil
}

type isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe interface {
	isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe()
}

type E2NodeConfigurationUpdateIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2NodeConfigurationUpdateIe_GlobalE2NodeId struct {
	// @inject_tag: aper:"choiceExt"
	GlobalE2NodeId *e2ap_ies.GlobalE2NodeId `protobuf:"bytes,2,opt,name=global_e2node_id,json=globalE2nodeId,proto3,oneof" aper:"choiceExt"`
}

type E2NodeConfigurationUpdateIe_E2NodeComponentConfigAddition struct {
	E2NodeComponentConfigAddition *E2NodeComponentConfigAdditionList `protobuf:"bytes,3,opt,name=e2node_component_config_addition,json=e2nodeComponentConfigAddition,proto3,oneof"`
}

type E2NodeConfigurationUpdateIe_E2NodeComponentConfigUpdate struct {
	E2NodeComponentConfigUpdate *E2NodeComponentConfigUpdateList `protobuf:"bytes,4,opt,name=e2node_component_config_update,json=e2nodeComponentConfigUpdate,proto3,oneof"`
}

type E2NodeConfigurationUpdateIe_E2NodeComponentConfigRemoval struct {
	E2NodeComponentConfigRemoval *E2NodeComponentConfigRemovalList `protobuf:"bytes,5,opt,name=e2node_component_config_removal,json=e2nodeComponentConfigRemoval,proto3,oneof"`
}

type E2NodeConfigurationUpdateIe_E2NodeTnlassociationRemoval struct {
	E2NodeTnlassociationRemoval *E2NodeTnlassociationRemovalList `protobuf:"bytes,6,opt,name=e2node_tnlassociation_removal,json=e2nodeTnlassociationRemoval,proto3,oneof"`
}

func (*E2NodeConfigurationUpdateIe_TransactionId) isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe() {
}

func (*E2NodeConfigurationUpdateIe_GlobalE2NodeId) isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe() {
}

func (*E2NodeConfigurationUpdateIe_E2NodeComponentConfigAddition) isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe() {
}

func (*E2NodeConfigurationUpdateIe_E2NodeComponentConfigUpdate) isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe() {
}

func (*E2NodeConfigurationUpdateIe_E2NodeComponentConfigRemoval) isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe() {
}

func (*E2NodeConfigurationUpdateIe_E2NodeTnlassociationRemoval) isE2NodeConfigurationUpdateIe_E2NodeConfigurationUpdateIe() {
}

// sequence from e2ap_v2.asn:886
// {E2nodeComponentConfigAddition-List}
type E2NodeComponentConfigAdditionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024"
	Value []*E2NodeComponentConfigAdditionItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024"`
}

func (x *E2NodeComponentConfigAdditionList) Reset() {
	*x = E2NodeComponentConfigAdditionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigAdditionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigAdditionList) ProtoMessage() {}

func (x *E2NodeComponentConfigAdditionList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigAdditionList.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigAdditionList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{86}
}

func (x *E2NodeComponentConfigAdditionList) GetValue() []*E2NodeComponentConfigAdditionItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:888
// {_E2nodeComponentConfigAddition-ItemIEs}
type E2NodeComponentConfigAdditionItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeComponentConfigAdditionItemIe `protobuf:"bytes,3,opt,name=value,json=E2nodeComponentConfigUpdateItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeComponentConfigAdditionItemIes) Reset() {
	*x = E2NodeComponentConfigAdditionItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigAdditionItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigAdditionItemIes) ProtoMessage() {}

func (x *E2NodeComponentConfigAdditionItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigAdditionItemIes.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigAdditionItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{87}
}

func (x *E2NodeComponentConfigAdditionItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeComponentConfigAdditionItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeComponentConfigAdditionItemIes) GetValue() *E2NodeComponentConfigAdditionItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeComponentConfigAdditionItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeComponentConfigAdditionItemIe:
	//	*E2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItem
	E2NodeComponentConfigAdditionItemIe isE2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItemIe `protobuf_oneof:"e2node_component_config_addition_item_ie"`
}

func (x *E2NodeComponentConfigAdditionItemIe) Reset() {
	*x = E2NodeComponentConfigAdditionItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigAdditionItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigAdditionItemIe) ProtoMessage() {}

func (x *E2NodeComponentConfigAdditionItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigAdditionItemIe.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigAdditionItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{88}
}

func (m *E2NodeComponentConfigAdditionItemIe) GetE2NodeComponentConfigAdditionItemIe() isE2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItemIe {
	if m != nil {
		return m.E2NodeComponentConfigAdditionItemIe
	}
	return nil
}

func (x *E2NodeComponentConfigAdditionItemIe) GetE2NodeComponentConfigAdditionItem() *E2NodeComponentConfigAdditionItem {
	if x, ok := x.GetE2NodeComponentConfigAdditionItemIe().(*E2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItem); ok {
		return x.E2NodeComponentConfigAdditionItem
	}
	return nil
}

type isE2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItemIe interface {
	isE2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItemIe()
}

type E2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItem struct {
	//@inject_tag: aper:"valueExt"
	E2NodeComponentConfigAdditionItem *E2NodeComponentConfigAdditionItem `protobuf:"bytes,1,opt,name=e2node_component_config_addition_item,json=e2nodeComponentConfigAdditionItem,proto3,oneof" aper:"valueExt"`
}

func (*E2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItem) isE2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItemIe() {
}

// sequence from e2ap_v2.asn:894
// {E2nodeComponentConfigAddition-Item}
type E2NodeComponentConfigAdditionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:6"
	E2NodeComponentInterfaceType e2ap_ies.E2NodeComponentInterfaceType `protobuf:"varint,1,opt,name=e2node_component_interface_type,json=e2nodeComponentInterfaceType,proto3,enum=e2ap.v2.E2NodeComponentInterfaceType" json:"e2node_component_interface_type,omitempty" aper:"valueExt,valueLB:0,valueUB:6"`
	// @inject_tag: aper:"choiceExt"
	E2NodeComponentId *e2ap_ies.E2NodeComponentId `protobuf:"bytes,2,opt,name=e2node_component_id,json=e2nodeComponentID,proto3" json:"e2node_component_id,omitempty" aper:"choiceExt"`
	// @inject_tag: aper:"valueExt"
	E2NodeComponentConfiguration *e2ap_ies.E2NodeComponentConfiguration `protobuf:"bytes,3,opt,name=e2node_component_configuration,json=e2nodeComponentConfiguration,proto3" json:"e2node_component_configuration,omitempty" aper:"valueExt"`
}

func (x *E2NodeComponentConfigAdditionItem) Reset() {
	*x = E2NodeComponentConfigAdditionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigAdditionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigAdditionItem) ProtoMessage() {}

func (x *E2NodeComponentConfigAdditionItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigAdditionItem.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigAdditionItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{89}
}

func (x *E2NodeComponentConfigAdditionItem) GetE2NodeComponentInterfaceType() e2ap_ies.E2NodeComponentInterfaceType {
	if x != nil {
		return x.E2NodeComponentInterfaceType
	}
	return e2ap_ies.E2NodeComponentInterfaceType(0)
}

func (x *E2NodeComponentConfigAdditionItem) GetE2NodeComponentId() *e2ap_ies.E2NodeComponentId {
	if x != nil {
		return x.E2NodeComponentId
	}
	return nil
}

func (x *E2NodeComponentConfigAdditionItem) GetE2NodeComponentConfiguration() *e2ap_ies.E2NodeComponentConfiguration {
	if x != nil {
		return x.E2NodeComponentConfiguration
	}
	return nil
}

// sequence from e2ap_v2.asn:900
// {E2nodeComponentConfigUpdate-List}
type E2NodeComponentConfigUpdateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024"
	Value []*E2NodeComponentConfigUpdateItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024"`
}

func (x *E2NodeComponentConfigUpdateList) Reset() {
	*x = E2NodeComponentConfigUpdateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigUpdateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigUpdateList) ProtoMessage() {}

func (x *E2NodeComponentConfigUpdateList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigUpdateList.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigUpdateList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{90}
}

func (x *E2NodeComponentConfigUpdateList) GetValue() []*E2NodeComponentConfigUpdateItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:902
// {_E2nodeComponentConfigUpdate-ItemIEs}
type E2NodeComponentConfigUpdateItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeComponentConfigUpdateItemIe `protobuf:"bytes,3,opt,name=value,json=E2nodeComponentConfigUpdateItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeComponentConfigUpdateItemIes) Reset() {
	*x = E2NodeComponentConfigUpdateItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigUpdateItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigUpdateItemIes) ProtoMessage() {}

func (x *E2NodeComponentConfigUpdateItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigUpdateItemIes.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigUpdateItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{91}
}

func (x *E2NodeComponentConfigUpdateItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeComponentConfigUpdateItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeComponentConfigUpdateItemIes) GetValue() *E2NodeComponentConfigUpdateItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeComponentConfigUpdateItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeComponentConfigUpdateItemIe:
	//	*E2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItem
	E2NodeComponentConfigUpdateItemIe isE2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItemIe `protobuf_oneof:"e2node_component_config_update_item_ie"`
}

func (x *E2NodeComponentConfigUpdateItemIe) Reset() {
	*x = E2NodeComponentConfigUpdateItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigUpdateItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigUpdateItemIe) ProtoMessage() {}

func (x *E2NodeComponentConfigUpdateItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigUpdateItemIe.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigUpdateItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{92}
}

func (m *E2NodeComponentConfigUpdateItemIe) GetE2NodeComponentConfigUpdateItemIe() isE2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItemIe {
	if m != nil {
		return m.E2NodeComponentConfigUpdateItemIe
	}
	return nil
}

func (x *E2NodeComponentConfigUpdateItemIe) GetE2NodeComponentConfigUpdateItem() *E2NodeComponentConfigUpdateItem {
	if x, ok := x.GetE2NodeComponentConfigUpdateItemIe().(*E2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItem); ok {
		return x.E2NodeComponentConfigUpdateItem
	}
	return nil
}

type isE2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItemIe interface {
	isE2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItemIe()
}

type E2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItem struct {
	//@inject_tag: aper:"valueExt"
	E2NodeComponentConfigUpdateItem *E2NodeComponentConfigUpdateItem `protobuf:"bytes,1,opt,name=e2node_component_config_update_item,json=e2nodeComponentConfigUpdateItem,proto3,oneof" aper:"valueExt"`
}

func (*E2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItem) isE2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItemIe() {
}

// sequence from e2ap_v2.asn:908
// {E2nodeComponentConfigUpdate-Item}
type E2NodeComponentConfigUpdateItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:6"
	E2NodeComponentInterfaceType e2ap_ies.E2NodeComponentInterfaceType `protobuf:"varint,1,opt,name=e2node_component_interface_type,json=e2nodeComponentInterfaceType,proto3,enum=e2ap.v2.E2NodeComponentInterfaceType" json:"e2node_component_interface_type,omitempty" aper:"valueExt,valueLB:0,valueUB:6"`
	// @inject_tag: aper:"choiceExt"
	E2NodeComponentId *e2ap_ies.E2NodeComponentId `protobuf:"bytes,2,opt,name=e2node_component_id,json=e2nodeComponentID,proto3" json:"e2node_component_id,omitempty" aper:"choiceExt"`
	// @inject_tag: aper:"valueExt"
	E2NodeComponentConfiguration *e2ap_ies.E2NodeComponentConfiguration `protobuf:"bytes,3,opt,name=e2node_component_configuration,json=e2nodeComponentConfiguration,proto3" json:"e2node_component_configuration,omitempty" aper:"valueExt"`
}

func (x *E2NodeComponentConfigUpdateItem) Reset() {
	*x = E2NodeComponentConfigUpdateItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigUpdateItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigUpdateItem) ProtoMessage() {}

func (x *E2NodeComponentConfigUpdateItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigUpdateItem.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigUpdateItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{93}
}

func (x *E2NodeComponentConfigUpdateItem) GetE2NodeComponentInterfaceType() e2ap_ies.E2NodeComponentInterfaceType {
	if x != nil {
		return x.E2NodeComponentInterfaceType
	}
	return e2ap_ies.E2NodeComponentInterfaceType(0)
}

func (x *E2NodeComponentConfigUpdateItem) GetE2NodeComponentId() *e2ap_ies.E2NodeComponentId {
	if x != nil {
		return x.E2NodeComponentId
	}
	return nil
}

func (x *E2NodeComponentConfigUpdateItem) GetE2NodeComponentConfiguration() *e2ap_ies.E2NodeComponentConfiguration {
	if x != nil {
		return x.E2NodeComponentConfiguration
	}
	return nil
}

// sequence from e2ap_v2.asn:914
// {E2nodeComponentConfigRemoval-List}
type E2NodeComponentConfigRemovalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024"
	Value []*E2NodeComponentConfigRemovalItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024"`
}

func (x *E2NodeComponentConfigRemovalList) Reset() {
	*x = E2NodeComponentConfigRemovalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigRemovalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigRemovalList) ProtoMessage() {}

func (x *E2NodeComponentConfigRemovalList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigRemovalList.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigRemovalList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{94}
}

func (x *E2NodeComponentConfigRemovalList) GetValue() []*E2NodeComponentConfigRemovalItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:916
// {_E2nodeComponentConfigRemoval-ItemIEs}
type E2NodeComponentConfigRemovalItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeComponentConfigRemovalItemIe `protobuf:"bytes,3,opt,name=value,json=E2nodeComponentConfigRemovalItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeComponentConfigRemovalItemIes) Reset() {
	*x = E2NodeComponentConfigRemovalItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigRemovalItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigRemovalItemIes) ProtoMessage() {}

func (x *E2NodeComponentConfigRemovalItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigRemovalItemIes.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigRemovalItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{95}
}

func (x *E2NodeComponentConfigRemovalItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeComponentConfigRemovalItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeComponentConfigRemovalItemIes) GetValue() *E2NodeComponentConfigRemovalItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeComponentConfigRemovalItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeComponentConfigRemovalItemIe:
	//	*E2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItem
	E2NodeComponentConfigRemovalItemIe isE2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItemIe `protobuf_oneof:"e2node_component_config_removal_item_ie"`
}

func (x *E2NodeComponentConfigRemovalItemIe) Reset() {
	*x = E2NodeComponentConfigRemovalItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigRemovalItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigRemovalItemIe) ProtoMessage() {}

func (x *E2NodeComponentConfigRemovalItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigRemovalItemIe.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigRemovalItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{96}
}

func (m *E2NodeComponentConfigRemovalItemIe) GetE2NodeComponentConfigRemovalItemIe() isE2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItemIe {
	if m != nil {
		return m.E2NodeComponentConfigRemovalItemIe
	}
	return nil
}

func (x *E2NodeComponentConfigRemovalItemIe) GetE2NodeComponentConfigRemovalItem() *E2NodeComponentConfigRemovalItem {
	if x, ok := x.GetE2NodeComponentConfigRemovalItemIe().(*E2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItem); ok {
		return x.E2NodeComponentConfigRemovalItem
	}
	return nil
}

type isE2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItemIe interface {
	isE2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItemIe()
}

type E2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItem struct {
	//@inject_tag: aper:"valueExt"
	E2NodeComponentConfigRemovalItem *E2NodeComponentConfigRemovalItem `protobuf:"bytes,1,opt,name=e2node_component_config_removal_item,json=e2nodeComponentConfigRemovalItem,proto3,oneof" aper:"valueExt"`
}

func (*E2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItem) isE2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItemIe() {
}

// sequence from e2ap_v2.asn:922
// {E2nodeComponentConfigRemoval-Item}
type E2NodeComponentConfigRemovalItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:6"
	E2NodeComponentInterfaceType e2ap_ies.E2NodeComponentInterfaceType `protobuf:"varint,1,opt,name=e2node_component_interface_type,json=e2nodeComponentInterfaceType,proto3,enum=e2ap.v2.E2NodeComponentInterfaceType" json:"e2node_component_interface_type,omitempty" aper:"valueExt,valueLB:0,valueUB:6"`
	// @inject_tag: aper:"choiceExt"
	E2NodeComponentId *e2ap_ies.E2NodeComponentId `protobuf:"bytes,2,opt,name=e2node_component_id,json=e2nodeComponentID,proto3" json:"e2node_component_id,omitempty" aper:"choiceExt"`
}

func (x *E2NodeComponentConfigRemovalItem) Reset() {
	*x = E2NodeComponentConfigRemovalItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigRemovalItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigRemovalItem) ProtoMessage() {}

func (x *E2NodeComponentConfigRemovalItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigRemovalItem.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigRemovalItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{97}
}

func (x *E2NodeComponentConfigRemovalItem) GetE2NodeComponentInterfaceType() e2ap_ies.E2NodeComponentInterfaceType {
	if x != nil {
		return x.E2NodeComponentInterfaceType
	}
	return e2ap_ies.E2NodeComponentInterfaceType(0)
}

func (x *E2NodeComponentConfigRemovalItem) GetE2NodeComponentId() *e2ap_ies.E2NodeComponentId {
	if x != nil {
		return x.E2NodeComponentId
	}
	return nil
}

// sequence from e2ap_v2.asn:927
// {E2nodeTNLassociationRemoval-List}
type E2NodeTnlassociationRemovalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:32"
	Value []*E2NodeTnlassociationRemovalItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:32"`
}

func (x *E2NodeTnlassociationRemovalList) Reset() {
	*x = E2NodeTnlassociationRemovalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeTnlassociationRemovalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeTnlassociationRemovalList) ProtoMessage() {}

func (x *E2NodeTnlassociationRemovalList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeTnlassociationRemovalList.ProtoReflect.Descriptor instead.
func (*E2NodeTnlassociationRemovalList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{98}
}

func (x *E2NodeTnlassociationRemovalList) GetValue() []*E2NodeTnlassociationRemovalItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:929
// {_E2nodeTNLassociationRemoval-ItemIEs}
type E2NodeTnlassociationRemovalItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeTnlassociationRemovalItemIe `protobuf:"bytes,3,opt,name=value,json=E2nodeComponentConfigRemovalItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeTnlassociationRemovalItemIes) Reset() {
	*x = E2NodeTnlassociationRemovalItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeTnlassociationRemovalItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeTnlassociationRemovalItemIes) ProtoMessage() {}

func (x *E2NodeTnlassociationRemovalItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeTnlassociationRemovalItemIes.ProtoReflect.Descriptor instead.
func (*E2NodeTnlassociationRemovalItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{99}
}

func (x *E2NodeTnlassociationRemovalItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeTnlassociationRemovalItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeTnlassociationRemovalItemIes) GetValue() *E2NodeTnlassociationRemovalItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeTnlassociationRemovalItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeTnlassociationRemovalItemIe:
	//	*E2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItem
	E2NodeTnlassociationRemovalItemIe isE2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItemIe `protobuf_oneof:"e2node_tnlassociation_removal_item_ie"`
}

func (x *E2NodeTnlassociationRemovalItemIe) Reset() {
	*x = E2NodeTnlassociationRemovalItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeTnlassociationRemovalItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeTnlassociationRemovalItemIe) ProtoMessage() {}

func (x *E2NodeTnlassociationRemovalItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeTnlassociationRemovalItemIe.ProtoReflect.Descriptor instead.
func (*E2NodeTnlassociationRemovalItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{100}
}

func (m *E2NodeTnlassociationRemovalItemIe) GetE2NodeTnlassociationRemovalItemIe() isE2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItemIe {
	if m != nil {
		return m.E2NodeTnlassociationRemovalItemIe
	}
	return nil
}

func (x *E2NodeTnlassociationRemovalItemIe) GetE2NodeTnlassociationRemovalItem() *E2NodeTnlassociationRemovalItem {
	if x, ok := x.GetE2NodeTnlassociationRemovalItemIe().(*E2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItem); ok {
		return x.E2NodeTnlassociationRemovalItem
	}
	return nil
}

type isE2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItemIe interface {
	isE2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItemIe()
}

type E2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItem struct {
	//@inject_tag: aper:"valueExt"
	E2NodeTnlassociationRemovalItem *E2NodeTnlassociationRemovalItem `protobuf:"bytes,1,opt,name=e2node_tnlassociation_removal_item,json=e2nodeTnlassociationRemovalItem,proto3,oneof" aper:"valueExt"`
}

func (*E2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItem) isE2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItemIe() {
}

// sequence from e2ap_v2.asn:935
// {E2nodeTNLassociationRemoval-Item}
type E2NodeTnlassociationRemovalItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	TnlInformation *e2ap_ies.Tnlinformation `protobuf:"bytes,1,opt,name=tnl_information,json=tnlInformation,proto3" json:"tnl_information,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"valueExt"
	TnlInformationRic *e2ap_ies.Tnlinformation `protobuf:"bytes,2,opt,name=tnl_information_ric,json=tnlInformationRIC,proto3" json:"tnl_information_ric,omitempty" aper:"valueExt"`
}

func (x *E2NodeTnlassociationRemovalItem) Reset() {
	*x = E2NodeTnlassociationRemovalItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeTnlassociationRemovalItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeTnlassociationRemovalItem) ProtoMessage() {}

func (x *E2NodeTnlassociationRemovalItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeTnlassociationRemovalItem.ProtoReflect.Descriptor instead.
func (*E2NodeTnlassociationRemovalItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{101}
}

func (x *E2NodeTnlassociationRemovalItem) GetTnlInformation() *e2ap_ies.Tnlinformation {
	if x != nil {
		return x.TnlInformation
	}
	return nil
}

func (x *E2NodeTnlassociationRemovalItem) GetTnlInformationRic() *e2ap_ies.Tnlinformation {
	if x != nil {
		return x.TnlInformationRic
	}
	return nil
}

// sequence from e2ap_v2.asn:946
// {E2nodeConfigurationUpdateAcknowledge}
type E2NodeConfigurationUpdateAcknowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2NodeConfigurationUpdateAcknowledgeIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2NodeConfigurationUpdateAcknowledge) Reset() {
	*x = E2NodeConfigurationUpdateAcknowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateAcknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateAcknowledge) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateAcknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateAcknowledge.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateAcknowledge) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{102}
}

func (x *E2NodeConfigurationUpdateAcknowledge) GetProtocolIes() []*E2NodeConfigurationUpdateAcknowledgeIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:950
// {_E2nodeConfigurationUpdateAcknowledge-IEs}
type E2NodeConfigurationUpdateAcknowledgeIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeConfigurationUpdateAcknowledgeIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeConfigurationUpdateAcknowledgeIes) Reset() {
	*x = E2NodeConfigurationUpdateAcknowledgeIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateAcknowledgeIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateAcknowledgeIes) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateAcknowledgeIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateAcknowledgeIes.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateAcknowledgeIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{103}
}

func (x *E2NodeConfigurationUpdateAcknowledgeIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeConfigurationUpdateAcknowledgeIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeConfigurationUpdateAcknowledgeIes) GetValue() *E2NodeConfigurationUpdateAcknowledgeIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeConfigurationUpdateAcknowledgeIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeConfigurationUpdateAcknowledgeIe:
	//	*E2NodeConfigurationUpdateAcknowledgeIe_TransactionId
	//	*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigAdditionAck
	//	*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigUpdateAck
	//	*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigRemovalAck
	E2NodeConfigurationUpdateAcknowledgeIe isE2NodeConfigurationUpdateAcknowledgeIe_E2NodeConfigurationUpdateAcknowledgeIe `protobuf_oneof:"e2node_configuration_update_acknowledge_ie"`
}

func (x *E2NodeConfigurationUpdateAcknowledgeIe) Reset() {
	*x = E2NodeConfigurationUpdateAcknowledgeIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateAcknowledgeIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateAcknowledgeIe) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateAcknowledgeIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateAcknowledgeIe.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateAcknowledgeIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{104}
}

func (m *E2NodeConfigurationUpdateAcknowledgeIe) GetE2NodeConfigurationUpdateAcknowledgeIe() isE2NodeConfigurationUpdateAcknowledgeIe_E2NodeConfigurationUpdateAcknowledgeIe {
	if m != nil {
		return m.E2NodeConfigurationUpdateAcknowledgeIe
	}
	return nil
}

func (x *E2NodeConfigurationUpdateAcknowledgeIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2NodeConfigurationUpdateAcknowledgeIe().(*E2NodeConfigurationUpdateAcknowledgeIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2NodeConfigurationUpdateAcknowledgeIe) GetE2NodeComponentConfigAdditionAck() *E2NodeComponentConfigAdditionAckList {
	if x, ok := x.GetE2NodeConfigurationUpdateAcknowledgeIe().(*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigAdditionAck); ok {
		return x.E2NodeComponentConfigAdditionAck
	}
	return nil
}

func (x *E2NodeConfigurationUpdateAcknowledgeIe) GetE2NodeComponentConfigUpdateAck() *E2NodeComponentConfigUpdateAckList {
	if x, ok := x.GetE2NodeConfigurationUpdateAcknowledgeIe().(*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigUpdateAck); ok {
		return x.E2NodeComponentConfigUpdateAck
	}
	return nil
}

func (x *E2NodeConfigurationUpdateAcknowledgeIe) GetE2NodeComponentConfigRemovalAck() *E2NodeComponentConfigRemovalAckList {
	if x, ok := x.GetE2NodeConfigurationUpdateAcknowledgeIe().(*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigRemovalAck); ok {
		return x.E2NodeComponentConfigRemovalAck
	}
	return nil
}

type isE2NodeConfigurationUpdateAcknowledgeIe_E2NodeConfigurationUpdateAcknowledgeIe interface {
	isE2NodeConfigurationUpdateAcknowledgeIe_E2NodeConfigurationUpdateAcknowledgeIe()
}

type E2NodeConfigurationUpdateAcknowledgeIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigAdditionAck struct {
	E2NodeComponentConfigAdditionAck *E2NodeComponentConfigAdditionAckList `protobuf:"bytes,2,opt,name=e2node_component_config_addition_ack,json=e2nodeComponentConfigAdditionAck,proto3,oneof"`
}

type E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigUpdateAck struct {
	E2NodeComponentConfigUpdateAck *E2NodeComponentConfigUpdateAckList `protobuf:"bytes,3,opt,name=e2node_component_config_update_ack,json=e2nodeComponentConfigUpdateAck,proto3,oneof"`
}

type E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigRemovalAck struct {
	E2NodeComponentConfigRemovalAck *E2NodeComponentConfigRemovalAckList `protobuf:"bytes,4,opt,name=e2node_component_config_removal_ack,json=e2nodeComponentConfigRemovalAck,proto3,oneof"`
}

func (*E2NodeConfigurationUpdateAcknowledgeIe_TransactionId) isE2NodeConfigurationUpdateAcknowledgeIe_E2NodeConfigurationUpdateAcknowledgeIe() {
}

func (*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigAdditionAck) isE2NodeConfigurationUpdateAcknowledgeIe_E2NodeConfigurationUpdateAcknowledgeIe() {
}

func (*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigUpdateAck) isE2NodeConfigurationUpdateAcknowledgeIe_E2NodeConfigurationUpdateAcknowledgeIe() {
}

func (*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigRemovalAck) isE2NodeConfigurationUpdateAcknowledgeIe_E2NodeConfigurationUpdateAcknowledgeIe() {
}

// sequence from e2ap_v2.asn:958
// {E2nodeComponentConfigAdditionAck-List}
type E2NodeComponentConfigAdditionAckList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024"
	Value []*E2NodeComponentConfigAdditionAckItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024"`
}

func (x *E2NodeComponentConfigAdditionAckList) Reset() {
	*x = E2NodeComponentConfigAdditionAckList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigAdditionAckList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigAdditionAckList) ProtoMessage() {}

func (x *E2NodeComponentConfigAdditionAckList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigAdditionAckList.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigAdditionAckList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{105}
}

func (x *E2NodeComponentConfigAdditionAckList) GetValue() []*E2NodeComponentConfigAdditionAckItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:960
// {_E2nodeComponentConfigAdditionAck-ItemIEs}
type E2NodeComponentConfigAdditionAckItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeComponentConfigAdditionAckItemIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeComponentConfigAdditionAckItemIes) Reset() {
	*x = E2NodeComponentConfigAdditionAckItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigAdditionAckItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigAdditionAckItemIes) ProtoMessage() {}

func (x *E2NodeComponentConfigAdditionAckItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigAdditionAckItemIes.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigAdditionAckItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{106}
}

func (x *E2NodeComponentConfigAdditionAckItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeComponentConfigAdditionAckItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeComponentConfigAdditionAckItemIes) GetValue() *E2NodeComponentConfigAdditionAckItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeComponentConfigAdditionAckItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeComponentConfigAdditionAckItemIe:
	//	*E2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItem
	E2NodeComponentConfigAdditionAckItemIe isE2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItemIe `protobuf_oneof:"e2node_component_config_addition_ack_item_ie"`
}

func (x *E2NodeComponentConfigAdditionAckItemIe) Reset() {
	*x = E2NodeComponentConfigAdditionAckItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigAdditionAckItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigAdditionAckItemIe) ProtoMessage() {}

func (x *E2NodeComponentConfigAdditionAckItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigAdditionAckItemIe.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigAdditionAckItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{107}
}

func (m *E2NodeComponentConfigAdditionAckItemIe) GetE2NodeComponentConfigAdditionAckItemIe() isE2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItemIe {
	if m != nil {
		return m.E2NodeComponentConfigAdditionAckItemIe
	}
	return nil
}

func (x *E2NodeComponentConfigAdditionAckItemIe) GetE2NodeComponentConfigAdditionAckItem() *E2NodeComponentConfigAdditionAckItem {
	if x, ok := x.GetE2NodeComponentConfigAdditionAckItemIe().(*E2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItem); ok {
		return x.E2NodeComponentConfigAdditionAckItem
	}
	return nil
}

type isE2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItemIe interface {
	isE2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItemIe()
}

type E2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItem struct {
	//@inject_tag: aper:"valueExt"
	E2NodeComponentConfigAdditionAckItem *E2NodeComponentConfigAdditionAckItem `protobuf:"bytes,1,opt,name=e2node_component_config_addition_ack_item,json=e2nodeComponentConfigAdditionAckItem,proto3,oneof" aper:"valueExt"`
}

func (*E2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItem) isE2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItemIe() {
}

// sequence from e2ap_v2.asn:966
// {E2nodeComponentConfigAdditionAck-Item}
type E2NodeComponentConfigAdditionAckItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:6"
	E2NodeComponentInterfaceType e2ap_ies.E2NodeComponentInterfaceType `protobuf:"varint,1,opt,name=e2node_component_interface_type,json=e2nodeComponentInterfaceType,proto3,enum=e2ap.v2.E2NodeComponentInterfaceType" json:"e2node_component_interface_type,omitempty" aper:"valueExt,valueLB:0,valueUB:6"`
	// @inject_tag: aper:"choiceExt"
	E2NodeComponentId *e2ap_ies.E2NodeComponentId `protobuf:"bytes,2,opt,name=e2node_component_id,json=e2nodeComponentID,proto3" json:"e2node_component_id,omitempty" aper:"choiceExt"`
	// @inject_tag: aper:"valueExt"
	E2NodeComponentConfigurationAck *e2ap_ies.E2NodeComponentConfigurationAck `protobuf:"bytes,3,opt,name=e2node_component_configuration_ack,json=e2nodeComponentConfigurationAck,proto3" json:"e2node_component_configuration_ack,omitempty" aper:"valueExt"`
}

func (x *E2NodeComponentConfigAdditionAckItem) Reset() {
	*x = E2NodeComponentConfigAdditionAckItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigAdditionAckItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigAdditionAckItem) ProtoMessage() {}

func (x *E2NodeComponentConfigAdditionAckItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigAdditionAckItem.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigAdditionAckItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{108}
}

func (x *E2NodeComponentConfigAdditionAckItem) GetE2NodeComponentInterfaceType() e2ap_ies.E2NodeComponentInterfaceType {
	if x != nil {
		return x.E2NodeComponentInterfaceType
	}
	return e2ap_ies.E2NodeComponentInterfaceType(0)
}

func (x *E2NodeComponentConfigAdditionAckItem) GetE2NodeComponentId() *e2ap_ies.E2NodeComponentId {
	if x != nil {
		return x.E2NodeComponentId
	}
	return nil
}

func (x *E2NodeComponentConfigAdditionAckItem) GetE2NodeComponentConfigurationAck() *e2ap_ies.E2NodeComponentConfigurationAck {
	if x != nil {
		return x.E2NodeComponentConfigurationAck
	}
	return nil
}

// sequence from e2ap_v2.asn:972
// {E2nodeComponentConfigUpdateAck-List}
type E2NodeComponentConfigUpdateAckList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024"
	Value []*E2NodeComponentConfigUpdateAckItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024"`
}

func (x *E2NodeComponentConfigUpdateAckList) Reset() {
	*x = E2NodeComponentConfigUpdateAckList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigUpdateAckList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigUpdateAckList) ProtoMessage() {}

func (x *E2NodeComponentConfigUpdateAckList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigUpdateAckList.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigUpdateAckList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{109}
}

func (x *E2NodeComponentConfigUpdateAckList) GetValue() []*E2NodeComponentConfigUpdateAckItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:974
// {_E2nodeComponentConfigUpdateAck-ItemIEs}
type E2NodeComponentConfigUpdateAckItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeComponentConfigUpdateAckItemIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeComponentConfigUpdateAckItemIes) Reset() {
	*x = E2NodeComponentConfigUpdateAckItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigUpdateAckItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigUpdateAckItemIes) ProtoMessage() {}

func (x *E2NodeComponentConfigUpdateAckItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigUpdateAckItemIes.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigUpdateAckItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{110}
}

func (x *E2NodeComponentConfigUpdateAckItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeComponentConfigUpdateAckItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeComponentConfigUpdateAckItemIes) GetValue() *E2NodeComponentConfigUpdateAckItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeComponentConfigUpdateAckItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeComponentConfigUpdateAckItemIe:
	//	*E2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItem
	E2NodeComponentConfigUpdateAckItemIe isE2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItemIe `protobuf_oneof:"e2node_component_config_update_ack_item_ie"`
}

func (x *E2NodeComponentConfigUpdateAckItemIe) Reset() {
	*x = E2NodeComponentConfigUpdateAckItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigUpdateAckItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigUpdateAckItemIe) ProtoMessage() {}

func (x *E2NodeComponentConfigUpdateAckItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigUpdateAckItemIe.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigUpdateAckItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{111}
}

func (m *E2NodeComponentConfigUpdateAckItemIe) GetE2NodeComponentConfigUpdateAckItemIe() isE2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItemIe {
	if m != nil {
		return m.E2NodeComponentConfigUpdateAckItemIe
	}
	return nil
}

func (x *E2NodeComponentConfigUpdateAckItemIe) GetE2NodeComponentConfigUpdateAckItem() *E2NodeComponentConfigUpdateAckItem {
	if x, ok := x.GetE2NodeComponentConfigUpdateAckItemIe().(*E2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItem); ok {
		return x.E2NodeComponentConfigUpdateAckItem
	}
	return nil
}

type isE2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItemIe interface {
	isE2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItemIe()
}

type E2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItem struct {
	//@inject_tag: aper:"valueExt"
	E2NodeComponentConfigUpdateAckItem *E2NodeComponentConfigUpdateAckItem `protobuf:"bytes,1,opt,name=e2node_component_config_update_ack_item,json=e2nodeComponentConfigUpdateAckItem,proto3,oneof" aper:"valueExt"`
}

func (*E2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItem) isE2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItemIe() {
}

// sequence from e2ap_v2.asn:980
// {E2nodeComponentConfigUpdateAck-Item}
type E2NodeComponentConfigUpdateAckItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:6"
	E2NodeComponentInterfaceType e2ap_ies.E2NodeComponentInterfaceType `protobuf:"varint,1,opt,name=e2node_component_interface_type,json=e2nodeComponentInterfaceType,proto3,enum=e2ap.v2.E2NodeComponentInterfaceType" json:"e2node_component_interface_type,omitempty" aper:"valueExt,valueLB:0,valueUB:6"`
	// @inject_tag: aper:"choiceExt"
	E2NodeComponentId *e2ap_ies.E2NodeComponentId `protobuf:"bytes,2,opt,name=e2node_component_id,json=e2nodeComponentID,proto3" json:"e2node_component_id,omitempty" aper:"choiceExt"`
	// @inject_tag: aper:"valueExt"
	E2NodeComponentConfigurationAck *e2ap_ies.E2NodeComponentConfigurationAck `protobuf:"bytes,3,opt,name=e2node_component_configuration_ack,json=e2nodeComponentConfigurationAck,proto3" json:"e2node_component_configuration_ack,omitempty" aper:"valueExt"`
}

func (x *E2NodeComponentConfigUpdateAckItem) Reset() {
	*x = E2NodeComponentConfigUpdateAckItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigUpdateAckItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigUpdateAckItem) ProtoMessage() {}

func (x *E2NodeComponentConfigUpdateAckItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigUpdateAckItem.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigUpdateAckItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{112}
}

func (x *E2NodeComponentConfigUpdateAckItem) GetE2NodeComponentInterfaceType() e2ap_ies.E2NodeComponentInterfaceType {
	if x != nil {
		return x.E2NodeComponentInterfaceType
	}
	return e2ap_ies.E2NodeComponentInterfaceType(0)
}

func (x *E2NodeComponentConfigUpdateAckItem) GetE2NodeComponentId() *e2ap_ies.E2NodeComponentId {
	if x != nil {
		return x.E2NodeComponentId
	}
	return nil
}

func (x *E2NodeComponentConfigUpdateAckItem) GetE2NodeComponentConfigurationAck() *e2ap_ies.E2NodeComponentConfigurationAck {
	if x != nil {
		return x.E2NodeComponentConfigurationAck
	}
	return nil
}

// sequence from e2ap_v2.asn:986
// {E2nodeComponentConfigRemovalAck-List}
type E2NodeComponentConfigRemovalAckList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:1024"
	Value []*E2NodeComponentConfigRemovalAckItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:1024"`
}

func (x *E2NodeComponentConfigRemovalAckList) Reset() {
	*x = E2NodeComponentConfigRemovalAckList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigRemovalAckList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigRemovalAckList) ProtoMessage() {}

func (x *E2NodeComponentConfigRemovalAckList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigRemovalAckList.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigRemovalAckList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{113}
}

func (x *E2NodeComponentConfigRemovalAckList) GetValue() []*E2NodeComponentConfigRemovalAckItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:988
// {_E2nodeComponentConfigRemovalAck-ItemIEs}
type E2NodeComponentConfigRemovalAckItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeComponentConfigRemovalAckItemIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeComponentConfigRemovalAckItemIes) Reset() {
	*x = E2NodeComponentConfigRemovalAckItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigRemovalAckItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigRemovalAckItemIes) ProtoMessage() {}

func (x *E2NodeComponentConfigRemovalAckItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigRemovalAckItemIes.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigRemovalAckItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{114}
}

func (x *E2NodeComponentConfigRemovalAckItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeComponentConfigRemovalAckItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeComponentConfigRemovalAckItemIes) GetValue() *E2NodeComponentConfigRemovalAckItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeComponentConfigRemovalAckItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeComponentConfigRemovalAckItemIe:
	//	*E2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItem
	E2NodeComponentConfigRemovalAckItemIe isE2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItemIe `protobuf_oneof:"e2node_component_config_removal_ack_item_ie"`
}

func (x *E2NodeComponentConfigRemovalAckItemIe) Reset() {
	*x = E2NodeComponentConfigRemovalAckItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigRemovalAckItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigRemovalAckItemIe) ProtoMessage() {}

func (x *E2NodeComponentConfigRemovalAckItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigRemovalAckItemIe.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigRemovalAckItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{115}
}

func (m *E2NodeComponentConfigRemovalAckItemIe) GetE2NodeComponentConfigRemovalAckItemIe() isE2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItemIe {
	if m != nil {
		return m.E2NodeComponentConfigRemovalAckItemIe
	}
	return nil
}

func (x *E2NodeComponentConfigRemovalAckItemIe) GetE2NodeComponentConfigRemovalAckItem() *E2NodeComponentConfigRemovalAckItem {
	if x, ok := x.GetE2NodeComponentConfigRemovalAckItemIe().(*E2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItem); ok {
		return x.E2NodeComponentConfigRemovalAckItem
	}
	return nil
}

type isE2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItemIe interface {
	isE2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItemIe()
}

type E2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItem struct {
	//@inject_tag: aper:"valueExt"
	E2NodeComponentConfigRemovalAckItem *E2NodeComponentConfigRemovalAckItem `protobuf:"bytes,1,opt,name=e2node_component_config_removal_ack_item,json=e2nodeComponentConfigRemovalAckItem,proto3,oneof" aper:"valueExt"`
}

func (*E2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItem) isE2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItemIe() {
}

// sequence from e2ap_v2.asn:994
// {E2nodeComponentConfigRemovalAck-Item}
type E2NodeComponentConfigRemovalAckItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:6"
	E2NodeComponentInterfaceType e2ap_ies.E2NodeComponentInterfaceType `protobuf:"varint,1,opt,name=e2node_component_interface_type,json=e2nodeComponentInterfaceType,proto3,enum=e2ap.v2.E2NodeComponentInterfaceType" json:"e2node_component_interface_type,omitempty" aper:"valueExt,valueLB:0,valueUB:6"`
	// @inject_tag: aper:"choiceExt"
	E2NodeComponentId *e2ap_ies.E2NodeComponentId `protobuf:"bytes,2,opt,name=e2node_component_id,json=e2nodeComponentID,proto3" json:"e2node_component_id,omitempty" aper:"choiceExt"`
	// @inject_tag: aper:"valueExt"
	E2NodeComponentConfigurationAck *e2ap_ies.E2NodeComponentConfigurationAck `protobuf:"bytes,3,opt,name=e2node_component_configuration_ack,json=e2nodeComponentConfigurationAck,proto3" json:"e2node_component_configuration_ack,omitempty" aper:"valueExt"`
}

func (x *E2NodeComponentConfigRemovalAckItem) Reset() {
	*x = E2NodeComponentConfigRemovalAckItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigRemovalAckItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigRemovalAckItem) ProtoMessage() {}

func (x *E2NodeComponentConfigRemovalAckItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigRemovalAckItem.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigRemovalAckItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{116}
}

func (x *E2NodeComponentConfigRemovalAckItem) GetE2NodeComponentInterfaceType() e2ap_ies.E2NodeComponentInterfaceType {
	if x != nil {
		return x.E2NodeComponentInterfaceType
	}
	return e2ap_ies.E2NodeComponentInterfaceType(0)
}

func (x *E2NodeComponentConfigRemovalAckItem) GetE2NodeComponentId() *e2ap_ies.E2NodeComponentId {
	if x != nil {
		return x.E2NodeComponentId
	}
	return nil
}

func (x *E2NodeComponentConfigRemovalAckItem) GetE2NodeComponentConfigurationAck() *e2ap_ies.E2NodeComponentConfigurationAck {
	if x != nil {
		return x.E2NodeComponentConfigurationAck
	}
	return nil
}

// sequence from e2ap_v2.asn:1006
// {E2nodeConfigurationUpdateFailure}
type E2NodeConfigurationUpdateFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*E2NodeConfigurationUpdateFailureIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *E2NodeConfigurationUpdateFailure) Reset() {
	*x = E2NodeConfigurationUpdateFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateFailure) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateFailure.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateFailure) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{117}
}

func (x *E2NodeConfigurationUpdateFailure) GetProtocolIes() []*E2NodeConfigurationUpdateFailureIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1010
// {_E2nodeConfigurationUpdateFailure-IEs}
type E2NodeConfigurationUpdateFailureIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *E2NodeConfigurationUpdateFailureIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *E2NodeConfigurationUpdateFailureIes) Reset() {
	*x = E2NodeConfigurationUpdateFailureIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateFailureIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateFailureIes) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateFailureIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateFailureIes.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateFailureIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{118}
}

func (x *E2NodeConfigurationUpdateFailureIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *E2NodeConfigurationUpdateFailureIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *E2NodeConfigurationUpdateFailureIes) GetValue() *E2NodeConfigurationUpdateFailureIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type E2NodeConfigurationUpdateFailureIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to E2NodeConfigurationUpdateFailureIe:
	//	*E2NodeConfigurationUpdateFailureIe_TransactionId
	//	*E2NodeConfigurationUpdateFailureIe_Cause
	//	*E2NodeConfigurationUpdateFailureIe_TimeToWait
	//	*E2NodeConfigurationUpdateFailureIe_CriticalityDiagnostics
	E2NodeConfigurationUpdateFailureIe isE2NodeConfigurationUpdateFailureIe_E2NodeConfigurationUpdateFailureIe `protobuf_oneof:"e2node_configuration_update_failure_ie"`
}

func (x *E2NodeConfigurationUpdateFailureIe) Reset() {
	*x = E2NodeConfigurationUpdateFailureIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateFailureIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateFailureIe) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateFailureIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateFailureIe.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateFailureIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{119}
}

func (m *E2NodeConfigurationUpdateFailureIe) GetE2NodeConfigurationUpdateFailureIe() isE2NodeConfigurationUpdateFailureIe_E2NodeConfigurationUpdateFailureIe {
	if m != nil {
		return m.E2NodeConfigurationUpdateFailureIe
	}
	return nil
}

func (x *E2NodeConfigurationUpdateFailureIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetE2NodeConfigurationUpdateFailureIe().(*E2NodeConfigurationUpdateFailureIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *E2NodeConfigurationUpdateFailureIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetE2NodeConfigurationUpdateFailureIe().(*E2NodeConfigurationUpdateFailureIe_Cause); ok {
		return x.Cause
	}
	return nil
}

func (x *E2NodeConfigurationUpdateFailureIe) GetTimeToWait() e2ap_ies.TimeToWait {
	if x, ok := x.GetE2NodeConfigurationUpdateFailureIe().(*E2NodeConfigurationUpdateFailureIe_TimeToWait); ok {
		return x.TimeToWait
	}
	return e2ap_ies.TimeToWait(0)
}

func (x *E2NodeConfigurationUpdateFailureIe) GetCriticalityDiagnostics() *e2ap_ies.CriticalityDiagnostics {
	if x, ok := x.GetE2NodeConfigurationUpdateFailureIe().(*E2NodeConfigurationUpdateFailureIe_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

type isE2NodeConfigurationUpdateFailureIe_E2NodeConfigurationUpdateFailureIe interface {
	isE2NodeConfigurationUpdateFailureIe_E2NodeConfigurationUpdateFailureIe()
}

type E2NodeConfigurationUpdateFailureIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type E2NodeConfigurationUpdateFailureIe_Cause struct {
	// @inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,2,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

type E2NodeConfigurationUpdateFailureIe_TimeToWait struct {
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:5"
	TimeToWait e2ap_ies.TimeToWait `protobuf:"varint,3,opt,name=time_to_wait,json=timeToWait,proto3,enum=e2ap.v2.TimeToWait,oneof" aper:"valueExt,valueLB:0,valueUB:5"`
}

type E2NodeConfigurationUpdateFailureIe_CriticalityDiagnostics struct {
	// @inject_tag: aper:"valueExt"
	CriticalityDiagnostics *e2ap_ies.CriticalityDiagnostics `protobuf:"bytes,4,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3,oneof" aper:"valueExt"`
}

func (*E2NodeConfigurationUpdateFailureIe_TransactionId) isE2NodeConfigurationUpdateFailureIe_E2NodeConfigurationUpdateFailureIe() {
}

func (*E2NodeConfigurationUpdateFailureIe_Cause) isE2NodeConfigurationUpdateFailureIe_E2NodeConfigurationUpdateFailureIe() {
}

func (*E2NodeConfigurationUpdateFailureIe_TimeToWait) isE2NodeConfigurationUpdateFailureIe_E2NodeConfigurationUpdateFailureIe() {
}

func (*E2NodeConfigurationUpdateFailureIe_CriticalityDiagnostics) isE2NodeConfigurationUpdateFailureIe_E2NodeConfigurationUpdateFailureIe() {
}

// sequence from e2ap_v2.asn:1031
// {ResetRequest}
type ResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*ResetRequestIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{120}
}

func (x *ResetRequest) GetProtocolIes() []*ResetRequestIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1035
// {_ResetRequestIEs}
type ResetRequestIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *ResetRequestIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *ResetRequestIes) Reset() {
	*x = ResetRequestIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetRequestIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequestIes) ProtoMessage() {}

func (x *ResetRequestIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequestIes.ProtoReflect.Descriptor instead.
func (*ResetRequestIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{121}
}

func (x *ResetRequestIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResetRequestIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *ResetRequestIes) GetValue() *ResetRequestIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type ResetRequestIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResetRequestIe:
	//	*ResetRequestIe_TransactionId
	//	*ResetRequestIe_Cause
	ResetRequestIe isResetRequestIe_ResetRequestIe `protobuf_oneof:"reset_request_ie"`
}

func (x *ResetRequestIe) Reset() {
	*x = ResetRequestIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetRequestIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequestIe) ProtoMessage() {}

func (x *ResetRequestIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequestIe.ProtoReflect.Descriptor instead.
func (*ResetRequestIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{122}
}

func (m *ResetRequestIe) GetResetRequestIe() isResetRequestIe_ResetRequestIe {
	if m != nil {
		return m.ResetRequestIe
	}
	return nil
}

func (x *ResetRequestIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetResetRequestIe().(*ResetRequestIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *ResetRequestIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetResetRequestIe().(*ResetRequestIe_Cause); ok {
		return x.Cause
	}
	return nil
}

type isResetRequestIe_ResetRequestIe interface {
	isResetRequestIe_ResetRequestIe()
}

type ResetRequestIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type ResetRequestIe_Cause struct {
	// @inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,2,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

func (*ResetRequestIe_TransactionId) isResetRequestIe_ResetRequestIe() {}

func (*ResetRequestIe_Cause) isResetRequestIe_ResetRequestIe() {}

// sequence from e2ap_v2.asn:1048
// {ResetResponse}
type ResetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*ResetResponseIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *ResetResponse) Reset() {
	*x = ResetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResponse) ProtoMessage() {}

func (x *ResetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResponse.ProtoReflect.Descriptor instead.
func (*ResetResponse) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{123}
}

func (x *ResetResponse) GetProtocolIes() []*ResetResponseIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1052
// {_ResetResponseIEs}
type ResetResponseIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *ResetResponseIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *ResetResponseIes) Reset() {
	*x = ResetResponseIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetResponseIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResponseIes) ProtoMessage() {}

func (x *ResetResponseIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResponseIes.ProtoReflect.Descriptor instead.
func (*ResetResponseIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{124}
}

func (x *ResetResponseIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResetResponseIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *ResetResponseIes) GetValue() *ResetResponseIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type ResetResponseIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ResetResponseIe:
	//	*ResetResponseIe_TransactionId
	//	*ResetResponseIe_CriticalityDiagnostics
	ResetResponseIe isResetResponseIe_ResetResponseIe `protobuf_oneof:"reset_response_ie"`
}

func (x *ResetResponseIe) Reset() {
	*x = ResetResponseIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetResponseIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetResponseIe) ProtoMessage() {}

func (x *ResetResponseIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetResponseIe.ProtoReflect.Descriptor instead.
func (*ResetResponseIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{125}
}

func (m *ResetResponseIe) GetResetResponseIe() isResetResponseIe_ResetResponseIe {
	if m != nil {
		return m.ResetResponseIe
	}
	return nil
}

func (x *ResetResponseIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetResetResponseIe().(*ResetResponseIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *ResetResponseIe) GetCriticalityDiagnostics() *e2ap_ies.CriticalityDiagnostics {
	if x, ok := x.GetResetResponseIe().(*ResetResponseIe_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

type isResetResponseIe_ResetResponseIe interface {
	isResetResponseIe_ResetResponseIe()
}

type ResetResponseIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type ResetResponseIe_CriticalityDiagnostics struct {
	// @inject_tag: aper:"valueExt"
	CriticalityDiagnostics *e2ap_ies.CriticalityDiagnostics `protobuf:"bytes,2,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3,oneof" aper:"valueExt"`
}

func (*ResetResponseIe_TransactionId) isResetResponseIe_ResetResponseIe() {}

func (*ResetResponseIe_CriticalityDiagnostics) isResetResponseIe_ResetResponseIe() {}

// sequence from e2ap_v2.asn:1069
// {RICserviceUpdate}
type RicserviceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicserviceUpdateIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicserviceUpdate) Reset() {
	*x = RicserviceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceUpdate) ProtoMessage() {}

func (x *RicserviceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceUpdate.ProtoReflect.Descriptor instead.
func (*RicserviceUpdate) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{126}
}

func (x *RicserviceUpdate) GetProtocolIes() []*RicserviceUpdateIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1073
// {_RICserviceUpdate-IEs}
type RicserviceUpdateIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RicserviceUpdateIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicserviceUpdateIes) Reset() {
	*x = RicserviceUpdateIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceUpdateIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceUpdateIes) ProtoMessage() {}

func (x *RicserviceUpdateIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceUpdateIes.ProtoReflect.Descriptor instead.
func (*RicserviceUpdateIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{127}
}

func (x *RicserviceUpdateIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicserviceUpdateIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicserviceUpdateIes) GetValue() *RicserviceUpdateIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicserviceUpdateIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicServiceUpdateIe:
	//	*RicserviceUpdateIe_TransactionId
	//	*RicserviceUpdateIe_RanfunctionsAdded
	//	*RicserviceUpdateIe_RanfunctionsModified
	//	*RicserviceUpdateIe_RanfunctionsDeleted
	RicServiceUpdateIe isRicserviceUpdateIe_RicServiceUpdateIe `protobuf_oneof:"ric_service_update_ie"`
}

func (x *RicserviceUpdateIe) Reset() {
	*x = RicserviceUpdateIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceUpdateIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceUpdateIe) ProtoMessage() {}

func (x *RicserviceUpdateIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceUpdateIe.ProtoReflect.Descriptor instead.
func (*RicserviceUpdateIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{128}
}

func (m *RicserviceUpdateIe) GetRicServiceUpdateIe() isRicserviceUpdateIe_RicServiceUpdateIe {
	if m != nil {
		return m.RicServiceUpdateIe
	}
	return nil
}

func (x *RicserviceUpdateIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetRicServiceUpdateIe().(*RicserviceUpdateIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *RicserviceUpdateIe) GetRanfunctionsAdded() *RanfunctionsListSingleContainer {
	if x, ok := x.GetRicServiceUpdateIe().(*RicserviceUpdateIe_RanfunctionsAdded); ok {
		return x.RanfunctionsAdded
	}
	return nil
}

func (x *RicserviceUpdateIe) GetRanfunctionsModified() *RanfunctionsListSingleContainer {
	if x, ok := x.GetRicServiceUpdateIe().(*RicserviceUpdateIe_RanfunctionsModified); ok {
		return x.RanfunctionsModified
	}
	return nil
}

func (x *RicserviceUpdateIe) GetRanfunctionsDeleted() *RanfunctionsIdListSingleContainer {
	if x, ok := x.GetRicServiceUpdateIe().(*RicserviceUpdateIe_RanfunctionsDeleted); ok {
		return x.RanfunctionsDeleted
	}
	return nil
}

type isRicserviceUpdateIe_RicServiceUpdateIe interface {
	isRicserviceUpdateIe_RicServiceUpdateIe()
}

type RicserviceUpdateIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type RicserviceUpdateIe_RanfunctionsAdded struct {
	RanfunctionsAdded *RanfunctionsListSingleContainer `protobuf:"bytes,2,opt,name=ranfunctions_added,json=ranfunctionsAdded,proto3,oneof"`
}

type RicserviceUpdateIe_RanfunctionsModified struct {
	RanfunctionsModified *RanfunctionsListSingleContainer `protobuf:"bytes,3,opt,name=ranfunctions_modified,json=ranfunctionsModified,proto3,oneof"`
}

type RicserviceUpdateIe_RanfunctionsDeleted struct {
	RanfunctionsDeleted *RanfunctionsIdListSingleContainer `protobuf:"bytes,4,opt,name=ranfunctions_deleted,json=ranfunctionsDeleted,proto3,oneof"`
}

func (*RicserviceUpdateIe_TransactionId) isRicserviceUpdateIe_RicServiceUpdateIe() {}

func (*RicserviceUpdateIe_RanfunctionsAdded) isRicserviceUpdateIe_RicServiceUpdateIe() {}

func (*RicserviceUpdateIe_RanfunctionsModified) isRicserviceUpdateIe_RicServiceUpdateIe() {}

func (*RicserviceUpdateIe_RanfunctionsDeleted) isRicserviceUpdateIe_RicServiceUpdateIe() {}

type RanfunctionsListSingleContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *RanfunctionsList `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RanfunctionsListSingleContainer) Reset() {
	*x = RanfunctionsListSingleContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionsListSingleContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionsListSingleContainer) ProtoMessage() {}

func (x *RanfunctionsListSingleContainer) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionsListSingleContainer.ProtoReflect.Descriptor instead.
func (*RanfunctionsListSingleContainer) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{129}
}

func (x *RanfunctionsListSingleContainer) GetValue() *RanfunctionsList {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2ap_v2.asn:1081
// {RANfunctions-List}
type RanfunctionsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:256"
	Value []*RanfunctionItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:256"`
}

func (x *RanfunctionsList) Reset() {
	*x = RanfunctionsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionsList) ProtoMessage() {}

func (x *RanfunctionsList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionsList.ProtoReflect.Descriptor instead.
func (*RanfunctionsList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{130}
}

func (x *RanfunctionsList) GetValue() []*RanfunctionItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1083
// {_RANfunction-ItemIEs}
type RanfunctionItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RanfunctionItemIe `protobuf:"bytes,3,opt,name=value,json=ranFunctionItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RanfunctionItemIes) Reset() {
	*x = RanfunctionItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionItemIes) ProtoMessage() {}

func (x *RanfunctionItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionItemIes.ProtoReflect.Descriptor instead.
func (*RanfunctionItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{131}
}

func (x *RanfunctionItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RanfunctionItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RanfunctionItemIes) GetValue() *RanfunctionItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RanfunctionItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RanfunctionItemIe:
	//	*RanfunctionItemIe_RanfunctionItem
	RanfunctionItemIe isRanfunctionItemIe_RanfunctionItemIe `protobuf_oneof:"ranfunction_item_ie"`
}

func (x *RanfunctionItemIe) Reset() {
	*x = RanfunctionItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionItemIe) ProtoMessage() {}

func (x *RanfunctionItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionItemIe.ProtoReflect.Descriptor instead.
func (*RanfunctionItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{132}
}

func (m *RanfunctionItemIe) GetRanfunctionItemIe() isRanfunctionItemIe_RanfunctionItemIe {
	if m != nil {
		return m.RanfunctionItemIe
	}
	return nil
}

func (x *RanfunctionItemIe) GetRanfunctionItem() *RanfunctionItem {
	if x, ok := x.GetRanfunctionItemIe().(*RanfunctionItemIe_RanfunctionItem); ok {
		return x.RanfunctionItem
	}
	return nil
}

type isRanfunctionItemIe_RanfunctionItemIe interface {
	isRanfunctionItemIe_RanfunctionItemIe()
}

type RanfunctionItemIe_RanfunctionItem struct {
	// @inject_tag: aper:"valueExt"
	RanfunctionItem *RanfunctionItem `protobuf:"bytes,1,opt,name=ranfunction_item,json=ranfunctionItem,proto3,oneof" aper:"valueExt"`
}

func (*RanfunctionItemIe_RanfunctionItem) isRanfunctionItemIe_RanfunctionItemIe() {}

// sequence from e2ap_v2.asn:1090
// {RANfunction-Item}
type RanfunctionItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionId         *e2ap_ies.RanfunctionId                     `protobuf:"bytes,1,opt,name=ran_function_id,json=ranFunctionID,proto3" json:"ran_function_id,omitempty"`
	RanFunctionDefinition *e2ap_commondatatypes.RanfunctionDefinition `protobuf:"bytes,2,opt,name=ran_function_definition,json=ranFunctionDefinition,proto3" json:"ran_function_definition,omitempty"`
	RanFunctionRevision   *e2ap_ies.RanfunctionRevision               `protobuf:"bytes,3,opt,name=ran_function_revision,json=ranFunctionRevision,proto3" json:"ran_function_revision,omitempty"`
	// @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:1000"
	RanFunctionOid *e2ap_commondatatypes.RanfunctionOid `protobuf:"bytes,4,opt,name=ran_function_oid,json=ranFunctionOID,proto3" json:"ran_function_oid,omitempty" aper:"sizeExt,sizeLB:1,sizeUB:1000"`
}

func (x *RanfunctionItem) Reset() {
	*x = RanfunctionItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionItem) ProtoMessage() {}

func (x *RanfunctionItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionItem.ProtoReflect.Descriptor instead.
func (*RanfunctionItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{133}
}

func (x *RanfunctionItem) GetRanFunctionId() *e2ap_ies.RanfunctionId {
	if x != nil {
		return x.RanFunctionId
	}
	return nil
}

func (x *RanfunctionItem) GetRanFunctionDefinition() *e2ap_commondatatypes.RanfunctionDefinition {
	if x != nil {
		return x.RanFunctionDefinition
	}
	return nil
}

func (x *RanfunctionItem) GetRanFunctionRevision() *e2ap_ies.RanfunctionRevision {
	if x != nil {
		return x.RanFunctionRevision
	}
	return nil
}

func (x *RanfunctionItem) GetRanFunctionOid() *e2ap_commondatatypes.RanfunctionOid {
	if x != nil {
		return x.RanFunctionOid
	}
	return nil
}

type RanfunctionsIdListSingleContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *RanfunctionsIdList `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RanfunctionsIdListSingleContainer) Reset() {
	*x = RanfunctionsIdListSingleContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionsIdListSingleContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionsIdListSingleContainer) ProtoMessage() {}

func (x *RanfunctionsIdListSingleContainer) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionsIdListSingleContainer.ProtoReflect.Descriptor instead.
func (*RanfunctionsIdListSingleContainer) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{134}
}

func (x *RanfunctionsIdListSingleContainer) GetValue() *RanfunctionsIdList {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2ap_v2.asn:1097
// {RANfunctionsID-List}
type RanfunctionsIdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:256"
	Value []*RanfunctionIdItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:256"`
}

func (x *RanfunctionsIdList) Reset() {
	*x = RanfunctionsIdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionsIdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionsIdList) ProtoMessage() {}

func (x *RanfunctionsIdList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionsIdList.ProtoReflect.Descriptor instead.
func (*RanfunctionsIdList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{135}
}

func (x *RanfunctionsIdList) GetValue() []*RanfunctionIdItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1099
// {_RANfunctionID-ItemIEs}
type RanfunctionIdItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	//@inject_tag: aper:"canonicalOrder"
	Value *RanfunctionIdItemIe `protobuf:"bytes,3,opt,name=value,json=ranFunctionIDItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RanfunctionIdItemIes) Reset() {
	*x = RanfunctionIdItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionIdItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionIdItemIes) ProtoMessage() {}

func (x *RanfunctionIdItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionIdItemIes.ProtoReflect.Descriptor instead.
func (*RanfunctionIdItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{136}
}

func (x *RanfunctionIdItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RanfunctionIdItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RanfunctionIdItemIes) GetValue() *RanfunctionIdItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RanfunctionIdItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RanfunctionIdItemIe:
	//	*RanfunctionIdItemIe_RanfunctionIdItem
	RanfunctionIdItemIe isRanfunctionIdItemIe_RanfunctionIdItemIe `protobuf_oneof:"ranfunction_id_item_ie"`
}

func (x *RanfunctionIdItemIe) Reset() {
	*x = RanfunctionIdItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionIdItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionIdItemIe) ProtoMessage() {}

func (x *RanfunctionIdItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionIdItemIe.ProtoReflect.Descriptor instead.
func (*RanfunctionIdItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{137}
}

func (m *RanfunctionIdItemIe) GetRanfunctionIdItemIe() isRanfunctionIdItemIe_RanfunctionIdItemIe {
	if m != nil {
		return m.RanfunctionIdItemIe
	}
	return nil
}

func (x *RanfunctionIdItemIe) GetRanfunctionIdItem() *RanfunctionIdItem {
	if x, ok := x.GetRanfunctionIdItemIe().(*RanfunctionIdItemIe_RanfunctionIdItem); ok {
		return x.RanfunctionIdItem
	}
	return nil
}

type isRanfunctionIdItemIe_RanfunctionIdItemIe interface {
	isRanfunctionIdItemIe_RanfunctionIdItemIe()
}

type RanfunctionIdItemIe_RanfunctionIdItem struct {
	// @inject_tag: aper:"valueExt"
	RanfunctionIdItem *RanfunctionIdItem `protobuf:"bytes,1,opt,name=ranfunction_id_item,json=ranfunctionIdItem,proto3,oneof" aper:"valueExt"`
}

func (*RanfunctionIdItemIe_RanfunctionIdItem) isRanfunctionIdItemIe_RanfunctionIdItemIe() {}

// sequence from e2ap_v2.asn:1105
// {RANfunctionID-Item}
type RanfunctionIdItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionId       *e2ap_ies.RanfunctionId       `protobuf:"bytes,1,opt,name=ran_function_id,json=ranFunctionID,proto3" json:"ran_function_id,omitempty"`
	RanFunctionRevision *e2ap_ies.RanfunctionRevision `protobuf:"bytes,2,opt,name=ran_function_revision,json=ranFunctionRevision,proto3" json:"ran_function_revision,omitempty"`
}

func (x *RanfunctionIdItem) Reset() {
	*x = RanfunctionIdItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionIdItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionIdItem) ProtoMessage() {}

func (x *RanfunctionIdItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionIdItem.ProtoReflect.Descriptor instead.
func (*RanfunctionIdItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{138}
}

func (x *RanfunctionIdItem) GetRanFunctionId() *e2ap_ies.RanfunctionId {
	if x != nil {
		return x.RanFunctionId
	}
	return nil
}

func (x *RanfunctionIdItem) GetRanFunctionRevision() *e2ap_ies.RanfunctionRevision {
	if x != nil {
		return x.RanFunctionRevision
	}
	return nil
}

// sequence from e2ap_v2.asn:1116
// {RICserviceUpdateAcknowledge}
type RicserviceUpdateAcknowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicserviceUpdateAcknowledgeIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicserviceUpdateAcknowledge) Reset() {
	*x = RicserviceUpdateAcknowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceUpdateAcknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceUpdateAcknowledge) ProtoMessage() {}

func (x *RicserviceUpdateAcknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceUpdateAcknowledge.ProtoReflect.Descriptor instead.
func (*RicserviceUpdateAcknowledge) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{139}
}

func (x *RicserviceUpdateAcknowledge) GetProtocolIes() []*RicserviceUpdateAcknowledgeIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1120
// {_RICserviceUpdateAcknowledge-IEs}
type RicserviceUpdateAcknowledgeIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	// @inject_tag: aper:"canonicalOrder"
	Value *RicServiceUpdateAcknowledgeIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicserviceUpdateAcknowledgeIes) Reset() {
	*x = RicserviceUpdateAcknowledgeIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceUpdateAcknowledgeIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceUpdateAcknowledgeIes) ProtoMessage() {}

func (x *RicserviceUpdateAcknowledgeIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceUpdateAcknowledgeIes.ProtoReflect.Descriptor instead.
func (*RicserviceUpdateAcknowledgeIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{140}
}

func (x *RicserviceUpdateAcknowledgeIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicserviceUpdateAcknowledgeIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicserviceUpdateAcknowledgeIes) GetValue() *RicServiceUpdateAcknowledgeIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicServiceUpdateAcknowledgeIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicServiceUpdateAcknowledgeIe:
	//	*RicServiceUpdateAcknowledgeIe_TransactionId
	//	*RicServiceUpdateAcknowledgeIe_RanfunctionsAccepted
	//	*RicServiceUpdateAcknowledgeIe_RanfunctionsRejected
	RicServiceUpdateAcknowledgeIe isRicServiceUpdateAcknowledgeIe_RicServiceUpdateAcknowledgeIe `protobuf_oneof:"ric_service_update_acknowledge_ie"`
}

func (x *RicServiceUpdateAcknowledgeIe) Reset() {
	*x = RicServiceUpdateAcknowledgeIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicServiceUpdateAcknowledgeIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicServiceUpdateAcknowledgeIe) ProtoMessage() {}

func (x *RicServiceUpdateAcknowledgeIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicServiceUpdateAcknowledgeIe.ProtoReflect.Descriptor instead.
func (*RicServiceUpdateAcknowledgeIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{141}
}

func (m *RicServiceUpdateAcknowledgeIe) GetRicServiceUpdateAcknowledgeIe() isRicServiceUpdateAcknowledgeIe_RicServiceUpdateAcknowledgeIe {
	if m != nil {
		return m.RicServiceUpdateAcknowledgeIe
	}
	return nil
}

func (x *RicServiceUpdateAcknowledgeIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetRicServiceUpdateAcknowledgeIe().(*RicServiceUpdateAcknowledgeIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *RicServiceUpdateAcknowledgeIe) GetRanfunctionsAccepted() *RanfunctionsIdListSingleContainer {
	if x, ok := x.GetRicServiceUpdateAcknowledgeIe().(*RicServiceUpdateAcknowledgeIe_RanfunctionsAccepted); ok {
		return x.RanfunctionsAccepted
	}
	return nil
}

func (x *RicServiceUpdateAcknowledgeIe) GetRanfunctionsRejected() *RanfunctionsIdcauseListSingleContainer {
	if x, ok := x.GetRicServiceUpdateAcknowledgeIe().(*RicServiceUpdateAcknowledgeIe_RanfunctionsRejected); ok {
		return x.RanfunctionsRejected
	}
	return nil
}

type isRicServiceUpdateAcknowledgeIe_RicServiceUpdateAcknowledgeIe interface {
	isRicServiceUpdateAcknowledgeIe_RicServiceUpdateAcknowledgeIe()
}

type RicServiceUpdateAcknowledgeIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type RicServiceUpdateAcknowledgeIe_RanfunctionsAccepted struct {
	RanfunctionsAccepted *RanfunctionsIdListSingleContainer `protobuf:"bytes,2,opt,name=ranfunctions_accepted,json=ranfunctionsAccepted,proto3,oneof"`
}

type RicServiceUpdateAcknowledgeIe_RanfunctionsRejected struct {
	RanfunctionsRejected *RanfunctionsIdcauseListSingleContainer `protobuf:"bytes,3,opt,name=ranfunctions_rejected,json=ranfunctionsRejected,proto3,oneof"`
}

func (*RicServiceUpdateAcknowledgeIe_TransactionId) isRicServiceUpdateAcknowledgeIe_RicServiceUpdateAcknowledgeIe() {
}

func (*RicServiceUpdateAcknowledgeIe_RanfunctionsAccepted) isRicServiceUpdateAcknowledgeIe_RicServiceUpdateAcknowledgeIe() {
}

func (*RicServiceUpdateAcknowledgeIe_RanfunctionsRejected) isRicServiceUpdateAcknowledgeIe_RicServiceUpdateAcknowledgeIe() {
}

type RanfunctionsIdcauseListSingleContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *RanfunctionsIdcauseList `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RanfunctionsIdcauseListSingleContainer) Reset() {
	*x = RanfunctionsIdcauseListSingleContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionsIdcauseListSingleContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionsIdcauseListSingleContainer) ProtoMessage() {}

func (x *RanfunctionsIdcauseListSingleContainer) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionsIdcauseListSingleContainer.ProtoReflect.Descriptor instead.
func (*RanfunctionsIdcauseListSingleContainer) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{142}
}

func (x *RanfunctionsIdcauseListSingleContainer) GetValue() *RanfunctionsIdcauseList {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2ap_v2.asn:1127
// {RANfunctionsIDcause-List}
type RanfunctionsIdcauseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:256"
	Value []*RanfunctionIdcauseItemIes `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"sizeLB:1,sizeUB:256"`
}

func (x *RanfunctionsIdcauseList) Reset() {
	*x = RanfunctionsIdcauseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionsIdcauseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionsIdcauseList) ProtoMessage() {}

func (x *RanfunctionsIdcauseList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionsIdcauseList.ProtoReflect.Descriptor instead.
func (*RanfunctionsIdcauseList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{143}
}

func (x *RanfunctionsIdcauseList) GetValue() []*RanfunctionIdcauseItemIes {
	if x != nil {
		return x.Value
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1129
// {_RANfunctionIDcause-ItemIEs}
type RanfunctionIdcauseItemIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	// @inject_tag: aper:"canonicalOrder"
	Value *RanfunctionIdcauseItemIe `protobuf:"bytes,3,opt,name=value,json=ranFunctionIDcauseItem,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RanfunctionIdcauseItemIes) Reset() {
	*x = RanfunctionIdcauseItemIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionIdcauseItemIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionIdcauseItemIes) ProtoMessage() {}

func (x *RanfunctionIdcauseItemIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionIdcauseItemIes.ProtoReflect.Descriptor instead.
func (*RanfunctionIdcauseItemIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{144}
}

func (x *RanfunctionIdcauseItemIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RanfunctionIdcauseItemIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RanfunctionIdcauseItemIes) GetValue() *RanfunctionIdcauseItemIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RanfunctionIdcauseItemIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RanfunctionIdcauseItemIe:
	//	*RanfunctionIdcauseItemIe_RanfunctionIecauseItem
	RanfunctionIdcauseItemIe isRanfunctionIdcauseItemIe_RanfunctionIdcauseItemIe `protobuf_oneof:"ranfunction_idcause_item_ie"`
}

func (x *RanfunctionIdcauseItemIe) Reset() {
	*x = RanfunctionIdcauseItemIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionIdcauseItemIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionIdcauseItemIe) ProtoMessage() {}

func (x *RanfunctionIdcauseItemIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionIdcauseItemIe.ProtoReflect.Descriptor instead.
func (*RanfunctionIdcauseItemIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{145}
}

func (m *RanfunctionIdcauseItemIe) GetRanfunctionIdcauseItemIe() isRanfunctionIdcauseItemIe_RanfunctionIdcauseItemIe {
	if m != nil {
		return m.RanfunctionIdcauseItemIe
	}
	return nil
}

func (x *RanfunctionIdcauseItemIe) GetRanfunctionIecauseItem() *RanfunctionIdcauseItem {
	if x, ok := x.GetRanfunctionIdcauseItemIe().(*RanfunctionIdcauseItemIe_RanfunctionIecauseItem); ok {
		return x.RanfunctionIecauseItem
	}
	return nil
}

type isRanfunctionIdcauseItemIe_RanfunctionIdcauseItemIe interface {
	isRanfunctionIdcauseItemIe_RanfunctionIdcauseItemIe()
}

type RanfunctionIdcauseItemIe_RanfunctionIecauseItem struct {
	// @inject_tag: aper:"valueExt"
	RanfunctionIecauseItem *RanfunctionIdcauseItem `protobuf:"bytes,1,opt,name=ranfunction_iecause_item,json=ranfunctionIecauseItem,proto3,oneof" aper:"valueExt"`
}

func (*RanfunctionIdcauseItemIe_RanfunctionIecauseItem) isRanfunctionIdcauseItemIe_RanfunctionIdcauseItemIe() {
}

// sequence from e2ap_v2.asn:1136
// {RANfunctionIDcause-Item}
type RanfunctionIdcauseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RanFunctionId *e2ap_ies.RanfunctionId `protobuf:"bytes,1,opt,name=ran_function_id,json=ranFunctionID,proto3" json:"ran_function_id,omitempty"`
	// @inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,2,opt,name=cause,proto3" json:"cause,omitempty" aper:"choiceExt"`
}

func (x *RanfunctionIdcauseItem) Reset() {
	*x = RanfunctionIdcauseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionIdcauseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionIdcauseItem) ProtoMessage() {}

func (x *RanfunctionIdcauseItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionIdcauseItem.ProtoReflect.Descriptor instead.
func (*RanfunctionIdcauseItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{146}
}

func (x *RanfunctionIdcauseItem) GetRanFunctionId() *e2ap_ies.RanfunctionId {
	if x != nil {
		return x.RanFunctionId
	}
	return nil
}

func (x *RanfunctionIdcauseItem) GetCause() *e2ap_ies.Cause {
	if x != nil {
		return x.Cause
	}
	return nil
}

// sequence from e2ap_v2.asn:1148
// {RICserviceUpdateFailure}
type RicserviceUpdateFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicserviceUpdateFailureIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicserviceUpdateFailure) Reset() {
	*x = RicserviceUpdateFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceUpdateFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceUpdateFailure) ProtoMessage() {}

func (x *RicserviceUpdateFailure) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceUpdateFailure.ProtoReflect.Descriptor instead.
func (*RicserviceUpdateFailure) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{147}
}

func (x *RicserviceUpdateFailure) GetProtocolIes() []*RicserviceUpdateFailureIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1152
// {_RICserviceUpdateFailure-IEs}
type RicserviceUpdateFailureIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	//@inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	// @inject_tag: aper:"canonicalOrder"
	Value *RicServiceUpdateFailureIe `protobuf:"bytes,3,opt,name=value,json=&Value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicserviceUpdateFailureIes) Reset() {
	*x = RicserviceUpdateFailureIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceUpdateFailureIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceUpdateFailureIes) ProtoMessage() {}

func (x *RicserviceUpdateFailureIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceUpdateFailureIes.ProtoReflect.Descriptor instead.
func (*RicserviceUpdateFailureIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{148}
}

func (x *RicserviceUpdateFailureIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicserviceUpdateFailureIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicserviceUpdateFailureIes) GetValue() *RicServiceUpdateFailureIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicServiceUpdateFailureIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicServiceUpdateFailureIe:
	//	*RicServiceUpdateFailureIe_TransactionId
	//	*RicServiceUpdateFailureIe_Cause
	//	*RicServiceUpdateFailureIe_TimeToWait
	//	*RicServiceUpdateFailureIe_CriticalityDiagnostics
	RicServiceUpdateFailureIe isRicServiceUpdateFailureIe_RicServiceUpdateFailureIe `protobuf_oneof:"ric_service_update_failure_ie"`
}

func (x *RicServiceUpdateFailureIe) Reset() {
	*x = RicServiceUpdateFailureIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicServiceUpdateFailureIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicServiceUpdateFailureIe) ProtoMessage() {}

func (x *RicServiceUpdateFailureIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicServiceUpdateFailureIe.ProtoReflect.Descriptor instead.
func (*RicServiceUpdateFailureIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{149}
}

func (m *RicServiceUpdateFailureIe) GetRicServiceUpdateFailureIe() isRicServiceUpdateFailureIe_RicServiceUpdateFailureIe {
	if m != nil {
		return m.RicServiceUpdateFailureIe
	}
	return nil
}

func (x *RicServiceUpdateFailureIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetRicServiceUpdateFailureIe().(*RicServiceUpdateFailureIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *RicServiceUpdateFailureIe) GetCause() *e2ap_ies.Cause {
	if x, ok := x.GetRicServiceUpdateFailureIe().(*RicServiceUpdateFailureIe_Cause); ok {
		return x.Cause
	}
	return nil
}

func (x *RicServiceUpdateFailureIe) GetTimeToWait() e2ap_ies.TimeToWait {
	if x, ok := x.GetRicServiceUpdateFailureIe().(*RicServiceUpdateFailureIe_TimeToWait); ok {
		return x.TimeToWait
	}
	return e2ap_ies.TimeToWait(0)
}

func (x *RicServiceUpdateFailureIe) GetCriticalityDiagnostics() *e2ap_ies.CriticalityDiagnostics {
	if x, ok := x.GetRicServiceUpdateFailureIe().(*RicServiceUpdateFailureIe_CriticalityDiagnostics); ok {
		return x.CriticalityDiagnostics
	}
	return nil
}

type isRicServiceUpdateFailureIe_RicServiceUpdateFailureIe interface {
	isRicServiceUpdateFailureIe_RicServiceUpdateFailureIe()
}

type RicServiceUpdateFailureIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type RicServiceUpdateFailureIe_Cause struct {
	// @inject_tag: aper:"choiceExt"
	Cause *e2ap_ies.Cause `protobuf:"bytes,2,opt,name=cause,proto3,oneof" aper:"choiceExt"`
}

type RicServiceUpdateFailureIe_TimeToWait struct {
	// @inject_tag: aper:"valueExt,valueLB:0,valueUB:5"
	TimeToWait e2ap_ies.TimeToWait `protobuf:"varint,3,opt,name=time_to_wait,json=timeToWait,proto3,enum=e2ap.v2.TimeToWait,oneof" aper:"valueExt,valueLB:0,valueUB:5"`
}

type RicServiceUpdateFailureIe_CriticalityDiagnostics struct {
	// @inject_tag: aper:"valueExt"
	CriticalityDiagnostics *e2ap_ies.CriticalityDiagnostics `protobuf:"bytes,4,opt,name=criticality_diagnostics,json=criticalityDiagnostics,proto3,oneof" aper:"valueExt"`
}

func (*RicServiceUpdateFailureIe_TransactionId) isRicServiceUpdateFailureIe_RicServiceUpdateFailureIe() {
}

func (*RicServiceUpdateFailureIe_Cause) isRicServiceUpdateFailureIe_RicServiceUpdateFailureIe() {}

func (*RicServiceUpdateFailureIe_TimeToWait) isRicServiceUpdateFailureIe_RicServiceUpdateFailureIe() {
}

func (*RicServiceUpdateFailureIe_CriticalityDiagnostics) isRicServiceUpdateFailureIe_RicServiceUpdateFailureIe() {
}

// sequence from e2ap_v2.asn:1171
// {RICserviceQuery}
type RicserviceQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"sizeLB:0,sizeUB:65535"
	ProtocolIes []*RicserviceQueryIes `protobuf:"bytes,1,rep,name=protocol_ies,json=protocolIEs,proto3" json:"protocol_ies,omitempty" aper:"sizeLB:0,sizeUB:65535"`
}

func (x *RicserviceQuery) Reset() {
	*x = RicserviceQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceQuery) ProtoMessage() {}

func (x *RicserviceQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceQuery.ProtoReflect.Descriptor instead.
func (*RicserviceQuery) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{150}
}

func (x *RicserviceQuery) GetProtocolIes() []*RicserviceQueryIes {
	if x != nil {
		return x.ProtocolIes
	}
	return nil
}

// concrete instance(s) of class E2AP-PROTOCOL-IES from e2ap_v2.asn:1175
// {_RICserviceQuery-IEs}
type RicserviceQueryIes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: aper:"valueLB:0,valueUB:65535,unique"
	Id int32 `protobuf:"varint,1,opt,name=id,json=&id,proto3" json:"id,omitempty" aper:"valueLB:0,valueUB:65535,unique"`
	// @inject_tag: aper:"valueLB:0,valueUB:2"
	Criticality int32 `protobuf:"varint,2,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty" aper:"valueLB:0,valueUB:2"`
	// @inject_tag: aper:"canonicalOrder"
	Value *RicServiceQueryIe `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty" aper:"canonicalOrder"`
}

func (x *RicserviceQueryIes) Reset() {
	*x = RicserviceQueryIes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicserviceQueryIes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicserviceQueryIes) ProtoMessage() {}

func (x *RicserviceQueryIes) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicserviceQueryIes.ProtoReflect.Descriptor instead.
func (*RicserviceQueryIes) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{151}
}

func (x *RicserviceQueryIes) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RicserviceQueryIes) GetCriticality() int32 {
	if x != nil {
		return x.Criticality
	}
	return 0
}

func (x *RicserviceQueryIes) GetValue() *RicServiceQueryIe {
	if x != nil {
		return x.Value
	}
	return nil
}

type RicServiceQueryIe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to RicServiceQueryIe:
	//	*RicServiceQueryIe_TransactionId
	//	*RicServiceQueryIe_RanfunctionsAccepted
	RicServiceQueryIe isRicServiceQueryIe_RicServiceQueryIe `protobuf_oneof:"ric_service_query_ie"`
}

func (x *RicServiceQueryIe) Reset() {
	*x = RicServiceQueryIe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicServiceQueryIe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicServiceQueryIe) ProtoMessage() {}

func (x *RicServiceQueryIe) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicServiceQueryIe.ProtoReflect.Descriptor instead.
func (*RicServiceQueryIe) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP(), []int{152}
}

func (m *RicServiceQueryIe) GetRicServiceQueryIe() isRicServiceQueryIe_RicServiceQueryIe {
	if m != nil {
		return m.RicServiceQueryIe
	}
	return nil
}

func (x *RicServiceQueryIe) GetTransactionId() *e2ap_ies.TransactionId {
	if x, ok := x.GetRicServiceQueryIe().(*RicServiceQueryIe_TransactionId); ok {
		return x.TransactionId
	}
	return nil
}

func (x *RicServiceQueryIe) GetRanfunctionsAccepted() *RanfunctionsIdListSingleContainer {
	if x, ok := x.GetRicServiceQueryIe().(*RicServiceQueryIe_RanfunctionsAccepted); ok {
		return x.RanfunctionsAccepted
	}
	return nil
}

type isRicServiceQueryIe_RicServiceQueryIe interface {
	isRicServiceQueryIe_RicServiceQueryIe()
}

type RicServiceQueryIe_TransactionId struct {
	TransactionId *e2ap_ies.TransactionId `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type RicServiceQueryIe_RanfunctionsAccepted struct {
	RanfunctionsAccepted *RanfunctionsIdListSingleContainer `protobuf:"bytes,2,opt,name=ranfunctions_accepted,json=ranfunctionsAccepted,proto3,oneof"`
}

func (*RicServiceQueryIe_TransactionId) isRicServiceQueryIe_RicServiceQueryIe() {}

func (*RicServiceQueryIe_RanfunctionsAccepted) isRicServiceQueryIe_RicServiceQueryIe() {}

var File_api_e2ap_v2_e2ap_pdu_contents_proto protoreflect.FileDescriptor

var file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32,
	0x61, 0x70, 0x5f, 0x70, 0x64, 0x75, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x1a, 0x16,
	0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x5f, 0x69, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f,
	0x65, 0x32, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65,
	0x32, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32, 0x61,
	0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x5f, 0x0a, 0x16, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69,
	0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x49, 0x45, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x19, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x1e, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x93, 0x02, 0x0a, 0x18, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x12,
	0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x5a,
	0x0a, 0x17, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x48, 0x00, 0x52, 0x16, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x1c, 0x0a, 0x1a, 0x72, 0x69,
	0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x16, 0x52, 0x69, 0x63,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x63, 0x0a, 0x1c, 0x72, 0x69, 0x63, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x72,
	0x69, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5f, 0x0a, 0x1b, 0x72, 0x69, 0x63, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x73, 0x65, 0x74,
	0x75, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x54, 0x6f, 0x42, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x18, 0x72, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x54, 0x6f, 0x42, 0x65, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x2d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x17, 0x52, 0x69, 0x63,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x54, 0x6f, 0x42, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69,
	0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x42, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa9,
	0x01, 0x0a, 0x19, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x42, 0x65,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x13, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x42, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x65, 0x52, 0x16, 0x72, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x42,
	0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x52,
	0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x42, 0x65, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x5d, 0x0a, 0x1a, 0x72, 0x69, 0x63, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x42, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x16,
	0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x42, 0x65, 0x53, 0x65, 0x74,
	0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x1f, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xf4, 0x02, 0x0a, 0x16, 0x52, 0x69, 0x63, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x42, 0x65, 0x53, 0x65, 0x74, 0x75, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52,
	0x0b, 0x72, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0f,
	0x72, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x72,
	0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x15,
	0x72, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x72, 0x69, 0x63,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x55, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63,
	0x73, 0x75, 0x62, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x01, 0x52, 0x13, 0x72, 0x69, 0x63, 0x53, 0x75, 0x62, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x72,
	0x69, 0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x61,
	0x0a, 0x17, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45,
	0x73, 0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x12, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xe9, 0x02, 0x0a, 0x19, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x12,
	0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a,
	0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x51,
	0x0a, 0x13, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x72,
	0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x12, 0x5b, 0x0a, 0x17, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x4e, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x42, 0x1d,
	0x0a, 0x1b, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x50, 0x0a,
	0x15, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xa6, 0x01, 0x0a, 0x18, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x0e, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x65, 0x52, 0x15, 0x72, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x91, 0x01, 0x0a, 0x17, 0x52, 0x69, 0x63,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x65, 0x12, 0x58, 0x0a, 0x17, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x15, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x1c,
	0x0a, 0x1a, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x74, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0x51, 0x0a, 0x15,
	0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x52, 0x0b, 0x72, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22,
	0x56, 0x0a, 0x18, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x41,
	0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x1b, 0x52, 0x69, 0x63, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x10, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0b,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x4c, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x52,
	0x18, 0x72, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x41, 0x64, 0x6d,
	0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xa2, 0x01, 0x0a, 0x1a, 0x52, 0x69,
	0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x62, 0x0a, 0x1b, 0x72, 0x69, 0x63, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x48, 0x00, 0x52, 0x18, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74,
	0x41, 0x64, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x20, 0x0a, 0x1e,
	0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x64,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0x7a,
	0x0a, 0x18, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x41, 0x64,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x69,
	0x63, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0b, 0x72, 0x69, 0x63, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x22, 0x5f, 0x0a, 0x16, 0x52, 0x69,
	0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x19,
	0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x03,
	0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x01, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49,
	0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x02, 0x0a, 0x18, 0x52, 0x69,
	0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x5a, 0x0a,
	0x17, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x69, 0x61,
	0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x48,
	0x00, 0x52, 0x16, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x1c, 0x0a, 0x1a, 0x72, 0x69, 0x63,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x6b, 0x0a, 0x1c, 0x52, 0x69, 0x63, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x49, 0x45, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x1f, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x05, 0x52, 0x03, 0x26,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00,
	0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3e,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc4,
	0x01, 0x0a, 0x1e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x48,
	0x00, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12,
	0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48,
	0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x42, 0x23, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x65, 0x22, 0x6d, 0x0a, 0x1d, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x49, 0x45, 0x73, 0x22, 0xa9, 0x01, 0x0a, 0x20, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x05, 0x52, 0x03,
	0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08,
	0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12,
	0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xc6, 0x01, 0x0a, 0x1f, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x49, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x42, 0x24, 0x0a, 0x22, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x6b, 0x0a, 0x1c, 0x52, 0x69, 0x63,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x1f, 0x52, 0x69, 0x63, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52,
	0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x01, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xc8, 0x02, 0x0a, 0x1e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x49, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x17, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x16,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x23, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x6d, 0x0a, 0x1d, 0x52,
	0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0xbd, 0x01, 0x0a, 0x20, 0x52,
	0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x3c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x55, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x65, 0x52, 0x1c, 0x72, 0x69,
	0x63, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x1f, 0x52,
	0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x49, 0x65, 0x12, 0x6a,
	0x0a, 0x1d, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x62, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a,
	0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x42, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x24, 0x0a, 0x22, 0x72, 0x69,
	0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x65,
	0x22, 0x5e, 0x0a, 0x1c, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75,
	0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xbb, 0x01, 0x0a, 0x1f, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65,
	0x52, 0x1c, 0x72, 0x69, 0x63, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65, 0x22, 0xb6,
	0x01, 0x0a, 0x1e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x65, 0x12, 0x6e, 0x0a, 0x1f, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x48, 0x00, 0x52, 0x1c, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x24, 0x0a, 0x22, 0x72, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x1c, 0x52, 0x69, 0x63, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x22, 0x4d, 0x0a, 0x0d, 0x52,
	0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x10, 0x52,
	0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x14, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x65, 0x52, 0x06,
	0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe7, 0x04, 0x0a, 0x0f, 0x52, 0x69, 0x63, 0x69, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x69,
	0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x69, 0x63,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x72, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x12, 0x4b, 0x0a, 0x12, 0x72,
	0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x11, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x15, 0x72,
	0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x14, 0x72, 0x69, 0x63,
	0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x61, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x69, 0x63, 0x63,
	0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x42, 0x12, 0x0a, 0x10,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x65,
	0x22, 0x55, 0x0a, 0x11, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x52, 0x69, 0x63, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x15, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe6, 0x03, 0x0a, 0x13,
	0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x49, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x61, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x69, 0x63,
	0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x48, 0x0a,
	0x11, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x10, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69,
	0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x11, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x55, 0x0a, 0x16, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x17, 0x0a, 0x15, 0x72,
	0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x65, 0x22, 0x5d, 0x0a, 0x15, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x44, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69,
	0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x49, 0x45, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x18, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x20, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xcd, 0x02, 0x0a, 0x17, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72,
	0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x69, 0x63,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x69,
	0x63, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x69, 0x63, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x69, 0x63, 0x63, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x48, 0x00, 0x52,
	0x11, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x42, 0x1b, 0x0a, 0x19, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x5f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x65, 0x22,
	0x55, 0x0a, 0x11, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x52, 0x69, 0x63, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x20, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xed, 0x02, 0x0a, 0x13, 0x52,
	0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x49, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x61, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x48, 0x00, 0x52, 0x10, 0x72, 0x69, 0x63, 0x63,
	0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05,
	0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63,
	0x61, 0x75, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x11,
	0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x42, 0x17, 0x0a, 0x15, 0x72, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x51, 0x0a, 0x0f, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x65, 0x73,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x8d, 0x01,
	0x0a, 0x12, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x26, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xee, 0x02,
	0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x17, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52,
	0x16, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67,
	0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x15, 0x0a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x65, 0x22, 0x4f,
	0x0a, 0x0e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22,
	0x8b, 0x01, 0x0a, 0x11, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x32, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf1, 0x02,
	0x0a, 0x10, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x12, 0x72, 0x61, 0x6e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x11, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41,
	0x64, 0x64, 0x65, 0x64, 0x12, 0x75, 0x0a, 0x20, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x14, 0x0a, 0x12, 0x65,
	0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x65, 0x22, 0x51, 0x0a, 0x0f, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x49, 0x45, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x34,
	0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x73, 0x65, 0x74,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xd5, 0x03, 0x0a, 0x11, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x52, 0x69, 0x63, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x52, 0x69, 0x63, 0x49, 0x64, 0x12, 0x52, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x57, 0x0a, 0x15, 0x72,
	0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x49, 0x64, 0x63, 0x61, 0x75, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14,
	0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6a, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x12, 0x7f, 0x0a, 0x24, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x20, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x42, 0x15, 0x0a, 0x13, 0x65, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x4f, 0x0a, 0x0e,
	0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x3d,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x8b, 0x01,
	0x0a, 0x11, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x30, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a,
	0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x26, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xea, 0x02, 0x0a, 0x10,
	0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65,
	0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f,
	0x57, 0x61, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x57, 0x61,
	0x69, 0x74, 0x12, 0x5a, 0x0a, 0x17, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x16, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x42,
	0x0a, 0x0f, 0x74, 0x6e, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x6e, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0e, 0x74, 0x6e, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x14, 0x0a, 0x12, 0x65, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x57, 0x0a, 0x12, 0x45, 0x32, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x41,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x2d,
	0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x65, 0x52,
	0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x94, 0x03, 0x0a, 0x14, 0x45, 0x32, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x65,
	0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x59, 0x0a, 0x17, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x64, 0x12, 0x65, 0x0a, 0x1a,
	0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x65, 0x32, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x12, 0x5f, 0x0a, 0x1a, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x65, 0x32, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x42, 0x18, 0x0a, 0x16, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x52,
	0x0a, 0x16, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73,
	0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x2b, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x52, 0x16, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x96,
	0x01, 0x0a, 0x18, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x5b, 0x0a, 0x18, 0x65,
	0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x16, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x1d, 0x0a, 0x1b, 0x65, 0x32, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x16, 0x45, 0x32, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0f, 0x74, 0x6e, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6e, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x74, 0x6e, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x09, 0x74, 0x6e, 0x6c, 0x5f, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x6e, 0x6c, 0x75, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x74, 0x6e, 0x6c, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x5e, 0x0a, 0x1c, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x1f, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x2f, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52,
	0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x65, 0x52, 0x1c, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x22, 0xb6, 0x01, 0x0a, 0x1e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x6e, 0x0a, 0x1f, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x1c, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x24, 0x0a, 0x22, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0x60, 0x0a, 0x1c, 0x45,
	0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x0f, 0x74,
	0x6e, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x6e, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x74,
	0x6e, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x65, 0x0a,
	0x1d, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x44,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x6b, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x49, 0x45, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x18, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x49, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x28, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xae, 0x02, 0x0a, 0x17, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x50, 0x0a,
	0x12, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x74, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x65, 0x32,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x12,
	0x62, 0x0a, 0x19, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61,
	0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x65, 0x32, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x42, 0x1c, 0x0a, 0x1a, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x69,
	0x65, 0x22, 0x5c, 0x0a, 0x1b, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xb8, 0x01, 0x0a, 0x1e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x65, 0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x29, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x52, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x52, 0x1b, 0x45,
	0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xb1, 0x01, 0x0a, 0x1d, 0x45,
	0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x6b, 0x0a, 0x1e,
	0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74,
	0x75, 0x70, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x1b, 0x65, 0x32,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x75, 0x70, 0x46,
	0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x23, 0x0a, 0x21, 0x65, 0x32, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0x85,
	0x01, 0x0a, 0x1b, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x40,
	0x0a, 0x0f, 0x74, 0x6e, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x6e, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x74, 0x6e, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52,
	0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x19, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0xa1, 0x01,
	0x0a, 0x1c, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x02, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xb9, 0x02, 0x0a, 0x1b, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49,
	0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x54,
	0x6f, 0x57, 0x61, 0x69, 0x74, 0x48, 0x00, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x5a, 0x0a, 0x17, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x48, 0x00, 0x52, 0x16, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x20, 0x0a, 0x1e, 0x65,
	0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x65, 0x0a,
	0x19, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x49, 0x45, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x1c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x3a, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x65,
	0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x91, 0x05, 0x0a, 0x1b, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x10, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x5f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x75,
	0x0a, 0x20, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x65, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x72, 0x0a, 0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x12, 0x6e, 0x0a, 0x1d, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x54, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x42, 0x20, 0x0a, 0x1e, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x68, 0x0a, 0x21,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x43, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x24, 0x45, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x33, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65,
	0x52, 0x1f, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x22, 0xd1, 0x01, 0x0a, 0x23, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x7e, 0x0a, 0x25, 0x65, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x21, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x2a, 0x0a, 0x28, 0x65, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xca, 0x02, 0x0a, 0x21, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x6c, 0x0a, 0x1f, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1c, 0x65, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x65, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x52, 0x11, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x6b, 0x0a, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1c, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x1f, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x22, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x52, 0x1f,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22,
	0xc7, 0x01, 0x0a, 0x21, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x78, 0x0a, 0x23, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x1f,
	0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42,
	0x28, 0x0a, 0x26, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x1f, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x6c, 0x0a,
	0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1c, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x11, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x6b, 0x0a, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1c, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x20, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc7, 0x01, 0x0a,
	0x23, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x37, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x5c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x65, 0x52, 0x20, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xcc, 0x01, 0x0a, 0x22, 0x45, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x7b, 0x0a,
	0x24, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x20, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x29, 0x0a, 0x27, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xdc, 0x01, 0x0a, 0x20, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x6c, 0x0a, 0x1f, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1c, 0x65, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x65, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x52, 0x11, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x22, 0x64, 0x0a, 0x1f, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e,
	0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x22, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65,
	0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x3b, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x5b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65,
	0x52, 0x20, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x22, 0xc5, 0x01, 0x0a, 0x21, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e, 0x6c,
	0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x77, 0x0a, 0x22, 0x65, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x74, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00,
	0x52, 0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65,
	0x6d, 0x42, 0x27, 0x0a, 0x25, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x74, 0x6e, 0x6c, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x1f, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x54, 0x6e, 0x6c, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x40,
	0x0a, 0x0f, 0x74, 0x6e, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x54, 0x6e, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x74, 0x6e, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x47, 0x0a, 0x13, 0x74, 0x6e, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x6e, 0x6c, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x74, 0x6e, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x49, 0x43, 0x22, 0x7b, 0x0a, 0x24, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x12, 0x53, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0xb7, 0x01, 0x0a, 0x27, 0x45, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x38, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x91, 0x04, 0x0a, 0x26, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x7f, 0x0a, 0x24,
	0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x20, 0x65, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x79, 0x0a,
	0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x7c, 0x0a, 0x23, 0x65, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x42, 0x2c, 0x0a, 0x2a, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x5f, 0x69, 0x65, 0x22, 0x6e, 0x0a, 0x24, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x27, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x39, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe3,
	0x01, 0x0a, 0x26, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x29, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x24,
	0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x2e, 0x0a, 0x2c, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x65, 0x22, 0xd7, 0x02, 0x0a, 0x24, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x6c, 0x0a,
	0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x1c, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x11, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x75, 0x0a, 0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x6b, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x52, 0x1f, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x22, 0x6a,
	0x0a, 0x22, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x25, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x24, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xd9, 0x01, 0x0a, 0x24, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x27, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x6b,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x22, 0x65, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x2c,
	0x0a, 0x2a, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xd5, 0x02, 0x0a,
	0x22, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x6c, 0x0a, 0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x1c, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4a, 0x0a, 0x13, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x11, 0x65, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x75, 0x0a,
	0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x6b, 0x52, 0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x6b, 0x22, 0x6c, 0x0a, 0x23, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61,
	0x6c, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xb5, 0x01, 0x0a, 0x26, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02,
	0x08, 0x39, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xde, 0x01, 0x0a, 0x25, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x28, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63,
	0x6b, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52, 0x23, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x2d, 0x0a, 0x2b,
	0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x5f,
	0x61, 0x63, 0x6b, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xd6, 0x02, 0x0a, 0x23,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x6c, 0x0a, 0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x1c, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4a, 0x0a, 0x13, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x52, 0x11, 0x65, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x75, 0x0a,
	0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x63, 0x6b, 0x52, 0x1f, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x63, 0x6b, 0x22, 0x73, 0x0a, 0x20, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x4f, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x23, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65,
	0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcc, 0x02, 0x0a, 0x22,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x54, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f,
	0x57, 0x61, 0x69, 0x74, 0x12, 0x5a, 0x0a, 0x17, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x16, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x42, 0x28, 0x0a, 0x26, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x4b, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x87, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02,
	0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a,
	0x02, 0x08, 0x01, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x42, 0x12, 0x0a,
	0x10, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x65, 0x22, 0x4d, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73,
	0x22, 0x89, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12,
	0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x26,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x49, 0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc3, 0x01, 0x0a,
	0x0f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x65,
	0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x5a, 0x0a, 0x17, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x16, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x13, 0x0a,
	0x11, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x69, 0x65, 0x22, 0x53, 0x0a, 0x10, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x13, 0x52, 0x69, 0x63, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x0b, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8b, 0x03, 0x0a, 0x12, 0x52, 0x69,
	0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x65,
	0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x59, 0x0a, 0x12, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x11, 0x72, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x64, 0x64, 0x65, 0x64, 0x12, 0x5f, 0x0a, 0x15,
	0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x5f, 0x0a,
	0x14, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x13, 0x72, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x17,
	0x0a, 0x15, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x52, 0x0a, 0x1f, 0x52, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x45, 0x0a, 0x10, 0x52,
	0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x12, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x08, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01,
	0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x52, 0x0f, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x71, 0x0a, 0x11, 0x52, 0x61, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x45,
	0x0a, 0x10, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x0f, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x15, 0x0a, 0x13, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xbe, 0x02, 0x0a,
	0x0f, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x3e, 0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x56, 0x0a, 0x17, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x15, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x10, 0x72, 0x61,
	0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52,
	0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x69, 0x64, 0x52, 0x0e, 0x72,
	0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x49, 0x44, 0x22, 0x56, 0x0a,
	0x21, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x49, 0x0a, 0x12, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x9a, 0x01, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x06, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01,
	0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3e, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x52, 0x11, 0x72, 0x61, 0x6e, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x7d, 0x0a,
	0x13, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52,
	0x11, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x42, 0x18, 0x0a, 0x16, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0xa5, 0x01, 0x0a,
	0x11, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x3e, 0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x50, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x13, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x1b, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49,
	0x65, 0x73, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22,
	0xa5, 0x01, 0x0a, 0x1e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x3d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x65, 0x52,
	0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd0, 0x02, 0x0a, 0x1d, 0x52, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x61, 0x0a, 0x15, 0x72, 0x61,
	0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x14, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x66, 0x0a,
	0x15, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x49, 0x64, 0x63, 0x61, 0x75, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x14, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x23, 0x0a, 0x21, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x6b, 0x6e,
	0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x60, 0x0a, 0x26, 0x52, 0x61,
	0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x63, 0x61, 0x75, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61,
	0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x63, 0x61, 0x75, 0x73,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x53, 0x0a, 0x17,
	0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x63, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x73, 0x12,
	0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x1a, 0x02, 0x08, 0x07, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e,
	0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x63, 0x61, 0x75, 0x73, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x65, 0x52, 0x16, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x63, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x96, 0x01,
	0x0a, 0x18, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x63,
	0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x65, 0x12, 0x5b, 0x0a, 0x18, 0x72, 0x61,
	0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x65, 0x63, 0x61, 0x75, 0x73,
	0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x63, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x00, 0x52,
	0x16, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x65, 0x63, 0x61,
	0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x1d, 0x0a, 0x1b, 0x72, 0x61, 0x6e, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x63, 0x61, 0x75, 0x73, 0x65, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x65, 0x22, 0x7e, 0x0a, 0x16, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x63, 0x61, 0x75, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x3e, 0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x52, 0x0d, 0x72, 0x61, 0x6e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x24, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52,
	0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x22, 0x61, 0x0a, 0x17, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x12, 0x46, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x52, 0x69,
	0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x02, 0x52, 0x03, 0x26,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x01,
	0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x39,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x49,
	0x65, 0x52, 0x06, 0x26, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xba, 0x02, 0x0a, 0x19, 0x52, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x49, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x12, 0x5a, 0x0a, 0x17, 0x63, 0x72, 0x69,
	0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x48, 0x00, 0x52, 0x16, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x42, 0x1f, 0x0a, 0x1d, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x5f, 0x69, 0x65, 0x22, 0x51, 0x0a, 0x0f, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x65, 0x73, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x45, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x12, 0x52, 0x69,
	0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x08, 0x31, 0x52, 0x03, 0x26, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x0b, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x08, 0x00, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x52, 0x69, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x65, 0x12, 0x3f,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x61, 0x0a, 0x15, 0x72, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x48, 0x00, 0x52, 0x14, 0x72, 0x61,
	0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x42, 0x16, 0x0a, 0x14, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x65, 0x42, 0x3f, 0x5a, 0x3d, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32, 0x74, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x2d, 0x70,
	0x64, 0x75, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescOnce sync.Once
	file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescData = file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDesc
)

func file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescGZIP() []byte {
	file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescOnce.Do(func() {
		file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescData)
	})
	return file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDescData
}

var file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes = make([]protoimpl.MessageInfo, 153)
var file_api_e2ap_v2_e2ap_pdu_contents_proto_goTypes = []interface{}{
	(*RicsubscriptionRequest)(nil),                         // 0: e2ap.v2.RicsubscriptionRequest
	(*RicsubscriptionRequestIes)(nil),                      // 1: e2ap.v2.RicsubscriptionRequestIes
	(*RicsubscriptionRequestIe)(nil),                       // 2: e2ap.v2.RicsubscriptionRequestIe
	(*RicsubscriptionDetails)(nil),                         // 3: e2ap.v2.RicsubscriptionDetails
	(*RicactionsToBeSetupList)(nil),                        // 4: e2ap.v2.RicactionsToBeSetupList
	(*RicactionToBeSetupItemIes)(nil),                      // 5: e2ap.v2.RicactionToBeSetupItemIes
	(*RicactionToBeSetupItemIe)(nil),                       // 6: e2ap.v2.RicactionToBeSetupItemIe
	(*RicactionToBeSetupItem)(nil),                         // 7: e2ap.v2.RicactionToBeSetupItem
	(*RicsubscriptionResponse)(nil),                        // 8: e2ap.v2.RicsubscriptionResponse
	(*RicsubscriptionResponseIes)(nil),                     // 9: e2ap.v2.RicsubscriptionResponseIes
	(*RicsubscriptionResponseIe)(nil),                      // 10: e2ap.v2.RicsubscriptionResponseIe
	(*RicactionAdmittedList)(nil),                          // 11: e2ap.v2.RicactionAdmittedList
	(*RicactionAdmittedItemIes)(nil),                       // 12: e2ap.v2.RicactionAdmittedItemIes
	(*RicactionAdmittedItemIe)(nil),                        // 13: e2ap.v2.RicactionAdmittedItemIe
	(*RicactionAdmittedItem)(nil),                          // 14: e2ap.v2.RicactionAdmittedItem
	(*RicactionNotAdmittedList)(nil),                       // 15: e2ap.v2.RicactionNotAdmittedList
	(*RicactionNotAdmittedItemIes)(nil),                    // 16: e2ap.v2.RicactionNotAdmittedItemIes
	(*RicactionNotAdmittedItemIe)(nil),                     // 17: e2ap.v2.RicactionNotAdmittedItemIe
	(*RicactionNotAdmittedItem)(nil),                       // 18: e2ap.v2.RicactionNotAdmittedItem
	(*RicsubscriptionFailure)(nil),                         // 19: e2ap.v2.RicsubscriptionFailure
	(*RicsubscriptionFailureIes)(nil),                      // 20: e2ap.v2.RicsubscriptionFailureIes
	(*RicsubscriptionFailureIe)(nil),                       // 21: e2ap.v2.RicsubscriptionFailureIe
	(*RicsubscriptionDeleteRequest)(nil),                   // 22: e2ap.v2.RicsubscriptionDeleteRequest
	(*RicsubscriptionDeleteRequestIes)(nil),                // 23: e2ap.v2.RicsubscriptionDeleteRequestIes
	(*RicsubscriptionDeleteRequestIe)(nil),                 // 24: e2ap.v2.RicsubscriptionDeleteRequestIe
	(*RicsubscriptionDeleteResponse)(nil),                  // 25: e2ap.v2.RicsubscriptionDeleteResponse
	(*RicsubscriptionDeleteResponseIes)(nil),               // 26: e2ap.v2.RicsubscriptionDeleteResponseIes
	(*RicsubscriptionDeleteResponseIe)(nil),                // 27: e2ap.v2.RicsubscriptionDeleteResponseIe
	(*RicsubscriptionDeleteFailure)(nil),                   // 28: e2ap.v2.RicsubscriptionDeleteFailure
	(*RicsubscriptionDeleteFailureIes)(nil),                // 29: e2ap.v2.RicsubscriptionDeleteFailureIes
	(*RicsubscriptionDeleteFailureIe)(nil),                 // 30: e2ap.v2.RicsubscriptionDeleteFailureIe
	(*RicsubscriptionDeleteRequired)(nil),                  // 31: e2ap.v2.RicsubscriptionDeleteRequired
	(*RicsubscriptionDeleteRequiredIes)(nil),               // 32: e2ap.v2.RicsubscriptionDeleteRequiredIes
	(*RicsubscriptionDeleteRequiredIe)(nil),                // 33: e2ap.v2.RicsubscriptionDeleteRequiredIe
	(*RicsubscriptionListWithCause)(nil),                   // 34: e2ap.v2.RicsubscriptionListWithCause
	(*RicsubscriptionWithCauseItemIes)(nil),                // 35: e2ap.v2.RicsubscriptionWithCauseItemIes
	(*RicsubscriptionWithCauseItemIe)(nil),                 // 36: e2ap.v2.RicsubscriptionWithCauseItemIe
	(*RicsubscriptionWithCauseItem)(nil),                   // 37: e2ap.v2.RicsubscriptionWithCauseItem
	(*Ricindication)(nil),                                  // 38: e2ap.v2.Ricindication
	(*RicindicationIes)(nil),                               // 39: e2ap.v2.RicindicationIes
	(*RicindicationIe)(nil),                                // 40: e2ap.v2.RicindicationIe
	(*RiccontrolRequest)(nil),                              // 41: e2ap.v2.RiccontrolRequest
	(*RiccontrolRequestIes)(nil),                           // 42: e2ap.v2.RiccontrolRequestIes
	(*RiccontrolRequestIe)(nil),                            // 43: e2ap.v2.RiccontrolRequestIe
	(*RiccontrolAcknowledge)(nil),                          // 44: e2ap.v2.RiccontrolAcknowledge
	(*RiccontrolAcknowledgeIes)(nil),                       // 45: e2ap.v2.RiccontrolAcknowledgeIes
	(*RiccontrolAcknowledgeIe)(nil),                        // 46: e2ap.v2.RiccontrolAcknowledgeIe
	(*RiccontrolFailure)(nil),                              // 47: e2ap.v2.RiccontrolFailure
	(*RiccontrolFailureIes)(nil),                           // 48: e2ap.v2.RiccontrolFailureIes
	(*RiccontrolFailureIe)(nil),                            // 49: e2ap.v2.RiccontrolFailureIe
	(*ErrorIndication)(nil),                                // 50: e2ap.v2.ErrorIndication
	(*ErrorIndicationIes)(nil),                             // 51: e2ap.v2.ErrorIndicationIes
	(*ErrorIndicationIe)(nil),                              // 52: e2ap.v2.ErrorIndicationIe
	(*E2SetupRequest)(nil),                                 // 53: e2ap.v2.E2setupRequest
	(*E2SetupRequestIes)(nil),                              // 54: e2ap.v2.E2setupRequestIes
	(*E2SetupRequestIe)(nil),                               // 55: e2ap.v2.E2setupRequestIe
	(*E2SetupResponse)(nil),                                // 56: e2ap.v2.E2setupResponse
	(*E2SetupResponseIes)(nil),                             // 57: e2ap.v2.E2setupResponseIes
	(*E2SetupResponseIe)(nil),                              // 58: e2ap.v2.E2setupResponseIe
	(*E2SetupFailure)(nil),                                 // 59: e2ap.v2.E2setupFailure
	(*E2SetupFailureIes)(nil),                              // 60: e2ap.v2.E2setupFailureIes
	(*E2SetupFailureIe)(nil),                               // 61: e2ap.v2.E2setupFailureIe
	(*E2ConnectionUpdate)(nil),                             // 62: e2ap.v2.E2connectionUpdate
	(*E2ConnectionUpdateIes)(nil),                          // 63: e2ap.v2.E2connectionUpdateIes
	(*E2ConnectionUpdateIe)(nil),                           // 64: e2ap.v2.E2connectionUpdateIe
	(*E2ConnectionUpdateList)(nil),                         // 65: e2ap.v2.E2connectionUpdateList
	(*E2ConnectionUpdateItemIes)(nil),                      // 66: e2ap.v2.E2connectionUpdateItemIes
	(*E2ConnectionUpdateItemIe)(nil),                       // 67: e2ap.v2.E2connectionUpdateItemIe
	(*E2ConnectionUpdateItem)(nil),                         // 68: e2ap.v2.E2connectionUpdateItem
	(*E2ConnectionUpdateRemoveList)(nil),                   // 69: e2ap.v2.E2connectionUpdateRemoveList
	(*E2ConnectionUpdateRemoveItemIes)(nil),                // 70: e2ap.v2.E2connectionUpdateRemoveItemIes
	(*E2ConnectionUpdateRemoveItemIe)(nil),                 // 71: e2ap.v2.E2connectionUpdateRemoveItemIe
	(*E2ConnectionUpdateRemoveItem)(nil),                   // 72: e2ap.v2.E2connectionUpdateRemoveItem
	(*E2ConnectionUpdateAcknowledge)(nil),                  // 73: e2ap.v2.E2connectionUpdateAcknowledge
	(*E2ConnectionUpdateAckIes)(nil),                       // 74: e2ap.v2.E2connectionUpdateAckIes
	(*E2ConnectionUpdateAckIe)(nil),                        // 75: e2ap.v2.E2connectionUpdateAckIe
	(*E2ConnectionSetupFailedList)(nil),                    // 76: e2ap.v2.E2connectionSetupFailedList
	(*E2ConnectionSetupFailedItemIes)(nil),                 // 77: e2ap.v2.E2connectionSetupFailedItemIes
	(*E2ConnectionSetupFailedItemIe)(nil),                  // 78: e2ap.v2.E2connectionSetupFailedItemIe
	(*E2ConnectionSetupFailedItem)(nil),                    // 79: e2ap.v2.E2connectionSetupFailedItem
	(*E2ConnectionUpdateFailure)(nil),                      // 80: e2ap.v2.E2connectionUpdateFailure
	(*E2ConnectionUpdateFailureIes)(nil),                   // 81: e2ap.v2.E2connectionUpdateFailureIes
	(*E2ConnectionUpdateFailureIe)(nil),                    // 82: e2ap.v2.E2connectionUpdateFailureIe
	(*E2NodeConfigurationUpdate)(nil),                      // 83: e2ap.v2.E2nodeConfigurationUpdate
	(*E2NodeConfigurationUpdateIes)(nil),                   // 84: e2ap.v2.E2nodeConfigurationUpdateIes
	(*E2NodeConfigurationUpdateIe)(nil),                    // 85: e2ap.v2.E2nodeConfigurationUpdateIe
	(*E2NodeComponentConfigAdditionList)(nil),              // 86: e2ap.v2.E2nodeComponentConfigAdditionList
	(*E2NodeComponentConfigAdditionItemIes)(nil),           // 87: e2ap.v2.E2nodeComponentConfigAdditionItemIes
	(*E2NodeComponentConfigAdditionItemIe)(nil),            // 88: e2ap.v2.E2nodeComponentConfigAdditionItemIe
	(*E2NodeComponentConfigAdditionItem)(nil),              // 89: e2ap.v2.E2nodeComponentConfigAdditionItem
	(*E2NodeComponentConfigUpdateList)(nil),                // 90: e2ap.v2.E2nodeComponentConfigUpdateList
	(*E2NodeComponentConfigUpdateItemIes)(nil),             // 91: e2ap.v2.E2nodeComponentConfigUpdateItemIes
	(*E2NodeComponentConfigUpdateItemIe)(nil),              // 92: e2ap.v2.E2nodeComponentConfigUpdateItemIe
	(*E2NodeComponentConfigUpdateItem)(nil),                // 93: e2ap.v2.E2nodeComponentConfigUpdateItem
	(*E2NodeComponentConfigRemovalList)(nil),               // 94: e2ap.v2.E2nodeComponentConfigRemovalList
	(*E2NodeComponentConfigRemovalItemIes)(nil),            // 95: e2ap.v2.E2nodeComponentConfigRemovalItemIes
	(*E2NodeComponentConfigRemovalItemIe)(nil),             // 96: e2ap.v2.E2nodeComponentConfigRemovalItemIe
	(*E2NodeComponentConfigRemovalItem)(nil),               // 97: e2ap.v2.E2nodeComponentConfigRemovalItem
	(*E2NodeTnlassociationRemovalList)(nil),                // 98: e2ap.v2.E2nodeTnlassociationRemovalList
	(*E2NodeTnlassociationRemovalItemIes)(nil),             // 99: e2ap.v2.E2nodeTnlassociationRemovalItemIes
	(*E2NodeTnlassociationRemovalItemIe)(nil),              // 100: e2ap.v2.E2nodeTnlassociationRemovalItemIe
	(*E2NodeTnlassociationRemovalItem)(nil),                // 101: e2ap.v2.E2nodeTnlassociationRemovalItem
	(*E2NodeConfigurationUpdateAcknowledge)(nil),           // 102: e2ap.v2.E2nodeConfigurationUpdateAcknowledge
	(*E2NodeConfigurationUpdateAcknowledgeIes)(nil),        // 103: e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIes
	(*E2NodeConfigurationUpdateAcknowledgeIe)(nil),         // 104: e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIe
	(*E2NodeComponentConfigAdditionAckList)(nil),           // 105: e2ap.v2.E2nodeComponentConfigAdditionAckList
	(*E2NodeComponentConfigAdditionAckItemIes)(nil),        // 106: e2ap.v2.E2nodeComponentConfigAdditionAckItemIes
	(*E2NodeComponentConfigAdditionAckItemIe)(nil),         // 107: e2ap.v2.E2nodeComponentConfigAdditionAckItemIe
	(*E2NodeComponentConfigAdditionAckItem)(nil),           // 108: e2ap.v2.E2nodeComponentConfigAdditionAckItem
	(*E2NodeComponentConfigUpdateAckList)(nil),             // 109: e2ap.v2.E2nodeComponentConfigUpdateAckList
	(*E2NodeComponentConfigUpdateAckItemIes)(nil),          // 110: e2ap.v2.E2nodeComponentConfigUpdateAckItemIes
	(*E2NodeComponentConfigUpdateAckItemIe)(nil),           // 111: e2ap.v2.E2nodeComponentConfigUpdateAckItemIe
	(*E2NodeComponentConfigUpdateAckItem)(nil),             // 112: e2ap.v2.E2nodeComponentConfigUpdateAckItem
	(*E2NodeComponentConfigRemovalAckList)(nil),            // 113: e2ap.v2.E2nodeComponentConfigRemovalAckList
	(*E2NodeComponentConfigRemovalAckItemIes)(nil),         // 114: e2ap.v2.E2nodeComponentConfigRemovalAckItemIes
	(*E2NodeComponentConfigRemovalAckItemIe)(nil),          // 115: e2ap.v2.E2nodeComponentConfigRemovalAckItemIe
	(*E2NodeComponentConfigRemovalAckItem)(nil),            // 116: e2ap.v2.E2nodeComponentConfigRemovalAckItem
	(*E2NodeConfigurationUpdateFailure)(nil),               // 117: e2ap.v2.E2nodeConfigurationUpdateFailure
	(*E2NodeConfigurationUpdateFailureIes)(nil),            // 118: e2ap.v2.E2nodeConfigurationUpdateFailureIes
	(*E2NodeConfigurationUpdateFailureIe)(nil),             // 119: e2ap.v2.E2nodeConfigurationUpdateFailureIe
	(*ResetRequest)(nil),                                   // 120: e2ap.v2.ResetRequest
	(*ResetRequestIes)(nil),                                // 121: e2ap.v2.ResetRequestIes
	(*ResetRequestIe)(nil),                                 // 122: e2ap.v2.ResetRequestIe
	(*ResetResponse)(nil),                                  // 123: e2ap.v2.ResetResponse
	(*ResetResponseIes)(nil),                               // 124: e2ap.v2.ResetResponseIes
	(*ResetResponseIe)(nil),                                // 125: e2ap.v2.ResetResponseIe
	(*RicserviceUpdate)(nil),                               // 126: e2ap.v2.RicserviceUpdate
	(*RicserviceUpdateIes)(nil),                            // 127: e2ap.v2.RicserviceUpdateIes
	(*RicserviceUpdateIe)(nil),                             // 128: e2ap.v2.RicserviceUpdateIe
	(*RanfunctionsListSingleContainer)(nil),                // 129: e2ap.v2.RanfunctionsListSingleContainer
	(*RanfunctionsList)(nil),                               // 130: e2ap.v2.RanfunctionsList
	(*RanfunctionItemIes)(nil),                             // 131: e2ap.v2.RanfunctionItemIes
	(*RanfunctionItemIe)(nil),                              // 132: e2ap.v2.RanfunctionItemIe
	(*RanfunctionItem)(nil),                                // 133: e2ap.v2.RanfunctionItem
	(*RanfunctionsIdListSingleContainer)(nil),              // 134: e2ap.v2.RanfunctionsIdListSingleContainer
	(*RanfunctionsIdList)(nil),                             // 135: e2ap.v2.RanfunctionsIdList
	(*RanfunctionIdItemIes)(nil),                           // 136: e2ap.v2.RanfunctionIdItemIes
	(*RanfunctionIdItemIe)(nil),                            // 137: e2ap.v2.RanfunctionIdItemIe
	(*RanfunctionIdItem)(nil),                              // 138: e2ap.v2.RanfunctionIdItem
	(*RicserviceUpdateAcknowledge)(nil),                    // 139: e2ap.v2.RicserviceUpdateAcknowledge
	(*RicserviceUpdateAcknowledgeIes)(nil),                 // 140: e2ap.v2.RicserviceUpdateAcknowledgeIes
	(*RicServiceUpdateAcknowledgeIe)(nil),                  // 141: e2ap.v2.RicServiceUpdateAcknowledgeIe
	(*RanfunctionsIdcauseListSingleContainer)(nil),         // 142: e2ap.v2.RanfunctionsIdcauseListSingleContainer
	(*RanfunctionsIdcauseList)(nil),                        // 143: e2ap.v2.RanfunctionsIdcauseList
	(*RanfunctionIdcauseItemIes)(nil),                      // 144: e2ap.v2.RanfunctionIdcauseItemIes
	(*RanfunctionIdcauseItemIe)(nil),                       // 145: e2ap.v2.RanfunctionIdcauseItemIe
	(*RanfunctionIdcauseItem)(nil),                         // 146: e2ap.v2.RanfunctionIdcauseItem
	(*RicserviceUpdateFailure)(nil),                        // 147: e2ap.v2.RicserviceUpdateFailure
	(*RicserviceUpdateFailureIes)(nil),                     // 148: e2ap.v2.RicserviceUpdateFailureIes
	(*RicServiceUpdateFailureIe)(nil),                      // 149: e2ap.v2.RicServiceUpdateFailureIe
	(*RicserviceQuery)(nil),                                // 150: e2ap.v2.RicserviceQuery
	(*RicserviceQueryIes)(nil),                             // 151: e2ap.v2.RicserviceQueryIes
	(*RicServiceQueryIe)(nil),                              // 152: e2ap.v2.RicServiceQueryIe
	(*e2ap_ies.RicrequestId)(nil),                          // 153: e2ap.v2.RicrequestId
	(*e2ap_ies.RanfunctionId)(nil),                         // 154: e2ap.v2.RanfunctionId
	(*e2ap_commondatatypes.RiceventTriggerDefinition)(nil), // 155: e2ap.v2.RiceventTriggerDefinition
	(*e2ap_ies.RicactionId)(nil),                           // 156: e2ap.v2.RicactionId
	(e2ap_ies.RicactionType)(0),                            // 157: e2ap.v2.RicactionType
	(*e2ap_commondatatypes.RicactionDefinition)(nil),       // 158: e2ap.v2.RicactionDefinition
	(*e2ap_ies.RicsubsequentAction)(nil),                   // 159: e2ap.v2.RicsubsequentAction
	(*e2ap_ies.Cause)(nil),                                 // 160: e2ap.v2.Cause
	(*e2ap_ies.CriticalityDiagnostics)(nil),                // 161: e2ap.v2.CriticalityDiagnostics
	(*e2ap_ies.RicindicationSn)(nil),                       // 162: e2ap.v2.RicindicationSn
	(e2ap_ies.RicindicationType)(0),                        // 163: e2ap.v2.RicindicationType
	(*e2ap_commondatatypes.RicindicationHeader)(nil),       // 164: e2ap.v2.RicindicationHeader
	(*e2ap_commondatatypes.RicindicationMessage)(nil),      // 165: e2ap.v2.RicindicationMessage
	(*e2ap_commondatatypes.RiccallProcessId)(nil),          // 166: e2ap.v2.RiccallProcessId
	(*e2ap_commondatatypes.RiccontrolHeader)(nil),          // 167: e2ap.v2.RiccontrolHeader
	(*e2ap_commondatatypes.RiccontrolMessage)(nil),         // 168: e2ap.v2.RiccontrolMessage
	(e2ap_ies.RiccontrolAckRequest)(0),                     // 169: e2ap.v2.RiccontrolAckRequest
	(*e2ap_commondatatypes.RiccontrolOutcome)(nil),         // 170: e2ap.v2.RiccontrolOutcome
	(*e2ap_ies.TransactionId)(nil),                         // 171: e2ap.v2.TransactionId
	(*e2ap_ies.GlobalE2NodeId)(nil),                        // 172: e2ap.v2.GlobalE2nodeId
	(*e2ap_ies.GlobalRicId)(nil),                           // 173: e2ap.v2.GlobalRicId
	(e2ap_ies.TimeToWait)(0),                               // 174: e2ap.v2.TimeToWait
	(*e2ap_ies.Tnlinformation)(nil),                        // 175: e2ap.v2.Tnlinformation
	(e2ap_ies.Tnlusage)(0),                                 // 176: e2ap.v2.Tnlusage
	(e2ap_ies.E2NodeComponentInterfaceType)(0),             // 177: e2ap.v2.E2nodeComponentInterfaceType
	(*e2ap_ies.E2NodeComponentId)(nil),                     // 178: e2ap.v2.E2nodeComponentId
	(*e2ap_ies.E2NodeComponentConfiguration)(nil),          // 179: e2ap.v2.E2nodeComponentConfiguration
	(*e2ap_ies.E2NodeComponentConfigurationAck)(nil),       // 180: e2ap.v2.E2nodeComponentConfigurationAck
	(*e2ap_commondatatypes.RanfunctionDefinition)(nil),     // 181: e2ap.v2.RanfunctionDefinition
	(*e2ap_ies.RanfunctionRevision)(nil),                   // 182: e2ap.v2.RanfunctionRevision
	(*e2ap_commondatatypes.RanfunctionOid)(nil),            // 183: e2ap.v2.RanfunctionOid
}
var file_api_e2ap_v2_e2ap_pdu_contents_proto_depIdxs = []int32{
	1,   // 0: e2ap.v2.RicsubscriptionRequest.protocol_ies:type_name -> e2ap.v2.RicsubscriptionRequestIes
	2,   // 1: e2ap.v2.RicsubscriptionRequestIes.value:type_name -> e2ap.v2.RicsubscriptionRequestIe
	153, // 2: e2ap.v2.RicsubscriptionRequestIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 3: e2ap.v2.RicsubscriptionRequestIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	3,   // 4: e2ap.v2.RicsubscriptionRequestIe.ricsubscription_details:type_name -> e2ap.v2.RicsubscriptionDetails
	155, // 5: e2ap.v2.RicsubscriptionDetails.ric_event_trigger_definition:type_name -> e2ap.v2.RiceventTriggerDefinition
	4,   // 6: e2ap.v2.RicsubscriptionDetails.ric_action_to_be_setup_list:type_name -> e2ap.v2.RicactionsToBeSetupList
	5,   // 7: e2ap.v2.RicactionsToBeSetupList.value:type_name -> e2ap.v2.RicactionToBeSetupItemIes
	6,   // 8: e2ap.v2.RicactionToBeSetupItemIes.value:type_name -> e2ap.v2.RicactionToBeSetupItemIe
	7,   // 9: e2ap.v2.RicactionToBeSetupItemIe.ricaction_to_be_setup_item:type_name -> e2ap.v2.RicactionToBeSetupItem
	156, // 10: e2ap.v2.RicactionToBeSetupItem.ric_action_id:type_name -> e2ap.v2.RicactionId
	157, // 11: e2ap.v2.RicactionToBeSetupItem.ric_action_type:type_name -> e2ap.v2.RicactionType
	158, // 12: e2ap.v2.RicactionToBeSetupItem.ric_action_definition:type_name -> e2ap.v2.RicactionDefinition
	159, // 13: e2ap.v2.RicactionToBeSetupItem.ric_subsequent_action:type_name -> e2ap.v2.RicsubsequentAction
	9,   // 14: e2ap.v2.RicsubscriptionResponse.protocol_ies:type_name -> e2ap.v2.RicsubscriptionResponseIes
	10,  // 15: e2ap.v2.RicsubscriptionResponseIes.value:type_name -> e2ap.v2.RicsubscriptionResponseIe
	153, // 16: e2ap.v2.RicsubscriptionResponseIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 17: e2ap.v2.RicsubscriptionResponseIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	11,  // 18: e2ap.v2.RicsubscriptionResponseIe.ricactions_admitted:type_name -> e2ap.v2.RicactionAdmittedList
	15,  // 19: e2ap.v2.RicsubscriptionResponseIe.ricactions_not_admitted:type_name -> e2ap.v2.RicactionNotAdmittedList
	12,  // 20: e2ap.v2.RicactionAdmittedList.value:type_name -> e2ap.v2.RicactionAdmittedItemIes
	13,  // 21: e2ap.v2.RicactionAdmittedItemIes.value:type_name -> e2ap.v2.RicactionAdmittedItemIe
	14,  // 22: e2ap.v2.RicactionAdmittedItemIe.ricaction_admitted_item:type_name -> e2ap.v2.RicactionAdmittedItem
	156, // 23: e2ap.v2.RicactionAdmittedItem.ric_action_id:type_name -> e2ap.v2.RicactionId
	16,  // 24: e2ap.v2.RicactionNotAdmittedList.value:type_name -> e2ap.v2.RicactionNotAdmittedItemIes
	17,  // 25: e2ap.v2.RicactionNotAdmittedItemIes.value:type_name -> e2ap.v2.RicactionNotAdmittedItemIe
	18,  // 26: e2ap.v2.RicactionNotAdmittedItemIe.ricaction_not_admitted_item:type_name -> e2ap.v2.RicactionNotAdmittedItem
	156, // 27: e2ap.v2.RicactionNotAdmittedItem.ric_action_id:type_name -> e2ap.v2.RicactionId
	160, // 28: e2ap.v2.RicactionNotAdmittedItem.cause:type_name -> e2ap.v2.Cause
	20,  // 29: e2ap.v2.RicsubscriptionFailure.protocol_ies:type_name -> e2ap.v2.RicsubscriptionFailureIes
	21,  // 30: e2ap.v2.RicsubscriptionFailureIes.value:type_name -> e2ap.v2.RicsubscriptionFailureIe
	153, // 31: e2ap.v2.RicsubscriptionFailureIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 32: e2ap.v2.RicsubscriptionFailureIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	160, // 33: e2ap.v2.RicsubscriptionFailureIe.cause:type_name -> e2ap.v2.Cause
	161, // 34: e2ap.v2.RicsubscriptionFailureIe.criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnostics
	23,  // 35: e2ap.v2.RicsubscriptionDeleteRequest.protocol_ies:type_name -> e2ap.v2.RicsubscriptionDeleteRequestIes
	24,  // 36: e2ap.v2.RicsubscriptionDeleteRequestIes.value:type_name -> e2ap.v2.RicsubscriptionDeleteRequestIe
	153, // 37: e2ap.v2.RicsubscriptionDeleteRequestIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 38: e2ap.v2.RicsubscriptionDeleteRequestIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	26,  // 39: e2ap.v2.RicsubscriptionDeleteResponse.protocol_ies:type_name -> e2ap.v2.RicsubscriptionDeleteResponseIes
	27,  // 40: e2ap.v2.RicsubscriptionDeleteResponseIes.value:type_name -> e2ap.v2.RicsubscriptionDeleteResponseIe
	153, // 41: e2ap.v2.RicsubscriptionDeleteResponseIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 42: e2ap.v2.RicsubscriptionDeleteResponseIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	29,  // 43: e2ap.v2.RicsubscriptionDeleteFailure.protocol_ies:type_name -> e2ap.v2.RicsubscriptionDeleteFailureIes
	30,  // 44: e2ap.v2.RicsubscriptionDeleteFailureIes.value:type_name -> e2ap.v2.RicsubscriptionDeleteFailureIe
	153, // 45: e2ap.v2.RicsubscriptionDeleteFailureIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 46: e2ap.v2.RicsubscriptionDeleteFailureIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	160, // 47: e2ap.v2.RicsubscriptionDeleteFailureIe.cause:type_name -> e2ap.v2.Cause
	161, // 48: e2ap.v2.RicsubscriptionDeleteFailureIe.criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnostics
	32,  // 49: e2ap.v2.RicsubscriptionDeleteRequired.protocol_ies:type_name -> e2ap.v2.RicsubscriptionDeleteRequiredIes
	33,  // 50: e2ap.v2.RicsubscriptionDeleteRequiredIes.value:type_name -> e2ap.v2.RicsubscriptionDeleteRequiredIe
	34,  // 51: e2ap.v2.RicsubscriptionDeleteRequiredIe.ricsubscription_to_be_removed:type_name -> e2ap.v2.RicsubscriptionListWithCause
	35,  // 52: e2ap.v2.RicsubscriptionListWithCause.value:type_name -> e2ap.v2.RicsubscriptionWithCauseItemIes
	36,  // 53: e2ap.v2.RicsubscriptionWithCauseItemIes.value:type_name -> e2ap.v2.RicsubscriptionWithCauseItemIe
	37,  // 54: e2ap.v2.RicsubscriptionWithCauseItemIe.ricsubscription_with_cause_item:type_name -> e2ap.v2.RicsubscriptionWithCauseItem
	153, // 55: e2ap.v2.RicsubscriptionWithCauseItem.ric_request_id:type_name -> e2ap.v2.RicrequestId
	154, // 56: e2ap.v2.RicsubscriptionWithCauseItem.ran_function_id:type_name -> e2ap.v2.RanfunctionId
	160, // 57: e2ap.v2.RicsubscriptionWithCauseItem.cause:type_name -> e2ap.v2.Cause
	39,  // 58: e2ap.v2.Ricindication.protocol_ies:type_name -> e2ap.v2.RicindicationIes
	40,  // 59: e2ap.v2.RicindicationIes.value:type_name -> e2ap.v2.RicindicationIe
	153, // 60: e2ap.v2.RicindicationIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 61: e2ap.v2.RicindicationIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	156, // 62: e2ap.v2.RicindicationIe.ricaction_id:type_name -> e2ap.v2.RicactionId
	162, // 63: e2ap.v2.RicindicationIe.ricindication_sn:type_name -> e2ap.v2.RicindicationSn
	163, // 64: e2ap.v2.RicindicationIe.ricindication_type:type_name -> e2ap.v2.RicindicationType
	164, // 65: e2ap.v2.RicindicationIe.ricindication_header:type_name -> e2ap.v2.RicindicationHeader
	165, // 66: e2ap.v2.RicindicationIe.ricindication_message:type_name -> e2ap.v2.RicindicationMessage
	166, // 67: e2ap.v2.RicindicationIe.riccall_process_id:type_name -> e2ap.v2.RiccallProcessId
	42,  // 68: e2ap.v2.RiccontrolRequest.protocol_ies:type_name -> e2ap.v2.RiccontrolRequestIes
	43,  // 69: e2ap.v2.RiccontrolRequestIes.value:type_name -> e2ap.v2.RiccontrolRequestIe
	153, // 70: e2ap.v2.RiccontrolRequestIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 71: e2ap.v2.RiccontrolRequestIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	166, // 72: e2ap.v2.RiccontrolRequestIe.riccall_process_id:type_name -> e2ap.v2.RiccallProcessId
	167, // 73: e2ap.v2.RiccontrolRequestIe.riccontrol_header:type_name -> e2ap.v2.RiccontrolHeader
	168, // 74: e2ap.v2.RiccontrolRequestIe.riccontrol_message:type_name -> e2ap.v2.RiccontrolMessage
	169, // 75: e2ap.v2.RiccontrolRequestIe.riccontrol_ack_request:type_name -> e2ap.v2.RiccontrolAckRequest
	45,  // 76: e2ap.v2.RiccontrolAcknowledge.protocol_ies:type_name -> e2ap.v2.RiccontrolAcknowledgeIes
	46,  // 77: e2ap.v2.RiccontrolAcknowledgeIes.value:type_name -> e2ap.v2.RiccontrolAcknowledgeIe
	153, // 78: e2ap.v2.RiccontrolAcknowledgeIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 79: e2ap.v2.RiccontrolAcknowledgeIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	166, // 80: e2ap.v2.RiccontrolAcknowledgeIe.riccall_process_id:type_name -> e2ap.v2.RiccallProcessId
	170, // 81: e2ap.v2.RiccontrolAcknowledgeIe.riccontrol_outcome:type_name -> e2ap.v2.RiccontrolOutcome
	48,  // 82: e2ap.v2.RiccontrolFailure.protocol_ies:type_name -> e2ap.v2.RiccontrolFailureIes
	49,  // 83: e2ap.v2.RiccontrolFailureIes.value:type_name -> e2ap.v2.RiccontrolFailureIe
	153, // 84: e2ap.v2.RiccontrolFailureIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 85: e2ap.v2.RiccontrolFailureIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	166, // 86: e2ap.v2.RiccontrolFailureIe.riccall_process_id:type_name -> e2ap.v2.RiccallProcessId
	160, // 87: e2ap.v2.RiccontrolFailureIe.cause:type_name -> e2ap.v2.Cause
	170, // 88: e2ap.v2.RiccontrolFailureIe.riccontrol_outcome:type_name -> e2ap.v2.RiccontrolOutcome
	51,  // 89: e2ap.v2.ErrorIndication.protocol_ies:type_name -> e2ap.v2.ErrorIndicationIes
	52,  // 90: e2ap.v2.ErrorIndicationIes.value:type_name -> e2ap.v2.ErrorIndicationIe
	171, // 91: e2ap.v2.ErrorIndicationIe.transaction_id:type_name -> e2ap.v2.TransactionId
	153, // 92: e2ap.v2.ErrorIndicationIe.ricrequest_id:type_name -> e2ap.v2.RicrequestId
	154, // 93: e2ap.v2.ErrorIndicationIe.ranfunction_id:type_name -> e2ap.v2.RanfunctionId
	160, // 94: e2ap.v2.ErrorIndicationIe.cause:type_name -> e2ap.v2.Cause
	161, // 95: e2ap.v2.ErrorIndicationIe.criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnostics
	54,  // 96: e2ap.v2.E2setupRequest.protocol_ies:type_name -> e2ap.v2.E2setupRequestIes
	55,  // 97: e2ap.v2.E2setupRequestIes.value:type_name -> e2ap.v2.E2setupRequestIe
	171, // 98: e2ap.v2.E2setupRequestIe.transaction_id:type_name -> e2ap.v2.TransactionId
	172, // 99: e2ap.v2.E2setupRequestIe.global_e2node_id:type_name -> e2ap.v2.GlobalE2nodeId
	130, // 100: e2ap.v2.E2setupRequestIe.ranfunctions_added:type_name -> e2ap.v2.RanfunctionsList
	86,  // 101: e2ap.v2.E2setupRequestIe.e2node_component_config_addition:type_name -> e2ap.v2.E2nodeComponentConfigAdditionList
	57,  // 102: e2ap.v2.E2setupResponse.protocol_ies:type_name -> e2ap.v2.E2setupResponseIes
	58,  // 103: e2ap.v2.E2setupResponseIes.value:type_name -> e2ap.v2.E2setupResponseIe
	171, // 104: e2ap.v2.E2setupResponseIe.transaction_id:type_name -> e2ap.v2.TransactionId
	173, // 105: e2ap.v2.E2setupResponseIe.global_ric_id:type_name -> e2ap.v2.GlobalRicId
	135, // 106: e2ap.v2.E2setupResponseIe.ranfunctions_accepted:type_name -> e2ap.v2.RanfunctionsIdList
	143, // 107: e2ap.v2.E2setupResponseIe.ranfunctions_rejected:type_name -> e2ap.v2.RanfunctionsIdcauseList
	105, // 108: e2ap.v2.E2setupResponseIe.e2node_component_config_addition_ack:type_name -> e2ap.v2.E2nodeComponentConfigAdditionAckList
	60,  // 109: e2ap.v2.E2setupFailure.protocol_ies:type_name -> e2ap.v2.E2setupFailureIes
	61,  // 110: e2ap.v2.E2setupFailureIes.value:type_name -> e2ap.v2.E2setupFailureIe
	171, // 111: e2ap.v2.E2setupFailureIe.transaction_id:type_name -> e2ap.v2.TransactionId
	160, // 112: e2ap.v2.E2setupFailureIe.cause:type_name -> e2ap.v2.Cause
	174, // 113: e2ap.v2.E2setupFailureIe.time_to_wait:type_name -> e2ap.v2.TimeToWait
	161, // 114: e2ap.v2.E2setupFailureIe.criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnostics
	175, // 115: e2ap.v2.E2setupFailureIe.tnl_information:type_name -> e2ap.v2.Tnlinformation
	63,  // 116: e2ap.v2.E2connectionUpdate.protocol_ies:type_name -> e2ap.v2.E2connectionUpdateIes
	64,  // 117: e2ap.v2.E2connectionUpdateIes.value:type_name -> e2ap.v2.E2connectionUpdateIe
	171, // 118: e2ap.v2.E2connectionUpdateIe.transaction_id:type_name -> e2ap.v2.TransactionId
	65,  // 119: e2ap.v2.E2connectionUpdateIe.e2connection_update_add:type_name -> e2ap.v2.E2connectionUpdateList
	69,  // 120: e2ap.v2.E2connectionUpdateIe.e2connection_update_remove:type_name -> e2ap.v2.E2connectionUpdateRemoveList
	65,  // 121: e2ap.v2.E2connectionUpdateIe.e2connection_update_modify:type_name -> e2ap.v2.E2connectionUpdateList
	66,  // 122: e2ap.v2.E2connectionUpdateList.value:type_name -> e2ap.v2.E2connectionUpdateItemIes
	67,  // 123: e2ap.v2.E2connectionUpdateItemIes.value:type_name -> e2ap.v2.E2connectionUpdateItemIe
	68,  // 124: e2ap.v2.E2connectionUpdateItemIe.e2connection_update_item:type_name -> e2ap.v2.E2connectionUpdateItem
	175, // 125: e2ap.v2.E2connectionUpdateItem.tnl_information:type_name -> e2ap.v2.Tnlinformation
	176, // 126: e2ap.v2.E2connectionUpdateItem.tnl_usage:type_name -> e2ap.v2.Tnlusage
	70,  // 127: e2ap.v2.E2connectionUpdateRemoveList.value:type_name -> e2ap.v2.E2connectionUpdateRemoveItemIes
	71,  // 128: e2ap.v2.E2connectionUpdateRemoveItemIes.value:type_name -> e2ap.v2.E2connectionUpdateRemoveItemIe
	72,  // 129: e2ap.v2.E2connectionUpdateRemoveItemIe.e2connection_update_remove_item:type_name -> e2ap.v2.E2connectionUpdateRemoveItem
	175, // 130: e2ap.v2.E2connectionUpdateRemoveItem.tnl_information:type_name -> e2ap.v2.Tnlinformation
	74,  // 131: e2ap.v2.E2connectionUpdateAcknowledge.protocol_ies:type_name -> e2ap.v2.E2connectionUpdateAckIes
	75,  // 132: e2ap.v2.E2connectionUpdateAckIes.value:type_name -> e2ap.v2.E2connectionUpdateAckIe
	171, // 133: e2ap.v2.E2connectionUpdateAckIe.transaction_id:type_name -> e2ap.v2.TransactionId
	65,  // 134: e2ap.v2.E2connectionUpdateAckIe.e2connection_setup:type_name -> e2ap.v2.E2connectionUpdateList
	76,  // 135: e2ap.v2.E2connectionUpdateAckIe.e2connection_setup_failed:type_name -> e2ap.v2.E2connectionSetupFailedList
	77,  // 136: e2ap.v2.E2connectionSetupFailedList.value:type_name -> e2ap.v2.E2connectionSetupFailedItemIes
	78,  // 137: e2ap.v2.E2connectionSetupFailedItemIes.value:type_name -> e2ap.v2.E2connectionSetupFailedItemIe
	79,  // 138: e2ap.v2.E2connectionSetupFailedItemIe.e2connection_setup_failed_item:type_name -> e2ap.v2.E2connectionSetupFailedItem
	175, // 139: e2ap.v2.E2connectionSetupFailedItem.tnl_information:type_name -> e2ap.v2.Tnlinformation
	160, // 140: e2ap.v2.E2connectionSetupFailedItem.cause:type_name -> e2ap.v2.Cause
	81,  // 141: e2ap.v2.E2connectionUpdateFailure.protocol_ies:type_name -> e2ap.v2.E2connectionUpdateFailureIes
	82,  // 142: e2ap.v2.E2connectionUpdateFailureIes.value:type_name -> e2ap.v2.E2connectionUpdateFailureIe
	171, // 143: e2ap.v2.E2connectionUpdateFailureIe.transaction_id:type_name -> e2ap.v2.TransactionId
	160, // 144: e2ap.v2.E2connectionUpdateFailureIe.cause:type_name -> e2ap.v2.Cause
	174, // 145: e2ap.v2.E2connectionUpdateFailureIe.time_to_wait:type_name -> e2ap.v2.TimeToWait
	161, // 146: e2ap.v2.E2connectionUpdateFailureIe.criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnostics
	84,  // 147: e2ap.v2.E2nodeConfigurationUpdate.protocol_ies:type_name -> e2ap.v2.E2nodeConfigurationUpdateIes
	85,  // 148: e2ap.v2.E2nodeConfigurationUpdateIes.value:type_name -> e2ap.v2.E2nodeConfigurationUpdateIe
	171, // 149: e2ap.v2.E2nodeConfigurationUpdateIe.transaction_id:type_name -> e2ap.v2.TransactionId
	172, // 150: e2ap.v2.E2nodeConfigurationUpdateIe.global_e2node_id:type_name -> e2ap.v2.GlobalE2nodeId
	86,  // 151: e2ap.v2.E2nodeConfigurationUpdateIe.e2node_component_config_addition:type_name -> e2ap.v2.E2nodeComponentConfigAdditionList
	90,  // 152: e2ap.v2.E2nodeConfigurationUpdateIe.e2node_component_config_update:type_name -> e2ap.v2.E2nodeComponentConfigUpdateList
	94,  // 153: e2ap.v2.E2nodeConfigurationUpdateIe.e2node_component_config_removal:type_name -> e2ap.v2.E2nodeComponentConfigRemovalList
	98,  // 154: e2ap.v2.E2nodeConfigurationUpdateIe.e2node_tnlassociation_removal:type_name -> e2ap.v2.E2nodeTnlassociationRemovalList
	87,  // 155: e2ap.v2.E2nodeComponentConfigAdditionList.value:type_name -> e2ap.v2.E2nodeComponentConfigAdditionItemIes
	88,  // 156: e2ap.v2.E2nodeComponentConfigAdditionItemIes.value:type_name -> e2ap.v2.E2nodeComponentConfigAdditionItemIe
	89,  // 157: e2ap.v2.E2nodeComponentConfigAdditionItemIe.e2node_component_config_addition_item:type_name -> e2ap.v2.E2nodeComponentConfigAdditionItem
	177, // 158: e2ap.v2.E2nodeComponentConfigAdditionItem.e2node_component_interface_type:type_name -> e2ap.v2.E2nodeComponentInterfaceType
	178, // 159: e2ap.v2.E2nodeComponentConfigAdditionItem.e2node_component_id:type_name -> e2ap.v2.E2nodeComponentId
	179, // 160: e2ap.v2.E2nodeComponentConfigAdditionItem.e2node_component_configuration:type_name -> e2ap.v2.E2nodeComponentConfiguration
	91,  // 161: e2ap.v2.E2nodeComponentConfigUpdateList.value:type_name -> e2ap.v2.E2nodeComponentConfigUpdateItemIes
	92,  // 162: e2ap.v2.E2nodeComponentConfigUpdateItemIes.value:type_name -> e2ap.v2.E2nodeComponentConfigUpdateItemIe
	93,  // 163: e2ap.v2.E2nodeComponentConfigUpdateItemIe.e2node_component_config_update_item:type_name -> e2ap.v2.E2nodeComponentConfigUpdateItem
	177, // 164: e2ap.v2.E2nodeComponentConfigUpdateItem.e2node_component_interface_type:type_name -> e2ap.v2.E2nodeComponentInterfaceType
	178, // 165: e2ap.v2.E2nodeComponentConfigUpdateItem.e2node_component_id:type_name -> e2ap.v2.E2nodeComponentId
	179, // 166: e2ap.v2.E2nodeComponentConfigUpdateItem.e2node_component_configuration:type_name -> e2ap.v2.E2nodeComponentConfiguration
	95,  // 167: e2ap.v2.E2nodeComponentConfigRemovalList.value:type_name -> e2ap.v2.E2nodeComponentConfigRemovalItemIes
	96,  // 168: e2ap.v2.E2nodeComponentConfigRemovalItemIes.value:type_name -> e2ap.v2.E2nodeComponentConfigRemovalItemIe
	97,  // 169: e2ap.v2.E2nodeComponentConfigRemovalItemIe.e2node_component_config_removal_item:type_name -> e2ap.v2.E2nodeComponentConfigRemovalItem
	177, // 170: e2ap.v2.E2nodeComponentConfigRemovalItem.e2node_component_interface_type:type_name -> e2ap.v2.E2nodeComponentInterfaceType
	178, // 171: e2ap.v2.E2nodeComponentConfigRemovalItem.e2node_component_id:type_name -> e2ap.v2.E2nodeComponentId
	99,  // 172: e2ap.v2.E2nodeTnlassociationRemovalList.value:type_name -> e2ap.v2.E2nodeTnlassociationRemovalItemIes
	100, // 173: e2ap.v2.E2nodeTnlassociationRemovalItemIes.value:type_name -> e2ap.v2.E2nodeTnlassociationRemovalItemIe
	101, // 174: e2ap.v2.E2nodeTnlassociationRemovalItemIe.e2node_tnlassociation_removal_item:type_name -> e2ap.v2.E2nodeTnlassociationRemovalItem
	175, // 175: e2ap.v2.E2nodeTnlassociationRemovalItem.tnl_information:type_name -> e2ap.v2.Tnlinformation
	175, // 176: e2ap.v2.E2nodeTnlassociationRemovalItem.tnl_information_ric:type_name -> e2ap.v2.Tnlinformation
	103, // 177: e2ap.v2.E2nodeConfigurationUpdateAcknowledge.protocol_ies:type_name -> e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIes
	104, // 178: e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIes.value:type_name -> e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIe
	171, // 179: e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIe.transaction_id:type_name -> e2ap.v2.TransactionId
	105, // 180: e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIe.e2node_component_config_addition_ack:type_name -> e2ap.v2.E2nodeComponentConfigAdditionAckList
	109, // 181: e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIe.e2node_component_config_update_ack:type_name -> e2ap.v2.E2nodeComponentConfigUpdateAckList
	113, // 182: e2ap.v2.E2nodeConfigurationUpdateAcknowledgeIe.e2node_component_config_removal_ack:type_name -> e2ap.v2.E2nodeComponentConfigRemovalAckList
	106, // 183: e2ap.v2.E2nodeComponentConfigAdditionAckList.value:type_name -> e2ap.v2.E2nodeComponentConfigAdditionAckItemIes
	107, // 184: e2ap.v2.E2nodeComponentConfigAdditionAckItemIes.value:type_name -> e2ap.v2.E2nodeComponentConfigAdditionAckItemIe
	108, // 185: e2ap.v2.E2nodeComponentConfigAdditionAckItemIe.e2node_component_config_addition_ack_item:type_name -> e2ap.v2.E2nodeComponentConfigAdditionAckItem
	177, // 186: e2ap.v2.E2nodeComponentConfigAdditionAckItem.e2node_component_interface_type:type_name -> e2ap.v2.E2nodeComponentInterfaceType
	178, // 187: e2ap.v2.E2nodeComponentConfigAdditionAckItem.e2node_component_id:type_name -> e2ap.v2.E2nodeComponentId
	180, // 188: e2ap.v2.E2nodeComponentConfigAdditionAckItem.e2node_component_configuration_ack:type_name -> e2ap.v2.E2nodeComponentConfigurationAck
	110, // 189: e2ap.v2.E2nodeComponentConfigUpdateAckList.value:type_name -> e2ap.v2.E2nodeComponentConfigUpdateAckItemIes
	111, // 190: e2ap.v2.E2nodeComponentConfigUpdateAckItemIes.value:type_name -> e2ap.v2.E2nodeComponentConfigUpdateAckItemIe
	112, // 191: e2ap.v2.E2nodeComponentConfigUpdateAckItemIe.e2node_component_config_update_ack_item:type_name -> e2ap.v2.E2nodeComponentConfigUpdateAckItem
	177, // 192: e2ap.v2.E2nodeComponentConfigUpdateAckItem.e2node_component_interface_type:type_name -> e2ap.v2.E2nodeComponentInterfaceType
	178, // 193: e2ap.v2.E2nodeComponentConfigUpdateAckItem.e2node_component_id:type_name -> e2ap.v2.E2nodeComponentId
	180, // 194: e2ap.v2.E2nodeComponentConfigUpdateAckItem.e2node_component_configuration_ack:type_name -> e2ap.v2.E2nodeComponentConfigurationAck
	114, // 195: e2ap.v2.E2nodeComponentConfigRemovalAckList.value:type_name -> e2ap.v2.E2nodeComponentConfigRemovalAckItemIes
	115, // 196: e2ap.v2.E2nodeComponentConfigRemovalAckItemIes.value:type_name -> e2ap.v2.E2nodeComponentConfigRemovalAckItemIe
	116, // 197: e2ap.v2.E2nodeComponentConfigRemovalAckItemIe.e2node_component_config_removal_ack_item:type_name -> e2ap.v2.E2nodeComponentConfigRemovalAckItem
	177, // 198: e2ap.v2.E2nodeComponentConfigRemovalAckItem.e2node_component_interface_type:type_name -> e2ap.v2.E2nodeComponentInterfaceType
	178, // 199: e2ap.v2.E2nodeComponentConfigRemovalAckItem.e2node_component_id:type_name -> e2ap.v2.E2nodeComponentId
	180, // 200: e2ap.v2.E2nodeComponentConfigRemovalAckItem.e2node_component_configuration_ack:type_name -> e2ap.v2.E2nodeComponentConfigurationAck
	118, // 201: e2ap.v2.E2nodeConfigurationUpdateFailure.protocol_ies:type_name -> e2ap.v2.E2nodeConfigurationUpdateFailureIes
	119, // 202: e2ap.v2.E2nodeConfigurationUpdateFailureIes.value:type_name -> e2ap.v2.E2nodeConfigurationUpdateFailureIe
	171, // 203: e2ap.v2.E2nodeConfigurationUpdateFailureIe.transaction_id:type_name -> e2ap.v2.TransactionId
	160, // 204: e2ap.v2.E2nodeConfigurationUpdateFailureIe.cause:type_name -> e2ap.v2.Cause
	174, // 205: e2ap.v2.E2nodeConfigurationUpdateFailureIe.time_to_wait:type_name -> e2ap.v2.TimeToWait
	161, // 206: e2ap.v2.E2nodeConfigurationUpdateFailureIe.criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnostics
	121, // 207: e2ap.v2.ResetRequest.protocol_ies:type_name -> e2ap.v2.ResetRequestIes
	122, // 208: e2ap.v2.ResetRequestIes.value:type_name -> e2ap.v2.ResetRequestIe
	171, // 209: e2ap.v2.ResetRequestIe.transaction_id:type_name -> e2ap.v2.TransactionId
	160, // 210: e2ap.v2.ResetRequestIe.cause:type_name -> e2ap.v2.Cause
	124, // 211: e2ap.v2.ResetResponse.protocol_ies:type_name -> e2ap.v2.ResetResponseIes
	125, // 212: e2ap.v2.ResetResponseIes.value:type_name -> e2ap.v2.ResetResponseIe
	171, // 213: e2ap.v2.ResetResponseIe.transaction_id:type_name -> e2ap.v2.TransactionId
	161, // 214: e2ap.v2.ResetResponseIe.criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnostics
	127, // 215: e2ap.v2.RicserviceUpdate.protocol_ies:type_name -> e2ap.v2.RicserviceUpdateIes
	128, // 216: e2ap.v2.RicserviceUpdateIes.value:type_name -> e2ap.v2.RicserviceUpdateIe
	171, // 217: e2ap.v2.RicserviceUpdateIe.transaction_id:type_name -> e2ap.v2.TransactionId
	129, // 218: e2ap.v2.RicserviceUpdateIe.ranfunctions_added:type_name -> e2ap.v2.RanfunctionsListSingleContainer
	129, // 219: e2ap.v2.RicserviceUpdateIe.ranfunctions_modified:type_name -> e2ap.v2.RanfunctionsListSingleContainer
	134, // 220: e2ap.v2.RicserviceUpdateIe.ranfunctions_deleted:type_name -> e2ap.v2.RanfunctionsIdListSingleContainer
	130, // 221: e2ap.v2.RanfunctionsListSingleContainer.value:type_name -> e2ap.v2.RanfunctionsList
	131, // 222: e2ap.v2.RanfunctionsList.value:type_name -> e2ap.v2.RanfunctionItemIes
	132, // 223: e2ap.v2.RanfunctionItemIes.value:type_name -> e2ap.v2.RanfunctionItemIe
	133, // 224: e2ap.v2.RanfunctionItemIe.ranfunction_item:type_name -> e2ap.v2.RanfunctionItem
	154, // 225: e2ap.v2.RanfunctionItem.ran_function_id:type_name -> e2ap.v2.RanfunctionId
	181, // 226: e2ap.v2.RanfunctionItem.ran_function_definition:type_name -> e2ap.v2.RanfunctionDefinition
	182, // 227: e2ap.v2.RanfunctionItem.ran_function_revision:type_name -> e2ap.v2.RanfunctionRevision
	183, // 228: e2ap.v2.RanfunctionItem.ran_function_oid:type_name -> e2ap.v2.RanfunctionOid
	135, // 229: e2ap.v2.RanfunctionsIdListSingleContainer.value:type_name -> e2ap.v2.RanfunctionsIdList
	136, // 230: e2ap.v2.RanfunctionsIdList.value:type_name -> e2ap.v2.RanfunctionIdItemIes
	137, // 231: e2ap.v2.RanfunctionIdItemIes.value:type_name -> e2ap.v2.RanfunctionIdItemIe
	138, // 232: e2ap.v2.RanfunctionIdItemIe.ranfunction_id_item:type_name -> e2ap.v2.RanfunctionIdItem
	154, // 233: e2ap.v2.RanfunctionIdItem.ran_function_id:type_name -> e2ap.v2.RanfunctionId
	182, // 234: e2ap.v2.RanfunctionIdItem.ran_function_revision:type_name -> e2ap.v2.RanfunctionRevision
	140, // 235: e2ap.v2.RicserviceUpdateAcknowledge.protocol_ies:type_name -> e2ap.v2.RicserviceUpdateAcknowledgeIes
	141, // 236: e2ap.v2.RicserviceUpdateAcknowledgeIes.value:type_name -> e2ap.v2.RicServiceUpdateAcknowledgeIe
	171, // 237: e2ap.v2.RicServiceUpdateAcknowledgeIe.transaction_id:type_name -> e2ap.v2.TransactionId
	134, // 238: e2ap.v2.RicServiceUpdateAcknowledgeIe.ranfunctions_accepted:type_name -> e2ap.v2.RanfunctionsIdListSingleContainer
	142, // 239: e2ap.v2.RicServiceUpdateAcknowledgeIe.ranfunctions_rejected:type_name -> e2ap.v2.RanfunctionsIdcauseListSingleContainer
	143, // 240: e2ap.v2.RanfunctionsIdcauseListSingleContainer.value:type_name -> e2ap.v2.RanfunctionsIdcauseList
	144, // 241: e2ap.v2.RanfunctionsIdcauseList.value:type_name -> e2ap.v2.RanfunctionIdcauseItemIes
	145, // 242: e2ap.v2.RanfunctionIdcauseItemIes.value:type_name -> e2ap.v2.RanfunctionIdcauseItemIe
	146, // 243: e2ap.v2.RanfunctionIdcauseItemIe.ranfunction_iecause_item:type_name -> e2ap.v2.RanfunctionIdcauseItem
	154, // 244: e2ap.v2.RanfunctionIdcauseItem.ran_function_id:type_name -> e2ap.v2.RanfunctionId
	160, // 245: e2ap.v2.RanfunctionIdcauseItem.cause:type_name -> e2ap.v2.Cause
	148, // 246: e2ap.v2.RicserviceUpdateFailure.protocol_ies:type_name -> e2ap.v2.RicserviceUpdateFailureIes
	149, // 247: e2ap.v2.RicserviceUpdateFailureIes.value:type_name -> e2ap.v2.RicServiceUpdateFailureIe
	171, // 248: e2ap.v2.RicServiceUpdateFailureIe.transaction_id:type_name -> e2ap.v2.TransactionId
	160, // 249: e2ap.v2.RicServiceUpdateFailureIe.cause:type_name -> e2ap.v2.Cause
	174, // 250: e2ap.v2.RicServiceUpdateFailureIe.time_to_wait:type_name -> e2ap.v2.TimeToWait
	161, // 251: e2ap.v2.RicServiceUpdateFailureIe.criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnostics
	151, // 252: e2ap.v2.RicserviceQuery.protocol_ies:type_name -> e2ap.v2.RicserviceQueryIes
	152, // 253: e2ap.v2.RicserviceQueryIes.value:type_name -> e2ap.v2.RicServiceQueryIe
	171, // 254: e2ap.v2.RicServiceQueryIe.transaction_id:type_name -> e2ap.v2.TransactionId
	134, // 255: e2ap.v2.RicServiceQueryIe.ranfunctions_accepted:type_name -> e2ap.v2.RanfunctionsIdListSingleContainer
	256, // [256:256] is the sub-list for method output_type
	256, // [256:256] is the sub-list for method input_type
	256, // [256:256] is the sub-list for extension type_name
	256, // [256:256] is the sub-list for extension extendee
	0,   // [0:256] is the sub-list for field type_name
}

func init() { file_api_e2ap_v2_e2ap_pdu_contents_proto_init() }
func file_api_e2ap_v2_e2ap_pdu_contents_proto_init() {
	if File_api_e2ap_v2_e2ap_pdu_contents_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionRequestIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionRequestIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionsToBeSetupList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionToBeSetupItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionToBeSetupItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionToBeSetupItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionResponseIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionResponseIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionAdmittedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionAdmittedItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionAdmittedItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionAdmittedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionNotAdmittedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionNotAdmittedItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionNotAdmittedItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionNotAdmittedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionFailureIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionFailureIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteRequestIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteRequestIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteResponseIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteResponseIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteFailureIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteFailureIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteRequired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteRequiredIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionDeleteRequiredIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionListWithCause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionWithCauseItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionWithCauseItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubscriptionWithCauseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ricindication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicindicationIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicindicationIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolRequestIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolRequestIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolAcknowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolAcknowledgeIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolAcknowledgeIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolFailureIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RiccontrolFailureIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorIndication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorIndicationIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorIndicationIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupRequestIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupRequestIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupResponseIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupResponseIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupFailureIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2SetupFailureIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateRemoveList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateRemoveItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateRemoveItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateRemoveItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateAcknowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateAckIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateAckIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionSetupFailedList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionSetupFailedItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionSetupFailedItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionSetupFailedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateFailureIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateFailureIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigAdditionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigAdditionItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigAdditionItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigAdditionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigUpdateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigUpdateItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigUpdateItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigUpdateItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigRemovalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigRemovalItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigRemovalItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigRemovalItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeTnlassociationRemovalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeTnlassociationRemovalItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeTnlassociationRemovalItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeTnlassociationRemovalItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateAcknowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateAcknowledgeIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateAcknowledgeIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigAdditionAckList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigAdditionAckItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigAdditionAckItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigAdditionAckItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigUpdateAckList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigUpdateAckItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigUpdateAckItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigUpdateAckItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigRemovalAckList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigRemovalAckItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigRemovalAckItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigRemovalAckItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateFailureIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateFailureIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetRequestIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetRequestIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetResponseIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetResponseIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceUpdateIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceUpdateIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionsListSingleContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionsIdListSingleContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionsIdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionIdItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionIdItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionIdItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceUpdateAcknowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceUpdateAcknowledgeIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicServiceUpdateAcknowledgeIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionsIdcauseListSingleContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionsIdcauseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionIdcauseItemIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionIdcauseItemIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionIdcauseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceUpdateFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceUpdateFailureIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicServiceUpdateFailureIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicserviceQueryIes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicServiceQueryIe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*RicsubscriptionRequestIe_RicrequestId)(nil),
		(*RicsubscriptionRequestIe_RanfunctionId)(nil),
		(*RicsubscriptionRequestIe_RicsubscriptionDetails)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*RicactionToBeSetupItemIe_RicactionToBeSetupItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*RicsubscriptionResponseIe_RicrequestId)(nil),
		(*RicsubscriptionResponseIe_RanfunctionId)(nil),
		(*RicsubscriptionResponseIe_RicactionsAdmitted)(nil),
		(*RicsubscriptionResponseIe_RicactionsNotAdmitted)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*RicactionAdmittedItemIe_RicactionAdmittedItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*RicactionNotAdmittedItemIe_RicactionNotAdmittedItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*RicsubscriptionFailureIe_RicrequestId)(nil),
		(*RicsubscriptionFailureIe_RanfunctionId)(nil),
		(*RicsubscriptionFailureIe_Cause)(nil),
		(*RicsubscriptionFailureIe_CriticalityDiagnostics)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[24].OneofWrappers = []interface{}{
		(*RicsubscriptionDeleteRequestIe_RicrequestId)(nil),
		(*RicsubscriptionDeleteRequestIe_RanfunctionId)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[27].OneofWrappers = []interface{}{
		(*RicsubscriptionDeleteResponseIe_RicrequestId)(nil),
		(*RicsubscriptionDeleteResponseIe_RanfunctionId)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*RicsubscriptionDeleteFailureIe_RicrequestId)(nil),
		(*RicsubscriptionDeleteFailureIe_RanfunctionId)(nil),
		(*RicsubscriptionDeleteFailureIe_Cause)(nil),
		(*RicsubscriptionDeleteFailureIe_CriticalityDiagnostics)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*RicsubscriptionDeleteRequiredIe_RicsubscriptionToBeRemoved)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[36].OneofWrappers = []interface{}{
		(*RicsubscriptionWithCauseItemIe_RicsubscriptionWithCauseItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[40].OneofWrappers = []interface{}{
		(*RicindicationIe_RicrequestId)(nil),
		(*RicindicationIe_RanfunctionId)(nil),
		(*RicindicationIe_RicactionId)(nil),
		(*RicindicationIe_RicindicationSn)(nil),
		(*RicindicationIe_RicindicationType)(nil),
		(*RicindicationIe_RicindicationHeader)(nil),
		(*RicindicationIe_RicindicationMessage)(nil),
		(*RicindicationIe_RiccallProcessId)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[43].OneofWrappers = []interface{}{
		(*RiccontrolRequestIe_RicrequestId)(nil),
		(*RiccontrolRequestIe_RanfunctionId)(nil),
		(*RiccontrolRequestIe_RiccallProcessId)(nil),
		(*RiccontrolRequestIe_RiccontrolHeader)(nil),
		(*RiccontrolRequestIe_RiccontrolMessage)(nil),
		(*RiccontrolRequestIe_RiccontrolAckRequest)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[46].OneofWrappers = []interface{}{
		(*RiccontrolAcknowledgeIe_RicrequestId)(nil),
		(*RiccontrolAcknowledgeIe_RanfunctionId)(nil),
		(*RiccontrolAcknowledgeIe_RiccallProcessId)(nil),
		(*RiccontrolAcknowledgeIe_RiccontrolOutcome)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[49].OneofWrappers = []interface{}{
		(*RiccontrolFailureIe_RicrequestId)(nil),
		(*RiccontrolFailureIe_RanfunctionId)(nil),
		(*RiccontrolFailureIe_RiccallProcessId)(nil),
		(*RiccontrolFailureIe_Cause)(nil),
		(*RiccontrolFailureIe_RiccontrolOutcome)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*ErrorIndicationIe_TransactionId)(nil),
		(*ErrorIndicationIe_RicrequestId)(nil),
		(*ErrorIndicationIe_RanfunctionId)(nil),
		(*ErrorIndicationIe_Cause)(nil),
		(*ErrorIndicationIe_CriticalityDiagnostics)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[55].OneofWrappers = []interface{}{
		(*E2SetupRequestIe_TransactionId)(nil),
		(*E2SetupRequestIe_GlobalE2NodeId)(nil),
		(*E2SetupRequestIe_RanfunctionsAdded)(nil),
		(*E2SetupRequestIe_E2NodeComponentConfigAddition)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[58].OneofWrappers = []interface{}{
		(*E2SetupResponseIe_TransactionId)(nil),
		(*E2SetupResponseIe_GlobalRicId)(nil),
		(*E2SetupResponseIe_RanfunctionsAccepted)(nil),
		(*E2SetupResponseIe_RanfunctionsRejected)(nil),
		(*E2SetupResponseIe_E2NodeComponentConfigAdditionAck)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[61].OneofWrappers = []interface{}{
		(*E2SetupFailureIe_TransactionId)(nil),
		(*E2SetupFailureIe_Cause)(nil),
		(*E2SetupFailureIe_TimeToWait)(nil),
		(*E2SetupFailureIe_CriticalityDiagnostics)(nil),
		(*E2SetupFailureIe_TnlInformation)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[64].OneofWrappers = []interface{}{
		(*E2ConnectionUpdateIe_TransactionId)(nil),
		(*E2ConnectionUpdateIe_E2ConnectionUpdateAdd)(nil),
		(*E2ConnectionUpdateIe_E2ConnectionUpdateRemove)(nil),
		(*E2ConnectionUpdateIe_E2ConnectionUpdateModify)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[67].OneofWrappers = []interface{}{
		(*E2ConnectionUpdateItemIe_E2ConnectionUpdateItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[71].OneofWrappers = []interface{}{
		(*E2ConnectionUpdateRemoveItemIe_E2ConnectionUpdateRemoveItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[75].OneofWrappers = []interface{}{
		(*E2ConnectionUpdateAckIe_TransactionId)(nil),
		(*E2ConnectionUpdateAckIe_E2ConnectionSetup)(nil),
		(*E2ConnectionUpdateAckIe_E2ConnectionSetupFailed)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[78].OneofWrappers = []interface{}{
		(*E2ConnectionSetupFailedItemIe_E2ConnectionSetupFailedItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[82].OneofWrappers = []interface{}{
		(*E2ConnectionUpdateFailureIe_TransactionId)(nil),
		(*E2ConnectionUpdateFailureIe_Cause)(nil),
		(*E2ConnectionUpdateFailureIe_TimeToWait)(nil),
		(*E2ConnectionUpdateFailureIe_CriticalityDiagnostics)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[85].OneofWrappers = []interface{}{
		(*E2NodeConfigurationUpdateIe_TransactionId)(nil),
		(*E2NodeConfigurationUpdateIe_GlobalE2NodeId)(nil),
		(*E2NodeConfigurationUpdateIe_E2NodeComponentConfigAddition)(nil),
		(*E2NodeConfigurationUpdateIe_E2NodeComponentConfigUpdate)(nil),
		(*E2NodeConfigurationUpdateIe_E2NodeComponentConfigRemoval)(nil),
		(*E2NodeConfigurationUpdateIe_E2NodeTnlassociationRemoval)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[88].OneofWrappers = []interface{}{
		(*E2NodeComponentConfigAdditionItemIe_E2NodeComponentConfigAdditionItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[92].OneofWrappers = []interface{}{
		(*E2NodeComponentConfigUpdateItemIe_E2NodeComponentConfigUpdateItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[96].OneofWrappers = []interface{}{
		(*E2NodeComponentConfigRemovalItemIe_E2NodeComponentConfigRemovalItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[100].OneofWrappers = []interface{}{
		(*E2NodeTnlassociationRemovalItemIe_E2NodeTnlassociationRemovalItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[104].OneofWrappers = []interface{}{
		(*E2NodeConfigurationUpdateAcknowledgeIe_TransactionId)(nil),
		(*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigAdditionAck)(nil),
		(*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigUpdateAck)(nil),
		(*E2NodeConfigurationUpdateAcknowledgeIe_E2NodeComponentConfigRemovalAck)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[107].OneofWrappers = []interface{}{
		(*E2NodeComponentConfigAdditionAckItemIe_E2NodeComponentConfigAdditionAckItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[111].OneofWrappers = []interface{}{
		(*E2NodeComponentConfigUpdateAckItemIe_E2NodeComponentConfigUpdateAckItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[115].OneofWrappers = []interface{}{
		(*E2NodeComponentConfigRemovalAckItemIe_E2NodeComponentConfigRemovalAckItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[119].OneofWrappers = []interface{}{
		(*E2NodeConfigurationUpdateFailureIe_TransactionId)(nil),
		(*E2NodeConfigurationUpdateFailureIe_Cause)(nil),
		(*E2NodeConfigurationUpdateFailureIe_TimeToWait)(nil),
		(*E2NodeConfigurationUpdateFailureIe_CriticalityDiagnostics)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[122].OneofWrappers = []interface{}{
		(*ResetRequestIe_TransactionId)(nil),
		(*ResetRequestIe_Cause)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[125].OneofWrappers = []interface{}{
		(*ResetResponseIe_TransactionId)(nil),
		(*ResetResponseIe_CriticalityDiagnostics)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[128].OneofWrappers = []interface{}{
		(*RicserviceUpdateIe_TransactionId)(nil),
		(*RicserviceUpdateIe_RanfunctionsAdded)(nil),
		(*RicserviceUpdateIe_RanfunctionsModified)(nil),
		(*RicserviceUpdateIe_RanfunctionsDeleted)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[132].OneofWrappers = []interface{}{
		(*RanfunctionItemIe_RanfunctionItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[137].OneofWrappers = []interface{}{
		(*RanfunctionIdItemIe_RanfunctionIdItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[141].OneofWrappers = []interface{}{
		(*RicServiceUpdateAcknowledgeIe_TransactionId)(nil),
		(*RicServiceUpdateAcknowledgeIe_RanfunctionsAccepted)(nil),
		(*RicServiceUpdateAcknowledgeIe_RanfunctionsRejected)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[145].OneofWrappers = []interface{}{
		(*RanfunctionIdcauseItemIe_RanfunctionIecauseItem)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[149].OneofWrappers = []interface{}{
		(*RicServiceUpdateFailureIe_TransactionId)(nil),
		(*RicServiceUpdateFailureIe_Cause)(nil),
		(*RicServiceUpdateFailureIe_TimeToWait)(nil),
		(*RicServiceUpdateFailureIe_CriticalityDiagnostics)(nil),
	}
	file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes[152].OneofWrappers = []interface{}{
		(*RicServiceQueryIe_TransactionId)(nil),
		(*RicServiceQueryIe_RanfunctionsAccepted)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   153,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_e2ap_v2_e2ap_pdu_contents_proto_goTypes,
		DependencyIndexes: file_api_e2ap_v2_e2ap_pdu_contents_proto_depIdxs,
		MessageInfos:      file_api_e2ap_v2_e2ap_pdu_contents_proto_msgTypes,
	}.Build()
	File_api_e2ap_v2_e2ap_pdu_contents_proto = out.File
	file_api_e2ap_v2_e2ap_pdu_contents_proto_rawDesc = nil
	file_api_e2ap_v2_e2ap_pdu_contents_proto_goTypes = nil
	file_api_e2ap_v2_e2ap_pdu_contents_proto_depIdxs = nil
}
