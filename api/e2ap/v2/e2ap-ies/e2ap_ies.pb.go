// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.4
// source: api/e2ap/v2/e2ap_ies.proto

package e2ap_ies

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	e2ap_commondatatypes "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-commondatatypes"
	_ "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-constants"
	asn1 "github.com/onosproject/onos-lib-go/api/asn1/v1/asn1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// enumerated from e2ap_v2.asn:1313
type UpdateOutcome int32

const (
	UpdateOutcome_UPDATE_OUTCOME_SUCCESS UpdateOutcome = 0
	UpdateOutcome_UPDATE_OUTCOME_FAILURE UpdateOutcome = 1
)

// Enum value maps for UpdateOutcome.
var (
	UpdateOutcome_name = map[int32]string{
		0: "UPDATE_OUTCOME_SUCCESS",
		1: "UPDATE_OUTCOME_FAILURE",
	}
	UpdateOutcome_value = map[string]int32{
		"UPDATE_OUTCOME_SUCCESS": 0,
		"UPDATE_OUTCOME_FAILURE": 1,
	}
)

func (x UpdateOutcome) Enum() *UpdateOutcome {
	p := new(UpdateOutcome)
	*p = x
	return p
}

func (x UpdateOutcome) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateOutcome) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[0].Descriptor()
}

func (UpdateOutcome) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[0]
}

func (x UpdateOutcome) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateOutcome.Descriptor instead.
func (UpdateOutcome) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{0}
}

// enumerated from e2ap_v2.asn:1227
type CauseE2Node int32

const (
	CauseE2Node_CAUSE_E2NODE_E2NODE_COMPONENT_UNKNOWN CauseE2Node = 0
)

// Enum value maps for CauseE2Node.
var (
	CauseE2Node_name = map[int32]string{
		0: "CAUSE_E2NODE_E2NODE_COMPONENT_UNKNOWN",
	}
	CauseE2Node_value = map[string]int32{
		"CAUSE_E2NODE_E2NODE_COMPONENT_UNKNOWN": 0,
	}
)

func (x CauseE2Node) Enum() *CauseE2Node {
	p := new(CauseE2Node)
	*p = x
	return p
}

func (x CauseE2Node) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CauseE2Node) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[1].Descriptor()
}

func (CauseE2Node) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[1]
}

func (x CauseE2Node) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CauseE2Node.Descriptor instead.
func (CauseE2Node) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{1}
}

// enumerated from e2ap_v2.asn:1232
type CauseMisc int32

const (
	CauseMisc_CAUSE_MISC_CONTROL_PROCESSING_OVERLOAD CauseMisc = 0
	CauseMisc_CAUSE_MISC_HARDWARE_FAILURE            CauseMisc = 1
	CauseMisc_CAUSE_MISC_OM_INTERVENTION             CauseMisc = 2
	CauseMisc_CAUSE_MISC_UNSPECIFIED                 CauseMisc = 3
)

// Enum value maps for CauseMisc.
var (
	CauseMisc_name = map[int32]string{
		0: "CAUSE_MISC_CONTROL_PROCESSING_OVERLOAD",
		1: "CAUSE_MISC_HARDWARE_FAILURE",
		2: "CAUSE_MISC_OM_INTERVENTION",
		3: "CAUSE_MISC_UNSPECIFIED",
	}
	CauseMisc_value = map[string]int32{
		"CAUSE_MISC_CONTROL_PROCESSING_OVERLOAD": 0,
		"CAUSE_MISC_HARDWARE_FAILURE":            1,
		"CAUSE_MISC_OM_INTERVENTION":             2,
		"CAUSE_MISC_UNSPECIFIED":                 3,
	}
)

func (x CauseMisc) Enum() *CauseMisc {
	p := new(CauseMisc)
	*p = x
	return p
}

func (x CauseMisc) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CauseMisc) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[2].Descriptor()
}

func (CauseMisc) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[2]
}

func (x CauseMisc) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CauseMisc.Descriptor instead.
func (CauseMisc) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{2}
}

// enumerated from e2ap_v2.asn:1240
type CauseProtocol int32

const (
	CauseProtocol_CAUSE_PROTOCOL_TRANSFER_SYNTAX_ERROR                             CauseProtocol = 0
	CauseProtocol_CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_REJECT                      CauseProtocol = 1
	CauseProtocol_CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY           CauseProtocol = 2
	CauseProtocol_CAUSE_PROTOCOL_MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE        CauseProtocol = 3
	CauseProtocol_CAUSE_PROTOCOL_SEMANTIC_ERROR                                    CauseProtocol = 4
	CauseProtocol_CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE CauseProtocol = 5
	CauseProtocol_CAUSE_PROTOCOL_UNSPECIFIED                                       CauseProtocol = 6
)

// Enum value maps for CauseProtocol.
var (
	CauseProtocol_name = map[int32]string{
		0: "CAUSE_PROTOCOL_TRANSFER_SYNTAX_ERROR",
		1: "CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_REJECT",
		2: "CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY",
		3: "CAUSE_PROTOCOL_MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE",
		4: "CAUSE_PROTOCOL_SEMANTIC_ERROR",
		5: "CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE",
		6: "CAUSE_PROTOCOL_UNSPECIFIED",
	}
	CauseProtocol_value = map[string]int32{
		"CAUSE_PROTOCOL_TRANSFER_SYNTAX_ERROR":                             0,
		"CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_REJECT":                      1,
		"CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY":           2,
		"CAUSE_PROTOCOL_MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE":        3,
		"CAUSE_PROTOCOL_SEMANTIC_ERROR":                                    4,
		"CAUSE_PROTOCOL_ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE": 5,
		"CAUSE_PROTOCOL_UNSPECIFIED":                                       6,
	}
)

func (x CauseProtocol) Enum() *CauseProtocol {
	p := new(CauseProtocol)
	*p = x
	return p
}

func (x CauseProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CauseProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[3].Descriptor()
}

func (CauseProtocol) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[3]
}

func (x CauseProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CauseProtocol.Descriptor instead.
func (CauseProtocol) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{3}
}

// enumerated from e2ap_v2.asn:1251
type CauseRicrequest int32

const (
	CauseRicrequest_CAUSE_RICREQUEST_RAN_FUNCTION_ID_INVALID                        CauseRicrequest = 0
	CauseRicrequest_CAUSE_RICREQUEST_ACTION_NOT_SUPPORTED                           CauseRicrequest = 1
	CauseRicrequest_CAUSE_RICREQUEST_EXCESSIVE_ACTIONS                              CauseRicrequest = 2
	CauseRicrequest_CAUSE_RICREQUEST_DUPLICATE_ACTION                               CauseRicrequest = 3
	CauseRicrequest_CAUSE_RICREQUEST_DUPLICATE_EVENT_TRIGGER                        CauseRicrequest = 4
	CauseRicrequest_CAUSE_RICREQUEST_FUNCTION_RESOURCE_LIMIT                        CauseRicrequest = 5
	CauseRicrequest_CAUSE_RICREQUEST_REQUEST_ID_UNKNOWN                             CauseRicrequest = 6
	CauseRicrequest_CAUSE_RICREQUEST_INCONSISTENT_ACTION_SUBSEQUENT_ACTION_SEQUENCE CauseRicrequest = 7
	CauseRicrequest_CAUSE_RICREQUEST_CONTROL_MESSAGE_INVALID                        CauseRicrequest = 8
	CauseRicrequest_CAUSE_RICREQUEST_RIC_CALL_PROCESS_ID_INVALID                    CauseRicrequest = 9
	CauseRicrequest_CAUSE_RICREQUEST_CONTROL_TIMER_EXPIRED                          CauseRicrequest = 10
	CauseRicrequest_CAUSE_RICREQUEST_CONTROL_FAILED_TO_EXECUTE                      CauseRicrequest = 11
	CauseRicrequest_CAUSE_RICREQUEST_SYSTEM_NOT_READY                               CauseRicrequest = 12
	CauseRicrequest_CAUSE_RICREQUEST_UNSPECIFIED                                    CauseRicrequest = 13
)

// Enum value maps for CauseRicrequest.
var (
	CauseRicrequest_name = map[int32]string{
		0:  "CAUSE_RICREQUEST_RAN_FUNCTION_ID_INVALID",
		1:  "CAUSE_RICREQUEST_ACTION_NOT_SUPPORTED",
		2:  "CAUSE_RICREQUEST_EXCESSIVE_ACTIONS",
		3:  "CAUSE_RICREQUEST_DUPLICATE_ACTION",
		4:  "CAUSE_RICREQUEST_DUPLICATE_EVENT_TRIGGER",
		5:  "CAUSE_RICREQUEST_FUNCTION_RESOURCE_LIMIT",
		6:  "CAUSE_RICREQUEST_REQUEST_ID_UNKNOWN",
		7:  "CAUSE_RICREQUEST_INCONSISTENT_ACTION_SUBSEQUENT_ACTION_SEQUENCE",
		8:  "CAUSE_RICREQUEST_CONTROL_MESSAGE_INVALID",
		9:  "CAUSE_RICREQUEST_RIC_CALL_PROCESS_ID_INVALID",
		10: "CAUSE_RICREQUEST_CONTROL_TIMER_EXPIRED",
		11: "CAUSE_RICREQUEST_CONTROL_FAILED_TO_EXECUTE",
		12: "CAUSE_RICREQUEST_SYSTEM_NOT_READY",
		13: "CAUSE_RICREQUEST_UNSPECIFIED",
	}
	CauseRicrequest_value = map[string]int32{
		"CAUSE_RICREQUEST_RAN_FUNCTION_ID_INVALID":                        0,
		"CAUSE_RICREQUEST_ACTION_NOT_SUPPORTED":                           1,
		"CAUSE_RICREQUEST_EXCESSIVE_ACTIONS":                              2,
		"CAUSE_RICREQUEST_DUPLICATE_ACTION":                               3,
		"CAUSE_RICREQUEST_DUPLICATE_EVENT_TRIGGER":                        4,
		"CAUSE_RICREQUEST_FUNCTION_RESOURCE_LIMIT":                        5,
		"CAUSE_RICREQUEST_REQUEST_ID_UNKNOWN":                             6,
		"CAUSE_RICREQUEST_INCONSISTENT_ACTION_SUBSEQUENT_ACTION_SEQUENCE": 7,
		"CAUSE_RICREQUEST_CONTROL_MESSAGE_INVALID":                        8,
		"CAUSE_RICREQUEST_RIC_CALL_PROCESS_ID_INVALID":                    9,
		"CAUSE_RICREQUEST_CONTROL_TIMER_EXPIRED":                          10,
		"CAUSE_RICREQUEST_CONTROL_FAILED_TO_EXECUTE":                      11,
		"CAUSE_RICREQUEST_SYSTEM_NOT_READY":                               12,
		"CAUSE_RICREQUEST_UNSPECIFIED":                                    13,
	}
)

func (x CauseRicrequest) Enum() *CauseRicrequest {
	p := new(CauseRicrequest)
	*p = x
	return p
}

func (x CauseRicrequest) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CauseRicrequest) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[4].Descriptor()
}

func (CauseRicrequest) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[4]
}

func (x CauseRicrequest) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CauseRicrequest.Descriptor instead.
func (CauseRicrequest) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{4}
}

// enumerated from e2ap_v2.asn:1269
type CauseRicservice int32

const (
	CauseRicservice_CAUSE_RICSERVICE_RAN_FUNCTION_NOT_SUPPORTED CauseRicservice = 0
	CauseRicservice_CAUSE_RICSERVICE_EXCESSIVE_FUNCTIONS        CauseRicservice = 1
	CauseRicservice_CAUSE_RICSERVICE_RIC_RESOURCE_LIMIT         CauseRicservice = 2
)

// Enum value maps for CauseRicservice.
var (
	CauseRicservice_name = map[int32]string{
		0: "CAUSE_RICSERVICE_RAN_FUNCTION_NOT_SUPPORTED",
		1: "CAUSE_RICSERVICE_EXCESSIVE_FUNCTIONS",
		2: "CAUSE_RICSERVICE_RIC_RESOURCE_LIMIT",
	}
	CauseRicservice_value = map[string]int32{
		"CAUSE_RICSERVICE_RAN_FUNCTION_NOT_SUPPORTED": 0,
		"CAUSE_RICSERVICE_EXCESSIVE_FUNCTIONS":        1,
		"CAUSE_RICSERVICE_RIC_RESOURCE_LIMIT":         2,
	}
)

func (x CauseRicservice) Enum() *CauseRicservice {
	p := new(CauseRicservice)
	*p = x
	return p
}

func (x CauseRicservice) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CauseRicservice) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[5].Descriptor()
}

func (CauseRicservice) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[5]
}

func (x CauseRicservice) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CauseRicservice.Descriptor instead.
func (CauseRicservice) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{5}
}

// enumerated from e2ap_v2.asn:1275
type CauseTransport int32

const (
	CauseTransport_CAUSE_TRANSPORT_UNSPECIFIED                    CauseTransport = 0
	CauseTransport_CAUSE_TRANSPORT_TRANSPORT_RESOURCE_UNAVAILABLE CauseTransport = 1
)

// Enum value maps for CauseTransport.
var (
	CauseTransport_name = map[int32]string{
		0: "CAUSE_TRANSPORT_UNSPECIFIED",
		1: "CAUSE_TRANSPORT_TRANSPORT_RESOURCE_UNAVAILABLE",
	}
	CauseTransport_value = map[string]int32{
		"CAUSE_TRANSPORT_UNSPECIFIED":                    0,
		"CAUSE_TRANSPORT_TRANSPORT_RESOURCE_UNAVAILABLE": 1,
	}
)

func (x CauseTransport) Enum() *CauseTransport {
	p := new(CauseTransport)
	*p = x
	return p
}

func (x CauseTransport) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CauseTransport) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[6].Descriptor()
}

func (CauseTransport) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[6]
}

func (x CauseTransport) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CauseTransport.Descriptor instead.
func (CauseTransport) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{6}
}

// enumerated from e2ap_v2.asn:1318
type E2NodeComponentInterfaceType int32

const (
	E2NodeComponentInterfaceType_E2NODE_COMPONENT_INTERFACE_TYPE_NG E2NodeComponentInterfaceType = 0
	E2NodeComponentInterfaceType_E2NODE_COMPONENT_INTERFACE_TYPE_XN E2NodeComponentInterfaceType = 1
	E2NodeComponentInterfaceType_E2NODE_COMPONENT_INTERFACE_TYPE_E1 E2NodeComponentInterfaceType = 2
	E2NodeComponentInterfaceType_E2NODE_COMPONENT_INTERFACE_TYPE_F1 E2NodeComponentInterfaceType = 3
	E2NodeComponentInterfaceType_E2NODE_COMPONENT_INTERFACE_TYPE_W1 E2NodeComponentInterfaceType = 4
	E2NodeComponentInterfaceType_E2NODE_COMPONENT_INTERFACE_TYPE_S1 E2NodeComponentInterfaceType = 5
	E2NodeComponentInterfaceType_E2NODE_COMPONENT_INTERFACE_TYPE_X2 E2NodeComponentInterfaceType = 6
)

// Enum value maps for E2NodeComponentInterfaceType.
var (
	E2NodeComponentInterfaceType_name = map[int32]string{
		0: "E2NODE_COMPONENT_INTERFACE_TYPE_NG",
		1: "E2NODE_COMPONENT_INTERFACE_TYPE_XN",
		2: "E2NODE_COMPONENT_INTERFACE_TYPE_E1",
		3: "E2NODE_COMPONENT_INTERFACE_TYPE_F1",
		4: "E2NODE_COMPONENT_INTERFACE_TYPE_W1",
		5: "E2NODE_COMPONENT_INTERFACE_TYPE_S1",
		6: "E2NODE_COMPONENT_INTERFACE_TYPE_X2",
	}
	E2NodeComponentInterfaceType_value = map[string]int32{
		"E2NODE_COMPONENT_INTERFACE_TYPE_NG": 0,
		"E2NODE_COMPONENT_INTERFACE_TYPE_XN": 1,
		"E2NODE_COMPONENT_INTERFACE_TYPE_E1": 2,
		"E2NODE_COMPONENT_INTERFACE_TYPE_F1": 3,
		"E2NODE_COMPONENT_INTERFACE_TYPE_W1": 4,
		"E2NODE_COMPONENT_INTERFACE_TYPE_S1": 5,
		"E2NODE_COMPONENT_INTERFACE_TYPE_X2": 6,
	}
)

func (x E2NodeComponentInterfaceType) Enum() *E2NodeComponentInterfaceType {
	p := new(E2NodeComponentInterfaceType)
	*p = x
	return p
}

func (x E2NodeComponentInterfaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (E2NodeComponentInterfaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[7].Descriptor()
}

func (E2NodeComponentInterfaceType) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[7]
}

func (x E2NodeComponentInterfaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use E2NodeComponentInterfaceType.Descriptor instead.
func (E2NodeComponentInterfaceType) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{7}
}

// enumerated from e2ap_v2.asn:1547
type RicactionType int32

const (
	RicactionType_RICACTION_TYPE_REPORT RicactionType = 0
	RicactionType_RICACTION_TYPE_INSERT RicactionType = 1
	RicactionType_RICACTION_TYPE_POLICY RicactionType = 2
)

// Enum value maps for RicactionType.
var (
	RicactionType_name = map[int32]string{
		0: "RICACTION_TYPE_REPORT",
		1: "RICACTION_TYPE_INSERT",
		2: "RICACTION_TYPE_POLICY",
	}
	RicactionType_value = map[string]int32{
		"RICACTION_TYPE_REPORT": 0,
		"RICACTION_TYPE_INSERT": 1,
		"RICACTION_TYPE_POLICY": 2,
	}
)

func (x RicactionType) Enum() *RicactionType {
	p := new(RicactionType)
	*p = x
	return p
}

func (x RicactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RicactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[8].Descriptor()
}

func (RicactionType) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[8]
}

func (x RicactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RicactionType.Descriptor instead.
func (RicactionType) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{8}
}

// enumerated from e2ap_v2.asn:1559
type RiccontrolAckRequest int32

const (
	RiccontrolAckRequest_RICCONTROL_ACK_REQUEST_NO_ACK RiccontrolAckRequest = 0
	RiccontrolAckRequest_RICCONTROL_ACK_REQUEST_ACK    RiccontrolAckRequest = 1
)

// Enum value maps for RiccontrolAckRequest.
var (
	RiccontrolAckRequest_name = map[int32]string{
		0: "RICCONTROL_ACK_REQUEST_NO_ACK",
		1: "RICCONTROL_ACK_REQUEST_ACK",
	}
	RiccontrolAckRequest_value = map[string]int32{
		"RICCONTROL_ACK_REQUEST_NO_ACK": 0,
		"RICCONTROL_ACK_REQUEST_ACK":    1,
	}
)

func (x RiccontrolAckRequest) Enum() *RiccontrolAckRequest {
	p := new(RiccontrolAckRequest)
	*p = x
	return p
}

func (x RiccontrolAckRequest) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiccontrolAckRequest) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[9].Descriptor()
}

func (RiccontrolAckRequest) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[9]
}

func (x RiccontrolAckRequest) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiccontrolAckRequest.Descriptor instead.
func (RiccontrolAckRequest) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{9}
}

// enumerated from e2ap_v2.0.1_Feb3_21.asn:1423
type RiccontrolStatus int32

const (
	RiccontrolStatus_RICCONTROL_STATUS_SUCCESS  RiccontrolStatus = 0
	RiccontrolStatus_RICCONTROL_STATUS_REJECTED RiccontrolStatus = 1
	RiccontrolStatus_RICCONTROL_STATUS_FAILED   RiccontrolStatus = 2
)

// Enum value maps for RiccontrolStatus.
var (
	RiccontrolStatus_name = map[int32]string{
		0: "RICCONTROL_STATUS_SUCCESS",
		1: "RICCONTROL_STATUS_REJECTED",
		2: "RICCONTROL_STATUS_FAILED",
	}
	RiccontrolStatus_value = map[string]int32{
		"RICCONTROL_STATUS_SUCCESS":  0,
		"RICCONTROL_STATUS_REJECTED": 1,
		"RICCONTROL_STATUS_FAILED":   2,
	}
)

func (x RiccontrolStatus) Enum() *RiccontrolStatus {
	p := new(RiccontrolStatus)
	*p = x
	return p
}

func (x RiccontrolStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RiccontrolStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[10].Descriptor()
}

func (RiccontrolStatus) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[10]
}

func (x RiccontrolStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RiccontrolStatus.Descriptor instead.
func (RiccontrolStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{10}
}

// enumerated from e2ap_v2.asn:1597
type RicindicationType int32

const (
	RicindicationType_RICINDICATION_TYPE_REPORT RicindicationType = 0
	RicindicationType_RICINDICATION_TYPE_INSERT RicindicationType = 1
)

// Enum value maps for RicindicationType.
var (
	RicindicationType_name = map[int32]string{
		0: "RICINDICATION_TYPE_REPORT",
		1: "RICINDICATION_TYPE_INSERT",
	}
	RicindicationType_value = map[string]int32{
		"RICINDICATION_TYPE_REPORT": 0,
		"RICINDICATION_TYPE_INSERT": 1,
	}
)

func (x RicindicationType) Enum() *RicindicationType {
	p := new(RicindicationType)
	*p = x
	return p
}

func (x RicindicationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RicindicationType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[11].Descriptor()
}

func (RicindicationType) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[11]
}

func (x RicindicationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RicindicationType.Descriptor instead.
func (RicindicationType) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{11}
}

// enumerated from e2ap_v2.asn:1615
type RicsubsequentActionType int32

const (
	RicsubsequentActionType_RICSUBSEQUENT_ACTION_TYPE_CONTINUE RicsubsequentActionType = 0
	RicsubsequentActionType_RICSUBSEQUENT_ACTION_TYPE_WAIT     RicsubsequentActionType = 1
)

// Enum value maps for RicsubsequentActionType.
var (
	RicsubsequentActionType_name = map[int32]string{
		0: "RICSUBSEQUENT_ACTION_TYPE_CONTINUE",
		1: "RICSUBSEQUENT_ACTION_TYPE_WAIT",
	}
	RicsubsequentActionType_value = map[string]int32{
		"RICSUBSEQUENT_ACTION_TYPE_CONTINUE": 0,
		"RICSUBSEQUENT_ACTION_TYPE_WAIT":     1,
	}
)

func (x RicsubsequentActionType) Enum() *RicsubsequentActionType {
	p := new(RicsubsequentActionType)
	*p = x
	return p
}

func (x RicsubsequentActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RicsubsequentActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[12].Descriptor()
}

func (RicsubsequentActionType) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[12]
}

func (x RicsubsequentActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RicsubsequentActionType.Descriptor instead.
func (RicsubsequentActionType) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{12}
}

// enumerated from e2ap_v2.asn:1621
type RictimeToWait int32

const (
	RictimeToWait_RICTIME_TO_WAIT_W1MS   RictimeToWait = 0
	RictimeToWait_RICTIME_TO_WAIT_W2MS   RictimeToWait = 1
	RictimeToWait_RICTIME_TO_WAIT_W5MS   RictimeToWait = 2
	RictimeToWait_RICTIME_TO_WAIT_W10MS  RictimeToWait = 3
	RictimeToWait_RICTIME_TO_WAIT_W20MS  RictimeToWait = 4
	RictimeToWait_RICTIME_TO_WAIT_W30MS  RictimeToWait = 5
	RictimeToWait_RICTIME_TO_WAIT_W40MS  RictimeToWait = 6
	RictimeToWait_RICTIME_TO_WAIT_W50MS  RictimeToWait = 7
	RictimeToWait_RICTIME_TO_WAIT_W100MS RictimeToWait = 8
	RictimeToWait_RICTIME_TO_WAIT_W200MS RictimeToWait = 9
	RictimeToWait_RICTIME_TO_WAIT_W500MS RictimeToWait = 10
	RictimeToWait_RICTIME_TO_WAIT_W1S    RictimeToWait = 11
	RictimeToWait_RICTIME_TO_WAIT_W2S    RictimeToWait = 12
	RictimeToWait_RICTIME_TO_WAIT_W5S    RictimeToWait = 13
	RictimeToWait_RICTIME_TO_WAIT_W10S   RictimeToWait = 14
	RictimeToWait_RICTIME_TO_WAIT_W20S   RictimeToWait = 15
	RictimeToWait_RICTIME_TO_WAIT_W60S   RictimeToWait = 16
)

// Enum value maps for RictimeToWait.
var (
	RictimeToWait_name = map[int32]string{
		0:  "RICTIME_TO_WAIT_W1MS",
		1:  "RICTIME_TO_WAIT_W2MS",
		2:  "RICTIME_TO_WAIT_W5MS",
		3:  "RICTIME_TO_WAIT_W10MS",
		4:  "RICTIME_TO_WAIT_W20MS",
		5:  "RICTIME_TO_WAIT_W30MS",
		6:  "RICTIME_TO_WAIT_W40MS",
		7:  "RICTIME_TO_WAIT_W50MS",
		8:  "RICTIME_TO_WAIT_W100MS",
		9:  "RICTIME_TO_WAIT_W200MS",
		10: "RICTIME_TO_WAIT_W500MS",
		11: "RICTIME_TO_WAIT_W1S",
		12: "RICTIME_TO_WAIT_W2S",
		13: "RICTIME_TO_WAIT_W5S",
		14: "RICTIME_TO_WAIT_W10S",
		15: "RICTIME_TO_WAIT_W20S",
		16: "RICTIME_TO_WAIT_W60S",
	}
	RictimeToWait_value = map[string]int32{
		"RICTIME_TO_WAIT_W1MS":   0,
		"RICTIME_TO_WAIT_W2MS":   1,
		"RICTIME_TO_WAIT_W5MS":   2,
		"RICTIME_TO_WAIT_W10MS":  3,
		"RICTIME_TO_WAIT_W20MS":  4,
		"RICTIME_TO_WAIT_W30MS":  5,
		"RICTIME_TO_WAIT_W40MS":  6,
		"RICTIME_TO_WAIT_W50MS":  7,
		"RICTIME_TO_WAIT_W100MS": 8,
		"RICTIME_TO_WAIT_W200MS": 9,
		"RICTIME_TO_WAIT_W500MS": 10,
		"RICTIME_TO_WAIT_W1S":    11,
		"RICTIME_TO_WAIT_W2S":    12,
		"RICTIME_TO_WAIT_W5S":    13,
		"RICTIME_TO_WAIT_W10S":   14,
		"RICTIME_TO_WAIT_W20S":   15,
		"RICTIME_TO_WAIT_W60S":   16,
	}
)

func (x RictimeToWait) Enum() *RictimeToWait {
	p := new(RictimeToWait)
	*p = x
	return p
}

func (x RictimeToWait) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RictimeToWait) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[13].Descriptor()
}

func (RictimeToWait) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[13]
}

func (x RictimeToWait) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RictimeToWait.Descriptor instead.
func (RictimeToWait) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{13}
}

// enumerated from e2ap_v2.asn:1645
type TimeToWait int32

const (
	TimeToWait_TIME_TO_WAIT_V1S  TimeToWait = 0
	TimeToWait_TIME_TO_WAIT_V2S  TimeToWait = 1
	TimeToWait_TIME_TO_WAIT_V5S  TimeToWait = 2
	TimeToWait_TIME_TO_WAIT_V10S TimeToWait = 3
	TimeToWait_TIME_TO_WAIT_V20S TimeToWait = 4
	TimeToWait_TIME_TO_WAIT_V60S TimeToWait = 5
)

// Enum value maps for TimeToWait.
var (
	TimeToWait_name = map[int32]string{
		0: "TIME_TO_WAIT_V1S",
		1: "TIME_TO_WAIT_V2S",
		2: "TIME_TO_WAIT_V5S",
		3: "TIME_TO_WAIT_V10S",
		4: "TIME_TO_WAIT_V20S",
		5: "TIME_TO_WAIT_V60S",
	}
	TimeToWait_value = map[string]int32{
		"TIME_TO_WAIT_V1S":  0,
		"TIME_TO_WAIT_V2S":  1,
		"TIME_TO_WAIT_V5S":  2,
		"TIME_TO_WAIT_V10S": 3,
		"TIME_TO_WAIT_V20S": 4,
		"TIME_TO_WAIT_V60S": 5,
	}
)

func (x TimeToWait) Enum() *TimeToWait {
	p := new(TimeToWait)
	*p = x
	return p
}

func (x TimeToWait) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TimeToWait) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[14].Descriptor()
}

func (TimeToWait) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[14]
}

func (x TimeToWait) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TimeToWait.Descriptor instead.
func (TimeToWait) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{14}
}

// enumerated from e2ap_v2.asn:1654
type Tnlusage int32

const (
	Tnlusage_TNLUSAGE_RIC_SERVICE      Tnlusage = 0
	Tnlusage_TNLUSAGE_SUPPORT_FUNCTION Tnlusage = 1
	Tnlusage_TNLUSAGE_BOTH             Tnlusage = 2
)

// Enum value maps for Tnlusage.
var (
	Tnlusage_name = map[int32]string{
		0: "TNLUSAGE_RIC_SERVICE",
		1: "TNLUSAGE_SUPPORT_FUNCTION",
		2: "TNLUSAGE_BOTH",
	}
	Tnlusage_value = map[string]int32{
		"TNLUSAGE_RIC_SERVICE":      0,
		"TNLUSAGE_SUPPORT_FUNCTION": 1,
		"TNLUSAGE_BOTH":             2,
	}
)

func (x Tnlusage) Enum() *Tnlusage {
	p := new(Tnlusage)
	*p = x
	return p
}

func (x Tnlusage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Tnlusage) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[15].Descriptor()
}

func (Tnlusage) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[15]
}

func (x Tnlusage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Tnlusage.Descriptor instead.
func (Tnlusage) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{15}
}

// enumerated from e2ap_v2.asn:1662
type TypeOfError int32

const (
	TypeOfError_TYPE_OF_ERROR_NOT_UNDERSTOOD TypeOfError = 0
	TypeOfError_TYPE_OF_ERROR_MISSING        TypeOfError = 1
)

// Enum value maps for TypeOfError.
var (
	TypeOfError_name = map[int32]string{
		0: "TYPE_OF_ERROR_NOT_UNDERSTOOD",
		1: "TYPE_OF_ERROR_MISSING",
	}
	TypeOfError_value = map[string]int32{
		"TYPE_OF_ERROR_NOT_UNDERSTOOD": 0,
		"TYPE_OF_ERROR_MISSING":        1,
	}
)

func (x TypeOfError) Enum() *TypeOfError {
	p := new(TypeOfError)
	*p = x
	return p
}

func (x TypeOfError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeOfError) Descriptor() protoreflect.EnumDescriptor {
	return file_api_e2ap_v2_e2ap_ies_proto_enumTypes[16].Descriptor()
}

func (TypeOfError) Type() protoreflect.EnumType {
	return &file_api_e2ap_v2_e2ap_ies_proto_enumTypes[16]
}

func (x TypeOfError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeOfError.Descriptor instead.
func (TypeOfError) EnumDescriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{16}
}

// sequence from e2ap_v2.asn:1217
// {Cause}
type Cause struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:1217
	//
	// Types that are assignable to Cause:
	//	*Cause_RicRequest
	//	*Cause_RicService
	//	*Cause_E2Node
	//	*Cause_Transport
	//	*Cause_Protocol
	//	*Cause_Misc
	Cause isCause_Cause `protobuf_oneof:"cause"`
}

func (x *Cause) Reset() {
	*x = Cause{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cause) ProtoMessage() {}

func (x *Cause) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cause.ProtoReflect.Descriptor instead.
func (*Cause) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{0}
}

func (m *Cause) GetCause() isCause_Cause {
	if m != nil {
		return m.Cause
	}
	return nil
}

func (x *Cause) GetRicRequest() CauseRicrequest {
	if x, ok := x.GetCause().(*Cause_RicRequest); ok {
		return x.RicRequest
	}
	return CauseRicrequest_CAUSE_RICREQUEST_RAN_FUNCTION_ID_INVALID
}

func (x *Cause) GetRicService() CauseRicservice {
	if x, ok := x.GetCause().(*Cause_RicService); ok {
		return x.RicService
	}
	return CauseRicservice_CAUSE_RICSERVICE_RAN_FUNCTION_NOT_SUPPORTED
}

func (x *Cause) GetE2Node() CauseE2Node {
	if x, ok := x.GetCause().(*Cause_E2Node); ok {
		return x.E2Node
	}
	return CauseE2Node_CAUSE_E2NODE_E2NODE_COMPONENT_UNKNOWN
}

func (x *Cause) GetTransport() CauseTransport {
	if x, ok := x.GetCause().(*Cause_Transport); ok {
		return x.Transport
	}
	return CauseTransport_CAUSE_TRANSPORT_UNSPECIFIED
}

func (x *Cause) GetProtocol() CauseProtocol {
	if x, ok := x.GetCause().(*Cause_Protocol); ok {
		return x.Protocol
	}
	return CauseProtocol_CAUSE_PROTOCOL_TRANSFER_SYNTAX_ERROR
}

func (x *Cause) GetMisc() CauseMisc {
	if x, ok := x.GetCause().(*Cause_Misc); ok {
		return x.Misc
	}
	return CauseMisc_CAUSE_MISC_CONTROL_PROCESSING_OVERLOAD
}

type isCause_Cause interface {
	isCause_Cause()
}

type Cause_RicRequest struct {
	// @inject_tag: aper:"choiceIdx:1,valueLB:0,valueUB:13,valueExt"
	RicRequest CauseRicrequest `protobuf:"varint,1,opt,name=ric_request,json=ricRequest,proto3,enum=e2ap.v2.CauseRicrequest,oneof" aper:"choiceIdx:1,valueLB:0,valueUB:13,valueExt"`
}

type Cause_RicService struct {
	// @inject_tag: aper:"choiceIdx:2,valueLB:0,valueUB:2,valueExt"
	RicService CauseRicservice `protobuf:"varint,2,opt,name=ric_service,json=ricService,proto3,enum=e2ap.v2.CauseRicservice,oneof" aper:"choiceIdx:2,valueLB:0,valueUB:2,valueExt"`
}

type Cause_E2Node struct {
	// @inject_tag: aper:"choiceIdx:3,valueLB:0,valueUB:0,valueExt"
	E2Node CauseE2Node `protobuf:"varint,3,opt,name=e2_node,json=e2Node,proto3,enum=e2ap.v2.CauseE2Node,oneof" aper:"choiceIdx:3,valueLB:0,valueUB:0,valueExt"`
}

type Cause_Transport struct {
	// @inject_tag: aper:"choiceIdx:4,valueLB:0,valueUB:1,valueExt"
	Transport CauseTransport `protobuf:"varint,4,opt,name=transport,proto3,enum=e2ap.v2.CauseTransport,oneof" aper:"choiceIdx:4,valueLB:0,valueUB:1,valueExt"`
}

type Cause_Protocol struct {
	// @inject_tag: aper:"choiceIdx:5,valueLB:0,valueUB:6,valueExt"
	Protocol CauseProtocol `protobuf:"varint,5,opt,name=protocol,proto3,enum=e2ap.v2.CauseProtocol,oneof" aper:"choiceIdx:5,valueLB:0,valueUB:6,valueExt"`
}

type Cause_Misc struct {
	// @inject_tag: aper:"choiceIdx:6,valueLB:0,valueUB:3,valueExt"
	Misc CauseMisc `protobuf:"varint,6,opt,name=misc,proto3,enum=e2ap.v2.CauseMisc,oneof" aper:"choiceIdx:6,valueLB:0,valueUB:3,valueExt"`
}

func (*Cause_RicRequest) isCause_Cause() {}

func (*Cause_RicService) isCause_Cause() {}

func (*Cause_E2Node) isCause_Cause() {}

func (*Cause_Transport) isCause_Cause() {}

func (*Cause_Protocol) isCause_Cause() {}

func (*Cause_Misc) isCause_Cause() {}

// sequence from e2ap_v2.asn:1285
// {CriticalityDiagnostics}
type CriticalityDiagnostics struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional"
	ProcedureCode *e2ap_commondatatypes.ProcedureCode `protobuf:"bytes,1,opt,name=procedure_code,json=procedureCode,proto3,oneof" json:"procedure_code,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:2"
	TriggeringMessage *e2ap_commondatatypes.TriggeringMessage `protobuf:"varint,2,opt,name=triggering_message,json=triggeringMessage,proto3,enum=e2ap.v2.TriggeringMessage,oneof" json:"triggering_message,omitempty" aper:"optional,valueLB:0,valueUB:2"`
	// @inject_tag: aper:"optional,valueLB:0,valueUB:2"
	ProcedureCriticality *e2ap_commondatatypes.Criticality `protobuf:"varint,3,opt,name=procedure_criticality,json=procedureCriticality,proto3,enum=e2ap.v2.Criticality,oneof" json:"procedure_criticality,omitempty" aper:"optional,valueLB:0,valueUB:2"`
	// @inject_tag: aper:"optional,valueExt"
	RicRequestorId *RicrequestId `protobuf:"bytes,4,opt,name=ric_requestor_id,json=ricRequestorID,proto3,oneof" json:"ric_requestor_id,omitempty" aper:"optional,valueExt"`
	// @inject_tag: aper:"optional"
	IEsCriticalityDiagnostics *CriticalityDiagnosticsIeList `protobuf:"bytes,5,opt,name=i_es_criticality_diagnostics,json=iEsCriticalityDiagnostics,proto3,oneof" json:"i_es_criticality_diagnostics,omitempty" aper:"optional"`
}

func (x *CriticalityDiagnostics) Reset() {
	*x = CriticalityDiagnostics{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriticalityDiagnostics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriticalityDiagnostics) ProtoMessage() {}

func (x *CriticalityDiagnostics) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriticalityDiagnostics.ProtoReflect.Descriptor instead.
func (*CriticalityDiagnostics) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{1}
}

func (x *CriticalityDiagnostics) GetProcedureCode() *e2ap_commondatatypes.ProcedureCode {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *CriticalityDiagnostics) GetTriggeringMessage() e2ap_commondatatypes.TriggeringMessage {
	if x != nil && x.TriggeringMessage != nil {
		return *x.TriggeringMessage
	}
	return e2ap_commondatatypes.TriggeringMessage(0)
}

func (x *CriticalityDiagnostics) GetProcedureCriticality() e2ap_commondatatypes.Criticality {
	if x != nil && x.ProcedureCriticality != nil {
		return *x.ProcedureCriticality
	}
	return e2ap_commondatatypes.Criticality(0)
}

func (x *CriticalityDiagnostics) GetRicRequestorId() *RicrequestId {
	if x != nil {
		return x.RicRequestorId
	}
	return nil
}

func (x *CriticalityDiagnostics) GetIEsCriticalityDiagnostics() *CriticalityDiagnosticsIeList {
	if x != nil {
		return x.IEsCriticalityDiagnostics
	}
	return nil
}

// sequence from e2ap_v2.asn:1295
// {CriticalityDiagnostics-IE-List}
type CriticalityDiagnosticsIeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt,sizeLB:1,sizeUB:256"
	Value []*CriticalityDiagnosticsIeItem `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" aper:"valueExt,sizeLB:1,sizeUB:256"`
}

func (x *CriticalityDiagnosticsIeList) Reset() {
	*x = CriticalityDiagnosticsIeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriticalityDiagnosticsIeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriticalityDiagnosticsIeList) ProtoMessage() {}

func (x *CriticalityDiagnosticsIeList) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriticalityDiagnosticsIeList.ProtoReflect.Descriptor instead.
func (*CriticalityDiagnosticsIeList) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{2}
}

func (x *CriticalityDiagnosticsIeList) GetValue() []*CriticalityDiagnosticsIeItem {
	if x != nil {
		return x.Value
	}
	return nil
}

// sequence from e2ap_v2.asn:1296
// {CriticalityDiagnostics-IE-Item}
type CriticalityDiagnosticsIeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:2"
	IEcriticality e2ap_commondatatypes.Criticality   `protobuf:"varint,1,opt,name=i_ecriticality,json=iECriticality,proto3,enum=e2ap.v2.Criticality" json:"i_ecriticality,omitempty" aper:"valueLB:0,valueUB:2"`
	IEId          *e2ap_commondatatypes.ProtocolIeId `protobuf:"bytes,2,opt,name=i_e_id,json=iE-ID,proto3" json:"i_e_id,omitempty"`
	// @inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
	TypeOfError TypeOfError `protobuf:"varint,3,opt,name=type_of_error,json=typeOfError,proto3,enum=e2ap.v2.TypeOfError" json:"type_of_error,omitempty" aper:"valueLB:0,valueUB:1,valueExt"`
}

func (x *CriticalityDiagnosticsIeItem) Reset() {
	*x = CriticalityDiagnosticsIeItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CriticalityDiagnosticsIeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CriticalityDiagnosticsIeItem) ProtoMessage() {}

func (x *CriticalityDiagnosticsIeItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CriticalityDiagnosticsIeItem.ProtoReflect.Descriptor instead.
func (*CriticalityDiagnosticsIeItem) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{3}
}

func (x *CriticalityDiagnosticsIeItem) GetIEcriticality() e2ap_commondatatypes.Criticality {
	if x != nil {
		return x.IEcriticality
	}
	return e2ap_commondatatypes.Criticality(0)
}

func (x *CriticalityDiagnosticsIeItem) GetIEId() *e2ap_commondatatypes.ProtocolIeId {
	if x != nil {
		return x.IEId
	}
	return nil
}

func (x *CriticalityDiagnosticsIeItem) GetTypeOfError() TypeOfError {
	if x != nil {
		return x.TypeOfError
	}
	return TypeOfError_TYPE_OF_ERROR_NOT_UNDERSTOOD
}

// sequence from e2ap_v2.asn:1307
// {E2nodeComponentConfiguration}
type E2NodeComponentConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	E2NodeComponentRequestPart  []byte `protobuf:"bytes,1,opt,name=e2node_component_request_part,json=e2nodeComponentRequestPart,proto3" json:"e2node_component_request_part,omitempty"`
	E2NodeComponentResponsePart []byte `protobuf:"bytes,2,opt,name=e2node_component_response_part,json=e2nodeComponentResponsePart,proto3" json:"e2node_component_response_part,omitempty"`
}

func (x *E2NodeComponentConfiguration) Reset() {
	*x = E2NodeComponentConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfiguration) ProtoMessage() {}

func (x *E2NodeComponentConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfiguration.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfiguration) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{4}
}

func (x *E2NodeComponentConfiguration) GetE2NodeComponentRequestPart() []byte {
	if x != nil {
		return x.E2NodeComponentRequestPart
	}
	return nil
}

func (x *E2NodeComponentConfiguration) GetE2NodeComponentResponsePart() []byte {
	if x != nil {
		return x.E2NodeComponentResponsePart
	}
	return nil
}

// sequence from e2ap_v2.asn:1313
// {E2nodeComponentConfigurationAck}
type E2NodeComponentConfigurationAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
	UpdateOutcome UpdateOutcome `protobuf:"varint,1,opt,name=update_outcome,json=updateOutcome,proto3,enum=e2ap.v2.UpdateOutcome" json:"update_outcome,omitempty" aper:"valueLB:0,valueUB:1,valueExt"`
	// @inject_tag: aper:"optional,choiceExt"
	FailureCause *Cause `protobuf:"bytes,2,opt,name=failure_cause,json=failureCause,proto3,oneof" json:"failure_cause,omitempty" aper:"optional,choiceExt"`
}

func (x *E2NodeComponentConfigurationAck) Reset() {
	*x = E2NodeComponentConfigurationAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentConfigurationAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentConfigurationAck) ProtoMessage() {}

func (x *E2NodeComponentConfigurationAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentConfigurationAck.ProtoReflect.Descriptor instead.
func (*E2NodeComponentConfigurationAck) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{5}
}

func (x *E2NodeComponentConfigurationAck) GetUpdateOutcome() UpdateOutcome {
	if x != nil {
		return x.UpdateOutcome
	}
	return UpdateOutcome_UPDATE_OUTCOME_SUCCESS
}

func (x *E2NodeComponentConfigurationAck) GetFailureCause() *Cause {
	if x != nil {
		return x.FailureCause
	}
	return nil
}

// sequence from e2ap_v2.asn:1321
// {E2nodeComponentID}
type E2NodeComponentId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:1321
	//
	// Types that are assignable to E2NodeComponentId:
	//	*E2NodeComponentId_E2NodeComponentInterfaceTypeNg
	//	*E2NodeComponentId_E2NodeComponentInterfaceTypeXn
	//	*E2NodeComponentId_E2NodeComponentInterfaceTypeE1
	//	*E2NodeComponentId_E2NodeComponentInterfaceTypeF1
	//	*E2NodeComponentId_E2NodeComponentInterfaceTypeW1
	//	*E2NodeComponentId_E2NodeComponentInterfaceTypeS1
	//	*E2NodeComponentId_E2NodeComponentInterfaceTypeX2
	E2NodeComponentId isE2NodeComponentId_E2NodeComponentId `protobuf_oneof:"e2node_component_id"`
}

func (x *E2NodeComponentId) Reset() {
	*x = E2NodeComponentId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentId) ProtoMessage() {}

func (x *E2NodeComponentId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentId.ProtoReflect.Descriptor instead.
func (*E2NodeComponentId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{6}
}

func (m *E2NodeComponentId) GetE2NodeComponentId() isE2NodeComponentId_E2NodeComponentId {
	if m != nil {
		return m.E2NodeComponentId
	}
	return nil
}

func (x *E2NodeComponentId) GetE2NodeComponentInterfaceTypeNg() *E2NodeComponentInterfaceNg {
	if x, ok := x.GetE2NodeComponentId().(*E2NodeComponentId_E2NodeComponentInterfaceTypeNg); ok {
		return x.E2NodeComponentInterfaceTypeNg
	}
	return nil
}

func (x *E2NodeComponentId) GetE2NodeComponentInterfaceTypeXn() *E2NodeComponentInterfaceXn {
	if x, ok := x.GetE2NodeComponentId().(*E2NodeComponentId_E2NodeComponentInterfaceTypeXn); ok {
		return x.E2NodeComponentInterfaceTypeXn
	}
	return nil
}

func (x *E2NodeComponentId) GetE2NodeComponentInterfaceTypeE1() *E2NodeComponentInterfaceE1 {
	if x, ok := x.GetE2NodeComponentId().(*E2NodeComponentId_E2NodeComponentInterfaceTypeE1); ok {
		return x.E2NodeComponentInterfaceTypeE1
	}
	return nil
}

func (x *E2NodeComponentId) GetE2NodeComponentInterfaceTypeF1() *E2NodeComponentInterfaceF1 {
	if x, ok := x.GetE2NodeComponentId().(*E2NodeComponentId_E2NodeComponentInterfaceTypeF1); ok {
		return x.E2NodeComponentInterfaceTypeF1
	}
	return nil
}

func (x *E2NodeComponentId) GetE2NodeComponentInterfaceTypeW1() *E2NodeComponentInterfaceW1 {
	if x, ok := x.GetE2NodeComponentId().(*E2NodeComponentId_E2NodeComponentInterfaceTypeW1); ok {
		return x.E2NodeComponentInterfaceTypeW1
	}
	return nil
}

func (x *E2NodeComponentId) GetE2NodeComponentInterfaceTypeS1() *E2NodeComponentInterfaceS1 {
	if x, ok := x.GetE2NodeComponentId().(*E2NodeComponentId_E2NodeComponentInterfaceTypeS1); ok {
		return x.E2NodeComponentInterfaceTypeS1
	}
	return nil
}

func (x *E2NodeComponentId) GetE2NodeComponentInterfaceTypeX2() *E2NodeComponentInterfaceX2 {
	if x, ok := x.GetE2NodeComponentId().(*E2NodeComponentId_E2NodeComponentInterfaceTypeX2); ok {
		return x.E2NodeComponentInterfaceTypeX2
	}
	return nil
}

type isE2NodeComponentId_E2NodeComponentId interface {
	isE2NodeComponentId_E2NodeComponentId()
}

type E2NodeComponentId_E2NodeComponentInterfaceTypeNg struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	E2NodeComponentInterfaceTypeNg *E2NodeComponentInterfaceNg `protobuf:"bytes,1,opt,name=e2node_component_interface_type_ng,json=e2nodeComponentInterfaceTypeNG,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type E2NodeComponentId_E2NodeComponentInterfaceTypeXn struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	E2NodeComponentInterfaceTypeXn *E2NodeComponentInterfaceXn `protobuf:"bytes,2,opt,name=e2node_component_interface_type_xn,json=e2nodeComponentInterfaceTypeXn,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

type E2NodeComponentId_E2NodeComponentInterfaceTypeE1 struct {
	// @inject_tag: aper:"choiceIdx:3,valueExt"
	E2NodeComponentInterfaceTypeE1 *E2NodeComponentInterfaceE1 `protobuf:"bytes,3,opt,name=e2node_component_interface_type_e1,json=e2nodeComponentInterfaceTypeE1,proto3,oneof" aper:"choiceIdx:3,valueExt"`
}

type E2NodeComponentId_E2NodeComponentInterfaceTypeF1 struct {
	// @inject_tag: aper:"choiceIdx:4,valueExt"
	E2NodeComponentInterfaceTypeF1 *E2NodeComponentInterfaceF1 `protobuf:"bytes,4,opt,name=e2node_component_interface_type_f1,json=e2nodeComponentInterfaceTypeF1,proto3,oneof" aper:"choiceIdx:4,valueExt"`
}

type E2NodeComponentId_E2NodeComponentInterfaceTypeW1 struct {
	// @inject_tag: aper:"choiceIdx:5,valueExt"
	E2NodeComponentInterfaceTypeW1 *E2NodeComponentInterfaceW1 `protobuf:"bytes,5,opt,name=e2node_component_interface_type_w1,json=e2nodeComponentInterfaceTypeW1,proto3,oneof" aper:"choiceIdx:5,valueExt"`
}

type E2NodeComponentId_E2NodeComponentInterfaceTypeS1 struct {
	// @inject_tag: aper:"choiceIdx:6,valueExt"
	E2NodeComponentInterfaceTypeS1 *E2NodeComponentInterfaceS1 `protobuf:"bytes,6,opt,name=e2node_component_interface_type_s1,json=e2nodeComponentInterfaceTypeS1,proto3,oneof" aper:"choiceIdx:6,valueExt"`
}

type E2NodeComponentId_E2NodeComponentInterfaceTypeX2 struct {
	// @inject_tag: aper:"choiceIdx:7,valueExt"
	E2NodeComponentInterfaceTypeX2 *E2NodeComponentInterfaceX2 `protobuf:"bytes,7,opt,name=e2node_component_interface_type_x2,json=e2nodeComponentInterfaceTypeX2,proto3,oneof" aper:"choiceIdx:7,valueExt"`
}

func (*E2NodeComponentId_E2NodeComponentInterfaceTypeNg) isE2NodeComponentId_E2NodeComponentId() {}

func (*E2NodeComponentId_E2NodeComponentInterfaceTypeXn) isE2NodeComponentId_E2NodeComponentId() {}

func (*E2NodeComponentId_E2NodeComponentInterfaceTypeE1) isE2NodeComponentId_E2NodeComponentId() {}

func (*E2NodeComponentId_E2NodeComponentInterfaceTypeF1) isE2NodeComponentId_E2NodeComponentId() {}

func (*E2NodeComponentId_E2NodeComponentInterfaceTypeW1) isE2NodeComponentId_E2NodeComponentId() {}

func (*E2NodeComponentId_E2NodeComponentInterfaceTypeS1) isE2NodeComponentId_E2NodeComponentId() {}

func (*E2NodeComponentId_E2NodeComponentInterfaceTypeX2) isE2NodeComponentId_E2NodeComponentId() {}

// sequence from e2ap_v2.asn:1332
// {E2nodeComponentInterfaceE1}
type E2NodeComponentInterfaceE1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbCuCpId *GnbCuUpId `protobuf:"bytes,1,opt,name=g_nb_cu_cp_id,json=gNB-CU-CP-ID,proto3" json:"g_nb_cu_cp_id,omitempty"`
}

func (x *E2NodeComponentInterfaceE1) Reset() {
	*x = E2NodeComponentInterfaceE1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentInterfaceE1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentInterfaceE1) ProtoMessage() {}

func (x *E2NodeComponentInterfaceE1) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentInterfaceE1.ProtoReflect.Descriptor instead.
func (*E2NodeComponentInterfaceE1) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{7}
}

func (x *E2NodeComponentInterfaceE1) GetGNbCuCpId() *GnbCuUpId {
	if x != nil {
		return x.GNbCuCpId
	}
	return nil
}

// sequence from e2ap_v2.asn:1337
// {E2nodeComponentInterfaceF1}
type E2NodeComponentInterfaceF1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GNbDuId *GnbDuId `protobuf:"bytes,1,opt,name=g_nb_du_id,json=gNB-DU-ID,proto3" json:"g_nb_du_id,omitempty"`
}

func (x *E2NodeComponentInterfaceF1) Reset() {
	*x = E2NodeComponentInterfaceF1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentInterfaceF1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentInterfaceF1) ProtoMessage() {}

func (x *E2NodeComponentInterfaceF1) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentInterfaceF1.ProtoReflect.Descriptor instead.
func (*E2NodeComponentInterfaceF1) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{8}
}

func (x *E2NodeComponentInterfaceF1) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2ap_v2.asn:1342
// {E2nodeComponentInterfaceNG}
type E2NodeComponentInterfaceNg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AmfName *e2ap_commondatatypes.Amfname `protobuf:"bytes,1,opt,name=amf_name,json=amf-name,proto3" json:"amf_name,omitempty"`
}

func (x *E2NodeComponentInterfaceNg) Reset() {
	*x = E2NodeComponentInterfaceNg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentInterfaceNg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentInterfaceNg) ProtoMessage() {}

func (x *E2NodeComponentInterfaceNg) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentInterfaceNg.ProtoReflect.Descriptor instead.
func (*E2NodeComponentInterfaceNg) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{9}
}

func (x *E2NodeComponentInterfaceNg) GetAmfName() *e2ap_commondatatypes.Amfname {
	if x != nil {
		return x.AmfName
	}
	return nil
}

// sequence from e2ap_v2.asn:1347
// {E2nodeComponentInterfaceS1}
type E2NodeComponentInterfaceS1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MmeName *e2ap_commondatatypes.Mmename `protobuf:"bytes,1,opt,name=mme_name,json=mme-name,proto3" json:"mme_name,omitempty"`
}

func (x *E2NodeComponentInterfaceS1) Reset() {
	*x = E2NodeComponentInterfaceS1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentInterfaceS1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentInterfaceS1) ProtoMessage() {}

func (x *E2NodeComponentInterfaceS1) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentInterfaceS1.ProtoReflect.Descriptor instead.
func (*E2NodeComponentInterfaceS1) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{10}
}

func (x *E2NodeComponentInterfaceS1) GetMmeName() *e2ap_commondatatypes.Mmename {
	if x != nil {
		return x.MmeName
	}
	return nil
}

// sequence from e2ap_v2.asn:1352
// {E2nodeComponentInterfaceX2}
type E2NodeComponentInterfaceX2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"optional,valueExt"
	GlobalENbId *GlobalEnbId `protobuf:"bytes,1,opt,name=global_e_nb_id,json=global-eNB-ID,proto3,oneof" json:"global_e_nb_id,omitempty" aper:"optional,valueExt"`
	// @inject_tag: aper:"optional,valueExt"
	GlobalEnGNbId *GlobalenGnbId `protobuf:"bytes,2,opt,name=global_en_g_nb_id,json=global-en-gNB-ID,proto3,oneof" json:"global_en_g_nb_id,omitempty" aper:"optional,valueExt"`
}

func (x *E2NodeComponentInterfaceX2) Reset() {
	*x = E2NodeComponentInterfaceX2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentInterfaceX2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentInterfaceX2) ProtoMessage() {}

func (x *E2NodeComponentInterfaceX2) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentInterfaceX2.ProtoReflect.Descriptor instead.
func (*E2NodeComponentInterfaceX2) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{11}
}

func (x *E2NodeComponentInterfaceX2) GetGlobalENbId() *GlobalEnbId {
	if x != nil {
		return x.GlobalENbId
	}
	return nil
}

func (x *E2NodeComponentInterfaceX2) GetGlobalEnGNbId() *GlobalenGnbId {
	if x != nil {
		return x.GlobalEnGNbId
	}
	return nil
}

// sequence from e2ap_v2.asn:1358
// {E2nodeComponentInterfaceXn}
type E2NodeComponentInterfaceXn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"choiceExt"
	GlobalNgRanNodeId *GlobalNgRannodeId `protobuf:"bytes,1,opt,name=global_ng_ran_node_id,json=global-NG-RAN-Node-ID,proto3" json:"global_ng_ran_node_id,omitempty" aper:"choiceExt"`
}

func (x *E2NodeComponentInterfaceXn) Reset() {
	*x = E2NodeComponentInterfaceXn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentInterfaceXn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentInterfaceXn) ProtoMessage() {}

func (x *E2NodeComponentInterfaceXn) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentInterfaceXn.ProtoReflect.Descriptor instead.
func (*E2NodeComponentInterfaceXn) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{12}
}

func (x *E2NodeComponentInterfaceXn) GetGlobalNgRanNodeId() *GlobalNgRannodeId {
	if x != nil {
		return x.GlobalNgRanNodeId
	}
	return nil
}

// sequence from e2ap_v2.asn:1363
// {E2nodeComponentInterfaceW1}
type E2NodeComponentInterfaceW1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NgENbDuId *NgenbDuId `protobuf:"bytes,1,opt,name=ng_e_nb_du_id,json=ng-eNB-DU-ID,proto3" json:"ng_e_nb_du_id,omitempty"`
}

func (x *E2NodeComponentInterfaceW1) Reset() {
	*x = E2NodeComponentInterfaceW1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeComponentInterfaceW1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeComponentInterfaceW1) ProtoMessage() {}

func (x *E2NodeComponentInterfaceW1) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeComponentInterfaceW1.ProtoReflect.Descriptor instead.
func (*E2NodeComponentInterfaceW1) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{13}
}

func (x *E2NodeComponentInterfaceW1) GetNgENbDuId() *NgenbDuId {
	if x != nil {
		return x.NgENbDuId
	}
	return nil
}

// sequence from e2ap_v2.asn:1372
// {ENB-ID}
type EnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:1372
	//
	// Types that are assignable to EnbId:
	//	*EnbId_MacroENbId
	//	*EnbId_HomeENbId
	//	*EnbId_ShortMacroENbId
	//	*EnbId_LongMacroENbId
	EnbId isEnbId_EnbId `protobuf_oneof:"enb_id"`
}

func (x *EnbId) Reset() {
	*x = EnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbId) ProtoMessage() {}

func (x *EnbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbId.ProtoReflect.Descriptor instead.
func (*EnbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{14}
}

func (m *EnbId) GetEnbId() isEnbId_EnbId {
	if m != nil {
		return m.EnbId
	}
	return nil
}

func (x *EnbId) GetMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_MacroENbId); ok {
		return x.MacroENbId
	}
	return nil
}

func (x *EnbId) GetHomeENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_HomeENbId); ok {
		return x.HomeENbId
	}
	return nil
}

func (x *EnbId) GetShortMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_ShortMacroENbId); ok {
		return x.ShortMacroENbId
	}
	return nil
}

func (x *EnbId) GetLongMacroENbId() *asn1.BitString {
	if x, ok := x.GetEnbId().(*EnbId_LongMacroENbId); ok {
		return x.LongMacroENbId
	}
	return nil
}

type isEnbId_EnbId interface {
	isEnbId_EnbId()
}

type EnbId_MacroENbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
	MacroENbId *asn1.BitString `protobuf:"bytes,1,opt,name=macro_e_nb_id,json=macro-eNB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:20,sizeUB:20"`
}

type EnbId_HomeENbId struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:28,sizeUB:28"
	HomeENbId *asn1.BitString `protobuf:"bytes,2,opt,name=home_e_nb_id,json=home-eNB-ID,proto3,oneof" aper:"choiceIdx:2,sizeLB:28,sizeUB:28"`
}

type EnbId_ShortMacroENbId struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:18,sizeUB:18,fromChoiceExt"
	ShortMacroENbId *asn1.BitString `protobuf:"bytes,3,opt,name=short_macro_e_nb_id,json=short-Macro-eNB-ID,proto3,oneof" aper:"choiceIdx:3,sizeLB:18,sizeUB:18,fromChoiceExt"`
}

type EnbId_LongMacroENbId struct {
	// @inject_tag: aper:"choiceIdx:4,sizeLB:21,sizeUB:21,fromChoiceExt"
	LongMacroENbId *asn1.BitString `protobuf:"bytes,4,opt,name=long_macro_e_nb_id,json=long-Macro-eNB-ID,proto3,oneof" aper:"choiceIdx:4,sizeLB:21,sizeUB:21,fromChoiceExt"`
}

func (*EnbId_MacroENbId) isEnbId_EnbId() {}

func (*EnbId_HomeENbId) isEnbId_EnbId() {}

func (*EnbId_ShortMacroENbId) isEnbId_EnbId() {}

func (*EnbId_LongMacroENbId) isEnbId_EnbId() {}

// sequence from e2ap_v2.asn:1382
// {ENB-ID-Choice}
type EnbIdChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:1382
	//
	// Types that are assignable to EnbIdChoice:
	//	*EnbIdChoice_EnbIdMacro
	//	*EnbIdChoice_EnbIdShortmacro
	//	*EnbIdChoice_EnbIdLongmacro
	EnbIdChoice isEnbIdChoice_EnbIdChoice `protobuf_oneof:"enb_id_choice"`
}

func (x *EnbIdChoice) Reset() {
	*x = EnbIdChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnbIdChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnbIdChoice) ProtoMessage() {}

func (x *EnbIdChoice) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnbIdChoice.ProtoReflect.Descriptor instead.
func (*EnbIdChoice) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{15}
}

func (m *EnbIdChoice) GetEnbIdChoice() isEnbIdChoice_EnbIdChoice {
	if m != nil {
		return m.EnbIdChoice
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdMacro() *asn1.BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdMacro); ok {
		return x.EnbIdMacro
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdShortmacro() *asn1.BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdShortmacro); ok {
		return x.EnbIdShortmacro
	}
	return nil
}

func (x *EnbIdChoice) GetEnbIdLongmacro() *asn1.BitString {
	if x, ok := x.GetEnbIdChoice().(*EnbIdChoice_EnbIdLongmacro); ok {
		return x.EnbIdLongmacro
	}
	return nil
}

type isEnbIdChoice_EnbIdChoice interface {
	isEnbIdChoice_EnbIdChoice()
}

type EnbIdChoice_EnbIdMacro struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:20,sizeUB:20"
	EnbIdMacro *asn1.BitString `protobuf:"bytes,1,opt,name=enb_id_macro,json=enb-ID-macro,proto3,oneof" aper:"choiceIdx:1,sizeLB:20,sizeUB:20"`
}

type EnbIdChoice_EnbIdShortmacro struct {
	// @inject_tag: aper:"choiceIdx:2,sizeLB:18,sizeUB:18"
	EnbIdShortmacro *asn1.BitString `protobuf:"bytes,2,opt,name=enb_id_shortmacro,json=enb-ID-shortmacro,proto3,oneof" aper:"choiceIdx:2,sizeLB:18,sizeUB:18"`
}

type EnbIdChoice_EnbIdLongmacro struct {
	// @inject_tag: aper:"choiceIdx:3,sizeLB:21,sizeUB:21"
	EnbIdLongmacro *asn1.BitString `protobuf:"bytes,3,opt,name=enb_id_longmacro,json=enb-ID-longmacro,proto3,oneof" aper:"choiceIdx:3,sizeLB:21,sizeUB:21"`
}

func (*EnbIdChoice_EnbIdMacro) isEnbIdChoice_EnbIdChoice() {}

func (*EnbIdChoice_EnbIdShortmacro) isEnbIdChoice_EnbIdChoice() {}

func (*EnbIdChoice_EnbIdLongmacro) isEnbIdChoice_EnbIdChoice() {}

// sequence from e2ap_v2.asn:1394
// {ENGNB-ID}
type EngnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:1394
	//
	// Types that are assignable to EngnbId:
	//	*EngnbId_GNbId
	EngnbId isEngnbId_EngnbId `protobuf_oneof:"engnb_id"`
}

func (x *EngnbId) Reset() {
	*x = EngnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngnbId) ProtoMessage() {}

func (x *EngnbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngnbId.ProtoReflect.Descriptor instead.
func (*EngnbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{16}
}

func (m *EngnbId) GetEngnbId() isEngnbId_EngnbId {
	if m != nil {
		return m.EngnbId
	}
	return nil
}

func (x *EngnbId) GetGNbId() *asn1.BitString {
	if x, ok := x.GetEngnbId().(*EngnbId_GNbId); ok {
		return x.GNbId
	}
	return nil
}

type isEngnbId_EngnbId interface {
	isEngnbId_EngnbId()
}

type EngnbId_GNbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
	GNbId *asn1.BitString `protobuf:"bytes,1,opt,name=g_nb_id,json=gNB-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:22,sizeUB:32"`
}

func (*EngnbId_GNbId) isEngnbId_EngnbId() {}

// sequence from e2ap_v2.asn:1401
// {GlobalE2node-ID}
type GlobalE2NodeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:1401
	//
	// Types that are assignable to GlobalE2NodeId:
	//	*GlobalE2NodeId_GNb
	//	*GlobalE2NodeId_EnGNb
	//	*GlobalE2NodeId_NgENb
	//	*GlobalE2NodeId_ENb
	GlobalE2NodeId isGlobalE2NodeId_GlobalE2NodeId `protobuf_oneof:"global_e2node_id"`
}

func (x *GlobalE2NodeId) Reset() {
	*x = GlobalE2NodeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalE2NodeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalE2NodeId) ProtoMessage() {}

func (x *GlobalE2NodeId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalE2NodeId.ProtoReflect.Descriptor instead.
func (*GlobalE2NodeId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{17}
}

func (m *GlobalE2NodeId) GetGlobalE2NodeId() isGlobalE2NodeId_GlobalE2NodeId {
	if m != nil {
		return m.GlobalE2NodeId
	}
	return nil
}

func (x *GlobalE2NodeId) GetGNb() *GlobalE2NodeGnbId {
	if x, ok := x.GetGlobalE2NodeId().(*GlobalE2NodeId_GNb); ok {
		return x.GNb
	}
	return nil
}

func (x *GlobalE2NodeId) GetEnGNb() *GlobalE2NodeEnGnbId {
	if x, ok := x.GetGlobalE2NodeId().(*GlobalE2NodeId_EnGNb); ok {
		return x.EnGNb
	}
	return nil
}

func (x *GlobalE2NodeId) GetNgENb() *GlobalE2NodeNgEnbId {
	if x, ok := x.GetGlobalE2NodeId().(*GlobalE2NodeId_NgENb); ok {
		return x.NgENb
	}
	return nil
}

func (x *GlobalE2NodeId) GetENb() *GlobalE2NodeEnbId {
	if x, ok := x.GetGlobalE2NodeId().(*GlobalE2NodeId_ENb); ok {
		return x.ENb
	}
	return nil
}

type isGlobalE2NodeId_GlobalE2NodeId interface {
	isGlobalE2NodeId_GlobalE2NodeId()
}

type GlobalE2NodeId_GNb struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	GNb *GlobalE2NodeGnbId `protobuf:"bytes,1,opt,name=g_nb,json=gNB,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type GlobalE2NodeId_EnGNb struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	EnGNb *GlobalE2NodeEnGnbId `protobuf:"bytes,2,opt,name=en_g_nb,json=en-gNB,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

type GlobalE2NodeId_NgENb struct {
	// @inject_tag: aper:"choiceIdx:3,valueExt"
	NgENb *GlobalE2NodeNgEnbId `protobuf:"bytes,3,opt,name=ng_e_nb,json=ng-eNB,proto3,oneof" aper:"choiceIdx:3,valueExt"`
}

type GlobalE2NodeId_ENb struct {
	// @inject_tag: aper:"choiceIdx:4,valueExt"
	ENb *GlobalE2NodeEnbId `protobuf:"bytes,4,opt,name=e_nb,json=eNB,proto3,oneof" aper:"choiceIdx:4,valueExt"`
}

func (*GlobalE2NodeId_GNb) isGlobalE2NodeId_GlobalE2NodeId() {}

func (*GlobalE2NodeId_EnGNb) isGlobalE2NodeId_GlobalE2NodeId() {}

func (*GlobalE2NodeId_NgENb) isGlobalE2NodeId_GlobalE2NodeId() {}

func (*GlobalE2NodeId_ENb) isGlobalE2NodeId_GlobalE2NodeId() {}

// sequence from e2ap_v2.asn:1409
// {GlobalE2node-en-gNB-ID}
type GlobalE2NodeEnGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	GlobalEnGNbId *GlobalenGnbId `protobuf:"bytes,1,opt,name=global_en_g_nb_id,json=global-en-gNB-ID,proto3" json:"global_en_g_nb_id,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"optional"
	EnGNbCuUpId *GnbCuUpId `protobuf:"bytes,2,opt,name=en_g_nb_cu_up_id,json=en-gNB-CU-UP-ID,proto3,oneof" json:"en_g_nb_cu_up_id,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	EnGNbDuId *GnbDuId `protobuf:"bytes,3,opt,name=en_g_nb_du_id,json=en-gNB-DU-ID,proto3,oneof" json:"en_g_nb_du_id,omitempty" aper:"optional"`
}

func (x *GlobalE2NodeEnGnbId) Reset() {
	*x = GlobalE2NodeEnGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalE2NodeEnGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalE2NodeEnGnbId) ProtoMessage() {}

func (x *GlobalE2NodeEnGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalE2NodeEnGnbId.ProtoReflect.Descriptor instead.
func (*GlobalE2NodeEnGnbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{18}
}

func (x *GlobalE2NodeEnGnbId) GetGlobalEnGNbId() *GlobalenGnbId {
	if x != nil {
		return x.GlobalEnGNbId
	}
	return nil
}

func (x *GlobalE2NodeEnGnbId) GetEnGNbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.EnGNbCuUpId
	}
	return nil
}

func (x *GlobalE2NodeEnGnbId) GetEnGNbDuId() *GnbDuId {
	if x != nil {
		return x.EnGNbDuId
	}
	return nil
}

// sequence from e2ap_v2.asn:1415
// {GlobalE2node-eNB-ID}
type GlobalE2NodeEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	GlobalENbId *GlobalEnbId `protobuf:"bytes,1,opt,name=global_e_nb_id,json=global-eNB-ID,proto3" json:"global_e_nb_id,omitempty" aper:"valueExt"`
}

func (x *GlobalE2NodeEnbId) Reset() {
	*x = GlobalE2NodeEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalE2NodeEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalE2NodeEnbId) ProtoMessage() {}

func (x *GlobalE2NodeEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalE2NodeEnbId.ProtoReflect.Descriptor instead.
func (*GlobalE2NodeEnbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{19}
}

func (x *GlobalE2NodeEnbId) GetGlobalENbId() *GlobalEnbId {
	if x != nil {
		return x.GlobalENbId
	}
	return nil
}

// sequence from e2ap_v2.asn:1419
// {GlobalE2node-gNB-ID}
type GlobalE2NodeGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	GlobalGNbId *GlobalgNbId `protobuf:"bytes,1,opt,name=global_g_nb_id,json=global-gNB-ID,proto3" json:"global_g_nb_id,omitempty" aper:"valueExt"`
	// @inject_tag: aper:"optional,valueExt"
	GlobalEnGNbId *GlobalenGnbId `protobuf:"bytes,2,opt,name=global_en_g_nb_id,json=global-en-gNB-ID,proto3,oneof" json:"global_en_g_nb_id,omitempty" aper:"optional,valueExt"`
	// @inject_tag: aper:"optional"
	GNbCuUpId *GnbCuUpId `protobuf:"bytes,3,opt,name=g_nb_cu_up_id,json=gNB-CU-UP-ID,proto3,oneof" json:"g_nb_cu_up_id,omitempty" aper:"optional"`
	// @inject_tag: aper:"optional"
	GNbDuId *GnbDuId `protobuf:"bytes,4,opt,name=g_nb_du_id,json=gNB-DU-ID,proto3,oneof" json:"g_nb_du_id,omitempty" aper:"optional"`
}

func (x *GlobalE2NodeGnbId) Reset() {
	*x = GlobalE2NodeGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalE2NodeGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalE2NodeGnbId) ProtoMessage() {}

func (x *GlobalE2NodeGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalE2NodeGnbId.ProtoReflect.Descriptor instead.
func (*GlobalE2NodeGnbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{20}
}

func (x *GlobalE2NodeGnbId) GetGlobalGNbId() *GlobalgNbId {
	if x != nil {
		return x.GlobalGNbId
	}
	return nil
}

func (x *GlobalE2NodeGnbId) GetGlobalEnGNbId() *GlobalenGnbId {
	if x != nil {
		return x.GlobalEnGNbId
	}
	return nil
}

func (x *GlobalE2NodeGnbId) GetGNbCuUpId() *GnbCuUpId {
	if x != nil {
		return x.GNbCuUpId
	}
	return nil
}

func (x *GlobalE2NodeGnbId) GetGNbDuId() *GnbDuId {
	if x != nil {
		return x.GNbDuId
	}
	return nil
}

// sequence from e2ap_v2.asn:1426
// {GlobalE2node-ng-eNB-ID}
type GlobalE2NodeNgEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GlobalNgENbId *GlobalngeNbId `protobuf:"bytes,1,opt,name=global_ng_e_nb_id,json=global-ng-eNB-ID,proto3" json:"global_ng_e_nb_id,omitempty"`
	// @inject_tag: aper:"optional,valueExt"
	GlobalENbId *GlobalEnbId `protobuf:"bytes,2,opt,name=global_e_nb_id,json=global-eNB-ID,proto3,oneof" json:"global_e_nb_id,omitempty" aper:"optional,valueExt"`
	// @inject_tag: aper:"optional"
	NgEnbDuId *NgenbDuId `protobuf:"bytes,3,opt,name=ng_enb_du_id,json=ngENB-DU-ID,proto3,oneof" json:"ng_enb_du_id,omitempty" aper:"optional"`
}

func (x *GlobalE2NodeNgEnbId) Reset() {
	*x = GlobalE2NodeNgEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalE2NodeNgEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalE2NodeNgEnbId) ProtoMessage() {}

func (x *GlobalE2NodeNgEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalE2NodeNgEnbId.ProtoReflect.Descriptor instead.
func (*GlobalE2NodeNgEnbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{21}
}

func (x *GlobalE2NodeNgEnbId) GetGlobalNgENbId() *GlobalngeNbId {
	if x != nil {
		return x.GlobalNgENbId
	}
	return nil
}

func (x *GlobalE2NodeNgEnbId) GetGlobalENbId() *GlobalEnbId {
	if x != nil {
		return x.GlobalENbId
	}
	return nil
}

func (x *GlobalE2NodeNgEnbId) GetNgEnbDuId() *NgenbDuId {
	if x != nil {
		return x.NgEnbDuId
	}
	return nil
}

// sequence from e2ap_v2.asn:1437
// {GlobalENB-ID}
type GlobalEnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *e2ap_commondatatypes.PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	// @inject_tag: aper:"choiceExt"
	ENbId *EnbId `protobuf:"bytes,2,opt,name=e_nb_id,json=eNB-ID,proto3" json:"e_nb_id,omitempty" aper:"choiceExt"`
}

func (x *GlobalEnbId) Reset() {
	*x = GlobalEnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalEnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalEnbId) ProtoMessage() {}

func (x *GlobalEnbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalEnbId.ProtoReflect.Descriptor instead.
func (*GlobalEnbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{22}
}

func (x *GlobalEnbId) GetPLmnIdentity() *e2ap_commondatatypes.PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalEnbId) GetENbId() *EnbId {
	if x != nil {
		return x.ENbId
	}
	return nil
}

// sequence from e2ap_v2.asn:1446
// {GlobalenGNB-ID}
type GlobalenGnbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *e2ap_commondatatypes.PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	// @inject_tag: aper:"choiceExt"
	GNbId *EngnbId `protobuf:"bytes,2,opt,name=g_nb_id,json=gNB-ID,proto3" json:"g_nb_id,omitempty" aper:"choiceExt"`
}

func (x *GlobalenGnbId) Reset() {
	*x = GlobalenGnbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalenGnbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalenGnbId) ProtoMessage() {}

func (x *GlobalenGnbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalenGnbId.ProtoReflect.Descriptor instead.
func (*GlobalenGnbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{23}
}

func (x *GlobalenGnbId) GetPLmnIdentity() *e2ap_commondatatypes.PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalenGnbId) GetGNbId() *EngnbId {
	if x != nil {
		return x.GNbId
	}
	return nil
}

// sequence from e2ap_v2.asn:1454
// {GlobalgNB-ID}
type GlobalgNbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *e2ap_commondatatypes.PlmnIdentity `protobuf:"bytes,1,opt,name=plmn_id,json=plmn-id,proto3" json:"plmn_id,omitempty"`
	// @inject_tag: aper:"choiceExt"
	GnbId *GnbIdChoice `protobuf:"bytes,2,opt,name=gnb_id,json=gnb-id,proto3" json:"gnb_id,omitempty" aper:"choiceExt"`
}

func (x *GlobalgNbId) Reset() {
	*x = GlobalgNbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalgNbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalgNbId) ProtoMessage() {}

func (x *GlobalgNbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalgNbId.ProtoReflect.Descriptor instead.
func (*GlobalgNbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{24}
}

func (x *GlobalgNbId) GetPlmnId() *e2ap_commondatatypes.PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *GlobalgNbId) GetGnbId() *GnbIdChoice {
	if x != nil {
		return x.GnbId
	}
	return nil
}

// sequence from e2ap_v2.asn:1464
// {GlobalngeNB-ID}
type GlobalngeNbId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlmnId *e2ap_commondatatypes.PlmnIdentity `protobuf:"bytes,1,opt,name=plmn_id,json=plmn-id,proto3" json:"plmn_id,omitempty"`
	// @inject_tag: aper:"choiceExt"
	EnbId *EnbIdChoice `protobuf:"bytes,2,opt,name=enb_id,json=enb-id,proto3" json:"enb_id,omitempty" aper:"choiceExt"`
}

func (x *GlobalngeNbId) Reset() {
	*x = GlobalngeNbId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalngeNbId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalngeNbId) ProtoMessage() {}

func (x *GlobalngeNbId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalngeNbId.ProtoReflect.Descriptor instead.
func (*GlobalngeNbId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{25}
}

func (x *GlobalngeNbId) GetPlmnId() *e2ap_commondatatypes.PlmnIdentity {
	if x != nil {
		return x.PlmnId
	}
	return nil
}

func (x *GlobalngeNbId) GetEnbId() *EnbIdChoice {
	if x != nil {
		return x.EnbId
	}
	return nil
}

// sequence from e2ap_v2.asn:1475
// {GlobalNG-RANNode-ID}
type GlobalNgRannodeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:1475
	//
	// Types that are assignable to GlobalNgRannodeId:
	//	*GlobalNgRannodeId_GNb
	//	*GlobalNgRannodeId_NgENb
	GlobalNgRannodeId isGlobalNgRannodeId_GlobalNgRannodeId `protobuf_oneof:"global_ng_rannode_id"`
}

func (x *GlobalNgRannodeId) Reset() {
	*x = GlobalNgRannodeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalNgRannodeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalNgRannodeId) ProtoMessage() {}

func (x *GlobalNgRannodeId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalNgRannodeId.ProtoReflect.Descriptor instead.
func (*GlobalNgRannodeId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{26}
}

func (m *GlobalNgRannodeId) GetGlobalNgRannodeId() isGlobalNgRannodeId_GlobalNgRannodeId {
	if m != nil {
		return m.GlobalNgRannodeId
	}
	return nil
}

func (x *GlobalNgRannodeId) GetGNb() *GlobalgNbId {
	if x, ok := x.GetGlobalNgRannodeId().(*GlobalNgRannodeId_GNb); ok {
		return x.GNb
	}
	return nil
}

func (x *GlobalNgRannodeId) GetNgENb() *GlobalngeNbId {
	if x, ok := x.GetGlobalNgRannodeId().(*GlobalNgRannodeId_NgENb); ok {
		return x.NgENb
	}
	return nil
}

type isGlobalNgRannodeId_GlobalNgRannodeId interface {
	isGlobalNgRannodeId_GlobalNgRannodeId()
}

type GlobalNgRannodeId_GNb struct {
	// @inject_tag: aper:"choiceIdx:1,valueExt"
	GNb *GlobalgNbId `protobuf:"bytes,1,opt,name=g_nb,json=gNB,proto3,oneof" aper:"choiceIdx:1,valueExt"`
}

type GlobalNgRannodeId_NgENb struct {
	// @inject_tag: aper:"choiceIdx:2,valueExt"
	NgENb *GlobalngeNbId `protobuf:"bytes,2,opt,name=ng_e_nb,json=ng-eNB,proto3,oneof" aper:"choiceIdx:2,valueExt"`
}

func (*GlobalNgRannodeId_GNb) isGlobalNgRannodeId_GlobalNgRannodeId() {}

func (*GlobalNgRannodeId_NgENb) isGlobalNgRannodeId_GlobalNgRannodeId() {}

// sequence from e2ap_v2.asn:1481
// {GlobalRIC-ID}
type GlobalRicId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PLmnIdentity *e2ap_commondatatypes.PlmnIdentity `protobuf:"bytes,1,opt,name=p_lmn_identity,json=pLMN-Identity,proto3" json:"p_lmn_identity,omitempty"`
	// @inject_tag: aper:"sizeLB:20,sizeUB:20"
	RicId *asn1.BitString `protobuf:"bytes,2,opt,name=ric_id,json=ric-ID,proto3" json:"ric_id,omitempty" aper:"sizeLB:20,sizeUB:20"`
}

func (x *GlobalRicId) Reset() {
	*x = GlobalRicId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GlobalRicId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalRicId) ProtoMessage() {}

func (x *GlobalRicId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalRicId.ProtoReflect.Descriptor instead.
func (*GlobalRicId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{27}
}

func (x *GlobalRicId) GetPLmnIdentity() *e2ap_commondatatypes.PlmnIdentity {
	if x != nil {
		return x.PLmnIdentity
	}
	return nil
}

func (x *GlobalRicId) GetRicId() *asn1.BitString {
	if x != nil {
		return x.RicId
	}
	return nil
}

// range of Integer from e2ap_v2.asn:1489
// {GNB-CU-UP-ID}
type GnbCuUpId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735"`
}

func (x *GnbCuUpId) Reset() {
	*x = GnbCuUpId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbCuUpId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbCuUpId) ProtoMessage() {}

func (x *GnbCuUpId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbCuUpId.ProtoReflect.Descriptor instead.
func (*GnbCuUpId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{28}
}

func (x *GnbCuUpId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2ap_v2.asn:1490
// {GNB-DU-ID}
type GnbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735"`
}

func (x *GnbDuId) Reset() {
	*x = GnbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbDuId) ProtoMessage() {}

func (x *GnbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbDuId.ProtoReflect.Descriptor instead.
func (*GnbDuId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{29}
}

func (x *GnbDuId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2ap_v2.asn:1496
// {GNB-ID-Choice}
type GnbIdChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:1496
	//
	// Types that are assignable to GnbIdChoice:
	//	*GnbIdChoice_GnbId
	GnbIdChoice isGnbIdChoice_GnbIdChoice `protobuf_oneof:"gnb_id_choice"`
}

func (x *GnbIdChoice) Reset() {
	*x = GnbIdChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnbIdChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnbIdChoice) ProtoMessage() {}

func (x *GnbIdChoice) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnbIdChoice.ProtoReflect.Descriptor instead.
func (*GnbIdChoice) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{30}
}

func (m *GnbIdChoice) GetGnbIdChoice() isGnbIdChoice_GnbIdChoice {
	if m != nil {
		return m.GnbIdChoice
	}
	return nil
}

func (x *GnbIdChoice) GetGnbId() *asn1.BitString {
	if x, ok := x.GetGnbIdChoice().(*GnbIdChoice_GnbId); ok {
		return x.GnbId
	}
	return nil
}

type isGnbIdChoice_GnbIdChoice interface {
	isGnbIdChoice_GnbIdChoice()
}

type GnbIdChoice_GnbId struct {
	// @inject_tag: aper:"choiceIdx:1,sizeLB:22,sizeUB:32"
	GnbId *asn1.BitString `protobuf:"bytes,1,opt,name=gnb_id,json=gnb-ID,proto3,oneof" aper:"choiceIdx:1,sizeLB:22,sizeUB:32"`
}

func (*GnbIdChoice_GnbId) isGnbIdChoice_GnbIdChoice() {}

// range of Integer from e2ap_v2.asn:1516
// {NGENB-DU-ID}
type NgenbDuId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:68719476735"
	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:68719476735"`
}

func (x *NgenbDuId) Reset() {
	*x = NgenbDuId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NgenbDuId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NgenbDuId) ProtoMessage() {}

func (x *NgenbDuId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NgenbDuId.ProtoReflect.Descriptor instead.
func (*NgenbDuId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{31}
}

func (x *NgenbDuId) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2ap_v2.asn:1533
// {RANfunctionID}
type RanfunctionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4095"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4095"`
}

func (x *RanfunctionId) Reset() {
	*x = RanfunctionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionId) ProtoMessage() {}

func (x *RanfunctionId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionId.ProtoReflect.Descriptor instead.
func (*RanfunctionId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{32}
}

func (x *RanfunctionId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2ap_v2.asn:1537
// {RANfunctionRevision}
type RanfunctionRevision struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:4095"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:4095"`
}

func (x *RanfunctionRevision) Reset() {
	*x = RanfunctionRevision{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RanfunctionRevision) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RanfunctionRevision) ProtoMessage() {}

func (x *RanfunctionRevision) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RanfunctionRevision.ProtoReflect.Descriptor instead.
func (*RanfunctionRevision) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{33}
}

func (x *RanfunctionRevision) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2ap_v2.asn:1544
// {RICactionID}
type RicactionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:255"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:255"`
}

func (x *RicactionId) Reset() {
	*x = RicactionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicactionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicactionId) ProtoMessage() {}

func (x *RicactionId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicactionId.ProtoReflect.Descriptor instead.
func (*RicactionId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{34}
}

func (x *RicactionId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// range of Integer from e2ap_v2.asn:1594
// {RICindicationSN}
type RicindicationSn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:65535"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:65535"`
}

func (x *RicindicationSn) Reset() {
	*x = RicindicationSn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicindicationSn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicindicationSn) ProtoMessage() {}

func (x *RicindicationSn) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicindicationSn.ProtoReflect.Descriptor instead.
func (*RicindicationSn) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{35}
}

func (x *RicindicationSn) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

// sequence from e2ap_v2.asn:1603
// {RICrequestID}
type RicrequestId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:65535"
	RicRequestorId int32 `protobuf:"varint,1,opt,name=ric_requestor_id,json=ricRequestorID,proto3" json:"ric_requestor_id,omitempty" aper:"valueLB:0,valueUB:65535"`
	// @inject_tag: aper:"valueLB:0,valueUB:65535"
	RicInstanceId int32 `protobuf:"varint,2,opt,name=ric_instance_id,json=ricInstanceID,proto3" json:"ric_instance_id,omitempty" aper:"valueLB:0,valueUB:65535"`
}

func (x *RicrequestId) Reset() {
	*x = RicrequestId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicrequestId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicrequestId) ProtoMessage() {}

func (x *RicrequestId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicrequestId.ProtoReflect.Descriptor instead.
func (*RicrequestId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{36}
}

func (x *RicrequestId) GetRicRequestorId() int32 {
	if x != nil {
		return x.RicRequestorId
	}
	return 0
}

func (x *RicrequestId) GetRicInstanceId() int32 {
	if x != nil {
		return x.RicInstanceId
	}
	return 0
}

// sequence from e2ap_v2.asn:1609
// {RICsubsequentAction}
type RicsubsequentAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:1,valueExt"
	RicSubsequentActionType RicsubsequentActionType `protobuf:"varint,1,opt,name=ric_subsequent_action_type,json=ricSubsequentActionType,proto3,enum=e2ap.v2.RicsubsequentActionType" json:"ric_subsequent_action_type,omitempty" aper:"valueLB:0,valueUB:1,valueExt"`
	// @inject_tag: aper:"valueLB:0,valueUB:16,valueExt"
	RicTimeToWait RictimeToWait `protobuf:"varint,2,opt,name=ric_time_to_wait,json=ricTimeToWait,proto3,enum=e2ap.v2.RictimeToWait" json:"ric_time_to_wait,omitempty" aper:"valueLB:0,valueUB:16,valueExt"`
}

func (x *RicsubsequentAction) Reset() {
	*x = RicsubsequentAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicsubsequentAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicsubsequentAction) ProtoMessage() {}

func (x *RicsubsequentAction) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicsubsequentAction.ProtoReflect.Descriptor instead.
func (*RicsubsequentAction) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{37}
}

func (x *RicsubsequentAction) GetRicSubsequentActionType() RicsubsequentActionType {
	if x != nil {
		return x.RicSubsequentActionType
	}
	return RicsubsequentActionType_RICSUBSEQUENT_ACTION_TYPE_CONTINUE
}

func (x *RicsubsequentAction) GetRicTimeToWait() RictimeToWait {
	if x != nil {
		return x.RicTimeToWait
	}
	return RictimeToWait_RICTIME_TO_WAIT_W1MS
}

// sequence from e2ap_v2.asn:1649
// {TNLinformation}
type Tnlinformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"sizeLB:1,sizeUB:160,sizeExt"
	TnlAddress *asn1.BitString `protobuf:"bytes,1,opt,name=tnl_address,json=tnlAddress,proto3" json:"tnl_address,omitempty" aper:"sizeLB:1,sizeUB:160,sizeExt"`
	// @inject_tag: aper:"optional,sizeLB:16,sizeUB:16"
	TnlPort *asn1.BitString `protobuf:"bytes,2,opt,name=tnl_port,json=tnlPort,proto3,oneof" json:"tnl_port,omitempty" aper:"optional,sizeLB:16,sizeUB:16"`
}

func (x *Tnlinformation) Reset() {
	*x = Tnlinformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tnlinformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tnlinformation) ProtoMessage() {}

func (x *Tnlinformation) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tnlinformation.ProtoReflect.Descriptor instead.
func (*Tnlinformation) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{38}
}

func (x *Tnlinformation) GetTnlAddress() *asn1.BitString {
	if x != nil {
		return x.TnlAddress
	}
	return nil
}

func (x *Tnlinformation) GetTnlPort() *asn1.BitString {
	if x != nil {
		return x.TnlPort
	}
	return nil
}

// range of Integer from e2ap_v2.asn:1656
// {TransactionID}
type TransactionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueLB:0,valueUB:255,valueExt"
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" aper:"valueLB:0,valueUB:255,valueExt"`
}

func (x *TransactionId) Reset() {
	*x = TransactionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionId) ProtoMessage() {}

func (x *TransactionId) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_ies_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionId.ProtoReflect.Descriptor instead.
func (*TransactionId) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP(), []int{39}
}

func (x *TransactionId) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_api_e2ap_v2_e2ap_ies_proto protoreflect.FileDescriptor

var file_api_e2ap_v2_e2ap_ies_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32,
	0x61, 0x70, 0x5f, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x1a, 0x22, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65,
	0x32, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x32, 0x61, 0x70, 0x2f,
	0x76, 0x32, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x61, 0x73, 0x6e, 0x31, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x02, 0x0a, 0x05, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x0b, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61,
	0x75, 0x73, 0x65, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x72, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x65,
	0x32, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x45, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x48, 0x00, 0x52, 0x06, 0x65, 0x32, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x09,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x48,
	0x00, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x6d,
	0x69, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x4d, 0x69, 0x73, 0x63, 0x48, 0x00, 0x52,
	0x04, 0x6d, 0x69, 0x73, 0x63, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x22, 0xa9,
	0x04, 0x0a, 0x16, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a,
	0x12, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x11, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4e, 0x0a,
	0x15, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x48, 0x02, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x43,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a,
	0x10, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x48, 0x03,
	0x52, 0x0e, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x6b, 0x0a, 0x1c, 0x69, 0x5f, 0x65, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x48, 0x04, 0x52, 0x19, 0x69, 0x45, 0x73, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x18, 0x0a, 0x16, 0x5f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x1f, 0x0a, 0x1d, 0x5f, 0x69, 0x5f,
	0x65, 0x73, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x22, 0x5b, 0x0a, 0x1c, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x49, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x73, 0x49, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x49, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a, 0x0e, 0x69, 0x5f, 0x65, 0x63,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x69, 0x45, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x06, 0x69, 0x5f, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x49, 0x65, 0x49, 0x64, 0x52, 0x05, 0x69, 0x45,
	0x2d, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6f, 0x66, 0x5f, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa6, 0x01,
	0x0a, 0x1c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41,
	0x0a, 0x1d, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x12, 0x43, 0x0a, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1b, 0x65, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x61, 0x72, 0x74, 0x22, 0xac, 0x01, 0x0a, 0x1f, 0x45, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x3d, 0x0a, 0x0e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0d, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x43, 0x61, 0x75, 0x73, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f,
	0x63, 0x61, 0x75, 0x73, 0x65, 0x22, 0xcf, 0x06, 0x0a, 0x11, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x71, 0x0a, 0x22, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x67, 0x48, 0x00, 0x52, 0x1e,
	0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x47, 0x12, 0x71,
	0x0a, 0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x78, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x58, 0x6e, 0x48,
	0x00, 0x52, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x58,
	0x6e, 0x12, 0x71, 0x0a, 0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x45, 0x31, 0x48, 0x00, 0x52, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x31, 0x12, 0x71, 0x0a, 0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x46, 0x31, 0x48, 0x00, 0x52, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x46, 0x31, 0x12, 0x71, 0x0a, 0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x77, 0x31, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x57, 0x31, 0x48, 0x00, 0x52, 0x1e, 0x65, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x57, 0x31, 0x12, 0x71, 0x0a, 0x22, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x31,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x31, 0x48, 0x00, 0x52, 0x1e, 0x65,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x31, 0x12, 0x71, 0x0a,
	0x22, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x78, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x58, 0x32, 0x48, 0x00,
	0x52, 0x1e, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x58, 0x32,
	0x42, 0x15, 0x0a, 0x13, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x1a, 0x45, 0x32, 0x6e, 0x6f, 0x64,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x45, 0x31, 0x12, 0x37, 0x0a, 0x0d, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75,
	0x5f, 0x63, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49, 0x64,
	0x52, 0x0c, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x43, 0x50, 0x2d, 0x49, 0x44, 0x22, 0x4d,
	0x0a, 0x1a, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x46, 0x31, 0x12, 0x2f, 0x0a, 0x0a,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75,
	0x49, 0x64, 0x52, 0x09, 0x67, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44, 0x22, 0x4a, 0x0a,
	0x1a, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x67, 0x12, 0x2c, 0x0a, 0x08, 0x61,
	0x6d, 0x66, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x41, 0x6d, 0x66, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x08, 0x61, 0x6d, 0x66, 0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x1a, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x53, 0x31, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x6d, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x4d, 0x6d, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6d, 0x65,
	0x2d, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd1, 0x01, 0x0a, 0x1a, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x58, 0x32, 0x12, 0x40, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65,
	0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x65, 0x4e, 0x42,
	0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x01, 0x52, 0x10, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x2d, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x5f, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65,
	0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22, 0x6e, 0x0a, 0x1a, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x58, 0x6e, 0x12, 0x50, 0x0a, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x52, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x52, 0x15, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x4e, 0x47, 0x2d, 0x52, 0x41,
	0x4e, 0x2d, 0x4e, 0x6f, 0x64, 0x65, 0x2d, 0x49, 0x44, 0x22, 0x55, 0x0a, 0x1a, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x57, 0x31, 0x12, 0x37, 0x0a, 0x0d, 0x6e, 0x67, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x67, 0x65, 0x6e, 0x62, 0x44, 0x75,
	0x49, 0x64, 0x52, 0x0c, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44,
	0x22, 0x91, 0x02, 0x0a, 0x05, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x45,
	0x0a, 0x13, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f,
	0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73,
	0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48,
	0x00, 0x52, 0x12, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x2d, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x2d, 0x65,
	0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12, 0x43, 0x0a, 0x12, 0x6c, 0x6f, 0x6e, 0x67, 0x5f, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x6f, 0x6e, 0x67, 0x2d, 0x4d, 0x61,
	0x63, 0x72, 0x6f, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x43, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x6d,
	0x61, 0x63, 0x72, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x0c, 0x65, 0x6e, 0x62, 0x2d, 0x49, 0x44, 0x2d, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x12, 0x42,
	0x0a, 0x11, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6d, 0x61,
	0x63, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x11, 0x65, 0x6e, 0x62, 0x2d, 0x49, 0x44, 0x2d, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6d, 0x61, 0x63,
	0x72, 0x6f, 0x12, 0x40, 0x0a, 0x10, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x6f, 0x6e,
	0x67, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61,
	0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x62, 0x2d, 0x49, 0x44, 0x2d, 0x6c, 0x6f, 0x6e, 0x67, 0x6d,
	0x61, 0x63, 0x72, 0x6f, 0x42, 0x0f, 0x0a, 0x0d, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x5f, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x44, 0x0a, 0x07, 0x45, 0x6e, 0x67, 0x6e, 0x62, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x06, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x42,
	0x0a, 0x0a, 0x08, 0x65, 0x6e, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x0e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x04, 0x67, 0x5f, 0x6e, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x03, 0x67, 0x4e, 0x42, 0x12,
	0x37, 0x0a, 0x07, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00,
	0x52, 0x06, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x12, 0x37, 0x0a, 0x07, 0x6e, 0x67, 0x5f, 0x65,
	0x5f, 0x6e, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65,
	0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6e, 0x67, 0x2d, 0x65, 0x4e,
	0x42, 0x12, 0x2f, 0x0a, 0x04, 0x65, 0x5f, 0x6e, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x03, 0x65,
	0x4e, 0x42, 0x42, 0x12, 0x0a, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x32, 0x6e,
	0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x81, 0x02, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x43,
	0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49,
	0x64, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42,
	0x2d, 0x49, 0x44, 0x12, 0x42, 0x0a, 0x10, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63,
	0x75, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55, 0x70, 0x49,
	0x64, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55,
	0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0d, 0x65, 0x6e, 0x5f, 0x67, 0x5f,
	0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64,
	0x48, 0x01, 0x52, 0x0c, 0x65, 0x6e, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f,
	0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x6e, 0x5f,
	0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64, 0x75, 0x5f, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x11, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12,
	0x3b, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x0d, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0xc5, 0x02, 0x0a,
	0x11, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x47, 0x6e, 0x62,
	0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x67, 0x5f, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x62, 0x49, 0x64,
	0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x12,
	0x48, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x65, 0x6e, 0x2d,
	0x67, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0d, 0x67, 0x5f, 0x6e,
	0x62, 0x5f, 0x63, 0x75, 0x5f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x43, 0x75,
	0x55, 0x70, 0x49, 0x64, 0x48, 0x01, 0x52, 0x0c, 0x67, 0x4e, 0x42, 0x2d, 0x43, 0x55, 0x2d, 0x55,
	0x50, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0a, 0x67, 0x5f, 0x6e, 0x62, 0x5f,
	0x64, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x48, 0x02, 0x52,
	0x09, 0x67, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x5f, 0x67, 0x5f, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x63, 0x75, 0x5f,
	0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x67, 0x5f, 0x6e, 0x62, 0x5f, 0x64,
	0x75, 0x5f, 0x69, 0x64, 0x22, 0xfc, 0x01, 0x0a, 0x13, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45,
	0x32, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x67, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x43, 0x0a, 0x11,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x62, 0x49, 0x64, 0x52,
	0x10, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x6e, 0x67, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49,
	0x44, 0x12, 0x40, 0x0a, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x5f, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62, 0x49, 0x64, 0x48,
	0x00, 0x52, 0x0d, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x2d, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44,
	0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0c, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x64, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x4e, 0x67, 0x65, 0x6e, 0x62, 0x44, 0x75, 0x49, 0x64, 0x48, 0x01, 0x52,
	0x0b, 0x6e, 0x67, 0x45, 0x4e, 0x42, 0x2d, 0x44, 0x55, 0x2d, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x5f,
	0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x62, 0x5f, 0x64, 0x75,
	0x5f, 0x69, 0x64, 0x22, 0x74, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x45, 0x6e, 0x62,
	0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0e, 0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0d, 0x70, 0x4c, 0x4d, 0x4e, 0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x27, 0x0a, 0x07, 0x65, 0x5f, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x62, 0x49,
	0x64, 0x52, 0x06, 0x65, 0x4e, 0x42, 0x2d, 0x49, 0x44, 0x22, 0x78, 0x0a, 0x0d, 0x47, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x65, 0x6e, 0x47, 0x6e, 0x62, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0e, 0x70, 0x5f,
	0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c, 0x6d,
	0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x4c, 0x4d, 0x4e, 0x2d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x07, 0x67, 0x5f, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e, 0x67, 0x6e, 0x62, 0x49, 0x64, 0x52, 0x06, 0x67, 0x4e, 0x42,
	0x2d, 0x49, 0x44, 0x22, 0x6c, 0x0a, 0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x62,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c,
	0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x70, 0x6c, 0x6d, 0x6e,
	0x2d, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x67, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6e,
	0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x06, 0x67, 0x6e, 0x62, 0x2d, 0x69,
	0x64, 0x22, 0x6e, 0x0a, 0x0d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x62,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x50, 0x6c,
	0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x70, 0x6c, 0x6d, 0x6e,
	0x2d, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x6e, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x6e,
	0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x62, 0x2d, 0x69,
	0x64, 0x22, 0x89, 0x01, 0x0a, 0x11, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4e, 0x67, 0x52, 0x61,
	0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x67, 0x5f, 0x6e, 0x62, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x67, 0x4e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x03, 0x67,
	0x4e, 0x42, 0x12, 0x31, 0x0a, 0x07, 0x6e, 0x67, 0x5f, 0x65, 0x5f, 0x6e, 0x62, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x6e, 0x67, 0x65, 0x4e, 0x62, 0x49, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6e,
	0x67, 0x2d, 0x65, 0x4e, 0x42, 0x42, 0x16, 0x0a, 0x14, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x5f,
	0x6e, 0x67, 0x5f, 0x72, 0x61, 0x6e, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x77, 0x0a,
	0x0b, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x69, 0x63, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0e,
	0x70, 0x5f, 0x6c, 0x6d, 0x6e, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x50,
	0x6c, 0x6d, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0d, 0x70, 0x4c, 0x4d,
	0x4e, 0x2d, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x06, 0x72, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e,
	0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06,
	0x72, 0x69, 0x63, 0x2d, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x09, 0x47, 0x6e, 0x62, 0x43, 0x75, 0x55,
	0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01,
	0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x07, 0x47, 0x6e, 0x62,
	0x44, 0x75, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4c, 0x0a, 0x0b, 0x47, 0x6e,
	0x62, 0x49, 0x64, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x67, 0x6e, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x06, 0x67, 0x6e, 0x62, 0x2d, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x67, 0x6e, 0x62, 0x5f, 0x69,
	0x64, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x22, 0x31, 0x0a, 0x09, 0x4e, 0x67, 0x65, 0x6e,
	0x62, 0x44, 0x75, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0e, 0xfa, 0x42, 0x0b, 0x22, 0x09, 0x18, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x0d, 0x52,
	0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07,
	0x1a, 0x05, 0x18, 0xff, 0x1f, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x13, 0x52, 0x61, 0x6e, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x1f, 0x28, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x0b, 0x52, 0x69, 0x63, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x0f, 0x52, 0x69, 0x63, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6e, 0x12, 0x21, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0b, 0xfa, 0x42, 0x08, 0x1a,
	0x06, 0x18, 0xff, 0xff, 0x03, 0x28, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x60,
	0x0a, 0x0c, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x72, 0x69, 0x63, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x69, 0x63, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x72, 0x69, 0x63, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44,
	0x22, 0xb5, 0x01, 0x0a, 0x13, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d, 0x0a, 0x1a, 0x72, 0x69, 0x63, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x17,
	0x72, 0x69, 0x63, 0x53, 0x75, 0x62, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x72, 0x69, 0x63, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x74,
	0x69, 0x6d, 0x65, 0x54, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x52, 0x0d, 0x72, 0x69, 0x63, 0x54, 0x69,
	0x6d, 0x65, 0x54, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x54, 0x6e, 0x6c,
	0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0b, 0x74,
	0x6e, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x74, 0x6e, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x32, 0x0a, 0x08, 0x74, 0x6e, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x73, 0x6e, 0x31, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x07, 0x74, 0x6e, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x6e, 0x6c, 0x5f, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0x31, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0xff, 0x01, 0x28, 0x00, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2a, 0x47, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x4f, 0x55, 0x54, 0x43, 0x4f, 0x4d, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x16, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x43,
	0x4f, 0x4d, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x2a, 0x38, 0x0a,
	0x0b, 0x43, 0x61, 0x75, 0x73, 0x65, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x25,
	0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x45, 0x32, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x32, 0x4e,
	0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x2a, 0x94, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x75, 0x73,
	0x65, 0x4d, 0x69, 0x73, 0x63, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x4d,
	0x49, 0x53, 0x43, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x43,
	0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x4c, 0x4f, 0x41, 0x44, 0x10,
	0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x4d, 0x49, 0x53, 0x43, 0x5f,
	0x48, 0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45,
	0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x4d, 0x49, 0x53, 0x43,
	0x5f, 0x4f, 0x4d, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x56, 0x45, 0x4e, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x4d, 0x49, 0x53, 0x43,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xee,
	0x02, 0x0a, 0x0d, 0x43, 0x61, 0x75, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x28, 0x0a, 0x24, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43,
	0x4f, 0x4c, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x5f, 0x53, 0x59, 0x4e, 0x54,
	0x41, 0x58, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x00, 0x12, 0x2f, 0x0a, 0x2b, 0x43, 0x41,
	0x55, 0x53, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x41, 0x42, 0x53,
	0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x01, 0x12, 0x3a, 0x0a, 0x36, 0x43,
	0x41, 0x55, 0x53, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x41, 0x42,
	0x53, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x5f, 0x45, 0x52,
	0x52, 0x4f, 0x52, 0x5f, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x59, 0x10, 0x02, 0x12, 0x3d, 0x0a, 0x39, 0x43, 0x41, 0x55, 0x53, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x54, 0x49, 0x42, 0x4c, 0x45,
	0x5f, 0x57, 0x49, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x53, 0x45, 0x4d, 0x41, 0x4e, 0x54, 0x49,
	0x43, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x04, 0x12, 0x44, 0x0a, 0x40, 0x43, 0x41, 0x55,
	0x53, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f, 0x4c, 0x5f, 0x41, 0x42, 0x53, 0x54,
	0x52, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x59, 0x4e, 0x54, 0x41, 0x58, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x46, 0x41, 0x4c, 0x53, 0x45, 0x4c, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x54, 0x52,
	0x55, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x05, 0x12,
	0x1e, 0x0a, 0x1a, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x43, 0x4f,
	0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x06, 0x2a,
	0x88, 0x05, 0x0a, 0x0f, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52, 0x69, 0x63, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x28, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x41, 0x4e, 0x5f, 0x46, 0x55, 0x4e, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22,
	0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x45, 0x58, 0x43, 0x45, 0x53, 0x53, 0x49, 0x56, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x10, 0x02, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49,
	0x43, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x2c, 0x0a, 0x28, 0x43,
	0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f,
	0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x10, 0x04, 0x12, 0x2c, 0x0a, 0x28, 0x43, 0x41, 0x55,
	0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x46, 0x55,
	0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x05, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x41, 0x55, 0x53, 0x45,
	0x5f, 0x52, 0x49, 0x43, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x49, 0x44, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x06,
	0x12, 0x43, 0x0a, 0x3f, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4e, 0x53, 0x49, 0x53, 0x54, 0x45, 0x4e,
	0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x45, 0x51, 0x55,
	0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45,
	0x4e, 0x43, 0x45, 0x10, 0x07, 0x12, 0x2c, 0x0a, 0x28, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52,
	0x49, 0x43, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x08, 0x12, 0x30, 0x0a, 0x2c, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x52, 0x49, 0x43, 0x5f, 0x43, 0x41, 0x4c, 0x4c,
	0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x49, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x09, 0x12, 0x2a, 0x0a, 0x26, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52,
	0x49, 0x43, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10,
	0x0a, 0x12, 0x2e, 0x0a, 0x2a, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x5f, 0x54, 0x4f, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x10,
	0x0b, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x0c, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x41, 0x55, 0x53,
	0x45, 0x5f, 0x52, 0x49, 0x43, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x0d, 0x2a, 0x95, 0x01, 0x0a, 0x0f, 0x43,
	0x61, 0x75, 0x73, 0x65, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f,
	0x0a, 0x2b, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x53, 0x45, 0x52, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x5f, 0x46, 0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x28, 0x0a, 0x24, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x53, 0x45, 0x52, 0x56,
	0x49, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x53, 0x53, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x55,
	0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x43, 0x41, 0x55,
	0x53, 0x45, 0x5f, 0x52, 0x49, 0x43, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x49,
	0x43, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54,
	0x10, 0x02, 0x2a, 0x65, 0x0a, 0x0e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x32, 0x0a, 0x2e, 0x43, 0x41, 0x55, 0x53, 0x45, 0x5f, 0x54,
	0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x50, 0x4f,
	0x52, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x2a, 0xb6, 0x02, 0x0a, 0x1c, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x32,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x47,
	0x10, 0x00, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x32, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x4e, 0x10, 0x01, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x32,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x31,
	0x10, 0x02, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x32, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x31, 0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x32,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x31,
	0x10, 0x04, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x32, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d,
	0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x31, 0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x45, 0x32,
	0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x46, 0x41, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x58, 0x32,
	0x10, 0x06, 0x2a, 0x60, 0x0a, 0x0d, 0x52, 0x69, 0x63, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x49, 0x43, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x52, 0x49, 0x43, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x49, 0x43,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49,
	0x43, 0x59, 0x10, 0x02, 0x2a, 0x59, 0x0a, 0x14, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x1d,
	0x52, 0x49, 0x43, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4e, 0x4f, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12,
	0x1e, 0x0a, 0x1a, 0x52, 0x49, 0x43, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x41, 0x43,
	0x4b, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x2a,
	0x6f, 0x0a, 0x10, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x49, 0x43, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f,
	0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x49, 0x43, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x49, 0x43, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x2a, 0x51, 0x0a, 0x11, 0x52, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x49, 0x43, 0x49, 0x4e, 0x44, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50, 0x4f,
	0x52, 0x54, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x49, 0x43, 0x49, 0x4e, 0x44, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52,
	0x54, 0x10, 0x01, 0x2a, 0x65, 0x0a, 0x17, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x22, 0x52, 0x49, 0x43, 0x53, 0x55, 0x42, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x54, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54,
	0x49, 0x4e, 0x55, 0x45, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x49, 0x43, 0x53, 0x55, 0x42,
	0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x01, 0x2a, 0xd1, 0x03, 0x0a, 0x0d, 0x52,
	0x69, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x14,
	0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f,
	0x57, 0x31, 0x4d, 0x53, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x32, 0x4d, 0x53, 0x10, 0x01,
	0x12, 0x18, 0x0a, 0x14, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57,
	0x41, 0x49, 0x54, 0x5f, 0x57, 0x35, 0x4d, 0x53, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x49,
	0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x31,
	0x30, 0x4d, 0x53, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x32, 0x30, 0x4d, 0x53, 0x10, 0x04,
	0x12, 0x19, 0x0a, 0x15, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57,
	0x41, 0x49, 0x54, 0x5f, 0x57, 0x33, 0x30, 0x4d, 0x53, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x52,
	0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57,
	0x34, 0x30, 0x4d, 0x53, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x35, 0x30, 0x4d, 0x53, 0x10,
	0x07, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f,
	0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x31, 0x30, 0x30, 0x4d, 0x53, 0x10, 0x08, 0x12, 0x1a, 0x0a,
	0x16, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54,
	0x5f, 0x57, 0x32, 0x30, 0x30, 0x4d, 0x53, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x49, 0x43,
	0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x35, 0x30,
	0x30, 0x4d, 0x53, 0x10, 0x0a, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45,
	0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x31, 0x53, 0x10, 0x0b, 0x12, 0x17,
	0x0a, 0x13, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49,
	0x54, 0x5f, 0x57, 0x32, 0x53, 0x10, 0x0c, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x49, 0x43, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x35, 0x53, 0x10, 0x0d,
	0x12, 0x18, 0x0a, 0x14, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57,
	0x41, 0x49, 0x54, 0x5f, 0x57, 0x31, 0x30, 0x53, 0x10, 0x0e, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x49,
	0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x32,
	0x30, 0x53, 0x10, 0x0f, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x49, 0x43, 0x54, 0x49, 0x4d, 0x45, 0x5f,
	0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x57, 0x36, 0x30, 0x53, 0x10, 0x10, 0x2a, 0x93,
	0x01, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x57, 0x61, 0x69, 0x74, 0x12, 0x14, 0x0a,
	0x10, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x56, 0x31,
	0x53, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57,
	0x41, 0x49, 0x54, 0x5f, 0x56, 0x32, 0x53, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x49, 0x4d,
	0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x56, 0x35, 0x53, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f,
	0x56, 0x31, 0x30, 0x53, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54,
	0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x56, 0x32, 0x30, 0x53, 0x10, 0x04, 0x12, 0x15, 0x0a,
	0x11, 0x54, 0x49, 0x4d, 0x45, 0x5f, 0x54, 0x4f, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x56, 0x36,
	0x30, 0x53, 0x10, 0x05, 0x2a, 0x56, 0x0a, 0x08, 0x54, 0x6e, 0x6c, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x14, 0x54, 0x4e, 0x4c, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x52, 0x49, 0x43,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x4e,
	0x4c, 0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x46,
	0x55, 0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x4e, 0x4c,
	0x55, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x4f, 0x54, 0x48, 0x10, 0x02, 0x2a, 0x4a, 0x0a, 0x0b,
	0x54, 0x79, 0x70, 0x65, 0x4f, 0x66, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x1c, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x53, 0x54, 0x4f, 0x4f, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a,
	0x15, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4d,
	0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x2d, 0x69, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_e2ap_v2_e2ap_ies_proto_rawDescOnce sync.Once
	file_api_e2ap_v2_e2ap_ies_proto_rawDescData = file_api_e2ap_v2_e2ap_ies_proto_rawDesc
)

func file_api_e2ap_v2_e2ap_ies_proto_rawDescGZIP() []byte {
	file_api_e2ap_v2_e2ap_ies_proto_rawDescOnce.Do(func() {
		file_api_e2ap_v2_e2ap_ies_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_e2ap_v2_e2ap_ies_proto_rawDescData)
	})
	return file_api_e2ap_v2_e2ap_ies_proto_rawDescData
}

var file_api_e2ap_v2_e2ap_ies_proto_enumTypes = make([]protoimpl.EnumInfo, 17)
var file_api_e2ap_v2_e2ap_ies_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_api_e2ap_v2_e2ap_ies_proto_goTypes = []interface{}{
	(UpdateOutcome)(0),                          // 0: e2ap.v2.UpdateOutcome
	(CauseE2Node)(0),                            // 1: e2ap.v2.CauseE2node
	(CauseMisc)(0),                              // 2: e2ap.v2.CauseMisc
	(CauseProtocol)(0),                          // 3: e2ap.v2.CauseProtocol
	(CauseRicrequest)(0),                        // 4: e2ap.v2.CauseRicrequest
	(CauseRicservice)(0),                        // 5: e2ap.v2.CauseRicservice
	(CauseTransport)(0),                         // 6: e2ap.v2.CauseTransport
	(E2NodeComponentInterfaceType)(0),           // 7: e2ap.v2.E2nodeComponentInterfaceType
	(RicactionType)(0),                          // 8: e2ap.v2.RicactionType
	(RiccontrolAckRequest)(0),                   // 9: e2ap.v2.RiccontrolAckRequest
	(RiccontrolStatus)(0),                       // 10: e2ap.v2.RiccontrolStatus
	(RicindicationType)(0),                      // 11: e2ap.v2.RicindicationType
	(RicsubsequentActionType)(0),                // 12: e2ap.v2.RicsubsequentActionType
	(RictimeToWait)(0),                          // 13: e2ap.v2.RictimeToWait
	(TimeToWait)(0),                             // 14: e2ap.v2.TimeToWait
	(Tnlusage)(0),                               // 15: e2ap.v2.Tnlusage
	(TypeOfError)(0),                            // 16: e2ap.v2.TypeOfError
	(*Cause)(nil),                               // 17: e2ap.v2.Cause
	(*CriticalityDiagnostics)(nil),              // 18: e2ap.v2.CriticalityDiagnostics
	(*CriticalityDiagnosticsIeList)(nil),        // 19: e2ap.v2.CriticalityDiagnosticsIeList
	(*CriticalityDiagnosticsIeItem)(nil),        // 20: e2ap.v2.CriticalityDiagnosticsIeItem
	(*E2NodeComponentConfiguration)(nil),        // 21: e2ap.v2.E2nodeComponentConfiguration
	(*E2NodeComponentConfigurationAck)(nil),     // 22: e2ap.v2.E2nodeComponentConfigurationAck
	(*E2NodeComponentId)(nil),                   // 23: e2ap.v2.E2nodeComponentId
	(*E2NodeComponentInterfaceE1)(nil),          // 24: e2ap.v2.E2nodeComponentInterfaceE1
	(*E2NodeComponentInterfaceF1)(nil),          // 25: e2ap.v2.E2nodeComponentInterfaceF1
	(*E2NodeComponentInterfaceNg)(nil),          // 26: e2ap.v2.E2nodeComponentInterfaceNg
	(*E2NodeComponentInterfaceS1)(nil),          // 27: e2ap.v2.E2nodeComponentInterfaceS1
	(*E2NodeComponentInterfaceX2)(nil),          // 28: e2ap.v2.E2nodeComponentInterfaceX2
	(*E2NodeComponentInterfaceXn)(nil),          // 29: e2ap.v2.E2nodeComponentInterfaceXn
	(*E2NodeComponentInterfaceW1)(nil),          // 30: e2ap.v2.E2nodeComponentInterfaceW1
	(*EnbId)(nil),                               // 31: e2ap.v2.EnbId
	(*EnbIdChoice)(nil),                         // 32: e2ap.v2.EnbIdChoice
	(*EngnbId)(nil),                             // 33: e2ap.v2.EngnbId
	(*GlobalE2NodeId)(nil),                      // 34: e2ap.v2.GlobalE2nodeId
	(*GlobalE2NodeEnGnbId)(nil),                 // 35: e2ap.v2.GlobalE2nodeEnGnbId
	(*GlobalE2NodeEnbId)(nil),                   // 36: e2ap.v2.GlobalE2nodeEnbId
	(*GlobalE2NodeGnbId)(nil),                   // 37: e2ap.v2.GlobalE2nodeGnbId
	(*GlobalE2NodeNgEnbId)(nil),                 // 38: e2ap.v2.GlobalE2nodeNgEnbId
	(*GlobalEnbId)(nil),                         // 39: e2ap.v2.GlobalEnbId
	(*GlobalenGnbId)(nil),                       // 40: e2ap.v2.GlobalenGnbId
	(*GlobalgNbId)(nil),                         // 41: e2ap.v2.GlobalgNbId
	(*GlobalngeNbId)(nil),                       // 42: e2ap.v2.GlobalngeNbId
	(*GlobalNgRannodeId)(nil),                   // 43: e2ap.v2.GlobalNgRannodeId
	(*GlobalRicId)(nil),                         // 44: e2ap.v2.GlobalRicId
	(*GnbCuUpId)(nil),                           // 45: e2ap.v2.GnbCuUpId
	(*GnbDuId)(nil),                             // 46: e2ap.v2.GnbDuId
	(*GnbIdChoice)(nil),                         // 47: e2ap.v2.GnbIdChoice
	(*NgenbDuId)(nil),                           // 48: e2ap.v2.NgenbDuId
	(*RanfunctionId)(nil),                       // 49: e2ap.v2.RanfunctionId
	(*RanfunctionRevision)(nil),                 // 50: e2ap.v2.RanfunctionRevision
	(*RicactionId)(nil),                         // 51: e2ap.v2.RicactionId
	(*RicindicationSn)(nil),                     // 52: e2ap.v2.RicindicationSn
	(*RicrequestId)(nil),                        // 53: e2ap.v2.RicrequestId
	(*RicsubsequentAction)(nil),                 // 54: e2ap.v2.RicsubsequentAction
	(*Tnlinformation)(nil),                      // 55: e2ap.v2.Tnlinformation
	(*TransactionId)(nil),                       // 56: e2ap.v2.TransactionId
	(*e2ap_commondatatypes.ProcedureCode)(nil),  // 57: e2ap.v2.ProcedureCode
	(e2ap_commondatatypes.TriggeringMessage)(0), // 58: e2ap.v2.TriggeringMessage
	(e2ap_commondatatypes.Criticality)(0),       // 59: e2ap.v2.Criticality
	(*e2ap_commondatatypes.ProtocolIeId)(nil),   // 60: e2ap.v2.ProtocolIeId
	(*e2ap_commondatatypes.Amfname)(nil),        // 61: e2ap.v2.Amfname
	(*e2ap_commondatatypes.Mmename)(nil),        // 62: e2ap.v2.Mmename
	(*asn1.BitString)(nil),                      // 63: asn1.v1.BitString
	(*e2ap_commondatatypes.PlmnIdentity)(nil),   // 64: e2ap.v2.PlmnIdentity
}
var file_api_e2ap_v2_e2ap_ies_proto_depIdxs = []int32{
	4,  // 0: e2ap.v2.Cause.ric_request:type_name -> e2ap.v2.CauseRicrequest
	5,  // 1: e2ap.v2.Cause.ric_service:type_name -> e2ap.v2.CauseRicservice
	1,  // 2: e2ap.v2.Cause.e2_node:type_name -> e2ap.v2.CauseE2node
	6,  // 3: e2ap.v2.Cause.transport:type_name -> e2ap.v2.CauseTransport
	3,  // 4: e2ap.v2.Cause.protocol:type_name -> e2ap.v2.CauseProtocol
	2,  // 5: e2ap.v2.Cause.misc:type_name -> e2ap.v2.CauseMisc
	57, // 6: e2ap.v2.CriticalityDiagnostics.procedure_code:type_name -> e2ap.v2.ProcedureCode
	58, // 7: e2ap.v2.CriticalityDiagnostics.triggering_message:type_name -> e2ap.v2.TriggeringMessage
	59, // 8: e2ap.v2.CriticalityDiagnostics.procedure_criticality:type_name -> e2ap.v2.Criticality
	53, // 9: e2ap.v2.CriticalityDiagnostics.ric_requestor_id:type_name -> e2ap.v2.RicrequestId
	19, // 10: e2ap.v2.CriticalityDiagnostics.i_es_criticality_diagnostics:type_name -> e2ap.v2.CriticalityDiagnosticsIeList
	20, // 11: e2ap.v2.CriticalityDiagnosticsIeList.value:type_name -> e2ap.v2.CriticalityDiagnosticsIeItem
	59, // 12: e2ap.v2.CriticalityDiagnosticsIeItem.i_ecriticality:type_name -> e2ap.v2.Criticality
	60, // 13: e2ap.v2.CriticalityDiagnosticsIeItem.i_e_id:type_name -> e2ap.v2.ProtocolIeId
	16, // 14: e2ap.v2.CriticalityDiagnosticsIeItem.type_of_error:type_name -> e2ap.v2.TypeOfError
	0,  // 15: e2ap.v2.E2nodeComponentConfigurationAck.update_outcome:type_name -> e2ap.v2.UpdateOutcome
	17, // 16: e2ap.v2.E2nodeComponentConfigurationAck.failure_cause:type_name -> e2ap.v2.Cause
	26, // 17: e2ap.v2.E2nodeComponentId.e2node_component_interface_type_ng:type_name -> e2ap.v2.E2nodeComponentInterfaceNg
	29, // 18: e2ap.v2.E2nodeComponentId.e2node_component_interface_type_xn:type_name -> e2ap.v2.E2nodeComponentInterfaceXn
	24, // 19: e2ap.v2.E2nodeComponentId.e2node_component_interface_type_e1:type_name -> e2ap.v2.E2nodeComponentInterfaceE1
	25, // 20: e2ap.v2.E2nodeComponentId.e2node_component_interface_type_f1:type_name -> e2ap.v2.E2nodeComponentInterfaceF1
	30, // 21: e2ap.v2.E2nodeComponentId.e2node_component_interface_type_w1:type_name -> e2ap.v2.E2nodeComponentInterfaceW1
	27, // 22: e2ap.v2.E2nodeComponentId.e2node_component_interface_type_s1:type_name -> e2ap.v2.E2nodeComponentInterfaceS1
	28, // 23: e2ap.v2.E2nodeComponentId.e2node_component_interface_type_x2:type_name -> e2ap.v2.E2nodeComponentInterfaceX2
	45, // 24: e2ap.v2.E2nodeComponentInterfaceE1.g_nb_cu_cp_id:type_name -> e2ap.v2.GnbCuUpId
	46, // 25: e2ap.v2.E2nodeComponentInterfaceF1.g_nb_du_id:type_name -> e2ap.v2.GnbDuId
	61, // 26: e2ap.v2.E2nodeComponentInterfaceNg.amf_name:type_name -> e2ap.v2.Amfname
	62, // 27: e2ap.v2.E2nodeComponentInterfaceS1.mme_name:type_name -> e2ap.v2.Mmename
	39, // 28: e2ap.v2.E2nodeComponentInterfaceX2.global_e_nb_id:type_name -> e2ap.v2.GlobalEnbId
	40, // 29: e2ap.v2.E2nodeComponentInterfaceX2.global_en_g_nb_id:type_name -> e2ap.v2.GlobalenGnbId
	43, // 30: e2ap.v2.E2nodeComponentInterfaceXn.global_ng_ran_node_id:type_name -> e2ap.v2.GlobalNgRannodeId
	48, // 31: e2ap.v2.E2nodeComponentInterfaceW1.ng_e_nb_du_id:type_name -> e2ap.v2.NgenbDuId
	63, // 32: e2ap.v2.EnbId.macro_e_nb_id:type_name -> asn1.v1.BitString
	63, // 33: e2ap.v2.EnbId.home_e_nb_id:type_name -> asn1.v1.BitString
	63, // 34: e2ap.v2.EnbId.short_macro_e_nb_id:type_name -> asn1.v1.BitString
	63, // 35: e2ap.v2.EnbId.long_macro_e_nb_id:type_name -> asn1.v1.BitString
	63, // 36: e2ap.v2.EnbIdChoice.enb_id_macro:type_name -> asn1.v1.BitString
	63, // 37: e2ap.v2.EnbIdChoice.enb_id_shortmacro:type_name -> asn1.v1.BitString
	63, // 38: e2ap.v2.EnbIdChoice.enb_id_longmacro:type_name -> asn1.v1.BitString
	63, // 39: e2ap.v2.EngnbId.g_nb_id:type_name -> asn1.v1.BitString
	37, // 40: e2ap.v2.GlobalE2nodeId.g_nb:type_name -> e2ap.v2.GlobalE2nodeGnbId
	35, // 41: e2ap.v2.GlobalE2nodeId.en_g_nb:type_name -> e2ap.v2.GlobalE2nodeEnGnbId
	38, // 42: e2ap.v2.GlobalE2nodeId.ng_e_nb:type_name -> e2ap.v2.GlobalE2nodeNgEnbId
	36, // 43: e2ap.v2.GlobalE2nodeId.e_nb:type_name -> e2ap.v2.GlobalE2nodeEnbId
	40, // 44: e2ap.v2.GlobalE2nodeEnGnbId.global_en_g_nb_id:type_name -> e2ap.v2.GlobalenGnbId
	45, // 45: e2ap.v2.GlobalE2nodeEnGnbId.en_g_nb_cu_up_id:type_name -> e2ap.v2.GnbCuUpId
	46, // 46: e2ap.v2.GlobalE2nodeEnGnbId.en_g_nb_du_id:type_name -> e2ap.v2.GnbDuId
	39, // 47: e2ap.v2.GlobalE2nodeEnbId.global_e_nb_id:type_name -> e2ap.v2.GlobalEnbId
	41, // 48: e2ap.v2.GlobalE2nodeGnbId.global_g_nb_id:type_name -> e2ap.v2.GlobalgNbId
	40, // 49: e2ap.v2.GlobalE2nodeGnbId.global_en_g_nb_id:type_name -> e2ap.v2.GlobalenGnbId
	45, // 50: e2ap.v2.GlobalE2nodeGnbId.g_nb_cu_up_id:type_name -> e2ap.v2.GnbCuUpId
	46, // 51: e2ap.v2.GlobalE2nodeGnbId.g_nb_du_id:type_name -> e2ap.v2.GnbDuId
	42, // 52: e2ap.v2.GlobalE2nodeNgEnbId.global_ng_e_nb_id:type_name -> e2ap.v2.GlobalngeNbId
	39, // 53: e2ap.v2.GlobalE2nodeNgEnbId.global_e_nb_id:type_name -> e2ap.v2.GlobalEnbId
	48, // 54: e2ap.v2.GlobalE2nodeNgEnbId.ng_enb_du_id:type_name -> e2ap.v2.NgenbDuId
	64, // 55: e2ap.v2.GlobalEnbId.p_lmn_identity:type_name -> e2ap.v2.PlmnIdentity
	31, // 56: e2ap.v2.GlobalEnbId.e_nb_id:type_name -> e2ap.v2.EnbId
	64, // 57: e2ap.v2.GlobalenGnbId.p_lmn_identity:type_name -> e2ap.v2.PlmnIdentity
	33, // 58: e2ap.v2.GlobalenGnbId.g_nb_id:type_name -> e2ap.v2.EngnbId
	64, // 59: e2ap.v2.GlobalgNbId.plmn_id:type_name -> e2ap.v2.PlmnIdentity
	47, // 60: e2ap.v2.GlobalgNbId.gnb_id:type_name -> e2ap.v2.GnbIdChoice
	64, // 61: e2ap.v2.GlobalngeNbId.plmn_id:type_name -> e2ap.v2.PlmnIdentity
	32, // 62: e2ap.v2.GlobalngeNbId.enb_id:type_name -> e2ap.v2.EnbIdChoice
	41, // 63: e2ap.v2.GlobalNgRannodeId.g_nb:type_name -> e2ap.v2.GlobalgNbId
	42, // 64: e2ap.v2.GlobalNgRannodeId.ng_e_nb:type_name -> e2ap.v2.GlobalngeNbId
	64, // 65: e2ap.v2.GlobalRicId.p_lmn_identity:type_name -> e2ap.v2.PlmnIdentity
	63, // 66: e2ap.v2.GlobalRicId.ric_id:type_name -> asn1.v1.BitString
	63, // 67: e2ap.v2.GnbIdChoice.gnb_id:type_name -> asn1.v1.BitString
	12, // 68: e2ap.v2.RicsubsequentAction.ric_subsequent_action_type:type_name -> e2ap.v2.RicsubsequentActionType
	13, // 69: e2ap.v2.RicsubsequentAction.ric_time_to_wait:type_name -> e2ap.v2.RictimeToWait
	63, // 70: e2ap.v2.Tnlinformation.tnl_address:type_name -> asn1.v1.BitString
	63, // 71: e2ap.v2.Tnlinformation.tnl_port:type_name -> asn1.v1.BitString
	72, // [72:72] is the sub-list for method output_type
	72, // [72:72] is the sub-list for method input_type
	72, // [72:72] is the sub-list for extension type_name
	72, // [72:72] is the sub-list for extension extendee
	0,  // [0:72] is the sub-list for field type_name
}

func init() { file_api_e2ap_v2_e2ap_ies_proto_init() }
func file_api_e2ap_v2_e2ap_ies_proto_init() {
	if File_api_e2ap_v2_e2ap_ies_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cause); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriticalityDiagnostics); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriticalityDiagnosticsIeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CriticalityDiagnosticsIeItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentConfigurationAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentInterfaceE1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentInterfaceF1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentInterfaceNg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentInterfaceS1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentInterfaceX2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentInterfaceXn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeComponentInterfaceW1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnbIdChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalE2NodeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalE2NodeEnGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalE2NodeEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalE2NodeGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalE2NodeNgEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalEnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalenGnbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalgNbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalngeNbId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalNgRannodeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GlobalRicId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbCuUpId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnbIdChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NgenbDuId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RanfunctionRevision); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicactionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicindicationSn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicrequestId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicsubsequentAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tnlinformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_ies_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Cause_RicRequest)(nil),
		(*Cause_RicService)(nil),
		(*Cause_E2Node)(nil),
		(*Cause_Transport)(nil),
		(*Cause_Protocol)(nil),
		(*Cause_Misc)(nil),
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*E2NodeComponentId_E2NodeComponentInterfaceTypeNg)(nil),
		(*E2NodeComponentId_E2NodeComponentInterfaceTypeXn)(nil),
		(*E2NodeComponentId_E2NodeComponentInterfaceTypeE1)(nil),
		(*E2NodeComponentId_E2NodeComponentInterfaceTypeF1)(nil),
		(*E2NodeComponentId_E2NodeComponentInterfaceTypeW1)(nil),
		(*E2NodeComponentId_E2NodeComponentInterfaceTypeS1)(nil),
		(*E2NodeComponentId_E2NodeComponentInterfaceTypeX2)(nil),
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*EnbId_MacroENbId)(nil),
		(*EnbId_HomeENbId)(nil),
		(*EnbId_ShortMacroENbId)(nil),
		(*EnbId_LongMacroENbId)(nil),
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*EnbIdChoice_EnbIdMacro)(nil),
		(*EnbIdChoice_EnbIdShortmacro)(nil),
		(*EnbIdChoice_EnbIdLongmacro)(nil),
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*EngnbId_GNbId)(nil),
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*GlobalE2NodeId_GNb)(nil),
		(*GlobalE2NodeId_EnGNb)(nil),
		(*GlobalE2NodeId_NgENb)(nil),
		(*GlobalE2NodeId_ENb)(nil),
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*GlobalNgRannodeId_GNb)(nil),
		(*GlobalNgRannodeId_NgENb)(nil),
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[30].OneofWrappers = []interface{}{
		(*GnbIdChoice_GnbId)(nil),
	}
	file_api_e2ap_v2_e2ap_ies_proto_msgTypes[38].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_e2ap_v2_e2ap_ies_proto_rawDesc,
			NumEnums:      17,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_e2ap_v2_e2ap_ies_proto_goTypes,
		DependencyIndexes: file_api_e2ap_v2_e2ap_ies_proto_depIdxs,
		EnumInfos:         file_api_e2ap_v2_e2ap_ies_proto_enumTypes,
		MessageInfos:      file_api_e2ap_v2_e2ap_ies_proto_msgTypes,
	}.Build()
	File_api_e2ap_v2_e2ap_ies_proto = out.File
	file_api_e2ap_v2_e2ap_ies_proto_rawDesc = nil
	file_api_e2ap_v2_e2ap_ies_proto_goTypes = nil
	file_api_e2ap_v2_e2ap_ies_proto_depIdxs = nil
}
