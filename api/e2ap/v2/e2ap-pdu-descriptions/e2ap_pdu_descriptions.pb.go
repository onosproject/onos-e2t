// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.17.1
// source: api/e2ap/v2/e2ap_pdu_descriptions.proto

package e2ap_pdu_descriptions

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	e2ap_commondatatypes "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-commondatatypes"
	e2ap_constants "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-constants"
	e2ap_pdu_contents "github.com/onosproject/onos-e2t/api/e2ap/v2/e2ap-pdu-contents"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// sequence from e2ap_v2.asn:100
// {E2AP-PDU}
// aper:"valueExt"
type E2ApPdu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// choice from e2ap_v2.asn:100
	//
	// Types that are assignable to E2ApPdu:
	//	*E2ApPdu_InitiatingMessage
	//	*E2ApPdu_SuccessfulOutcome
	//	*E2ApPdu_UnsuccessfulOutcome
	E2ApPdu isE2ApPdu_E2ApPdu `protobuf_oneof:"e2_ap_pdu"`
}

func (x *E2ApPdu) Reset() {
	*x = E2ApPdu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ApPdu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ApPdu) ProtoMessage() {}

func (x *E2ApPdu) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ApPdu.ProtoReflect.Descriptor instead.
func (*E2ApPdu) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{0}
}

func (m *E2ApPdu) GetE2ApPdu() isE2ApPdu_E2ApPdu {
	if m != nil {
		return m.E2ApPdu
	}
	return nil
}

func (x *E2ApPdu) GetInitiatingMessage() *InitiatingMessage {
	if x, ok := x.GetE2ApPdu().(*E2ApPdu_InitiatingMessage); ok {
		return x.InitiatingMessage
	}
	return nil
}

func (x *E2ApPdu) GetSuccessfulOutcome() *SuccessfulOutcome {
	if x, ok := x.GetE2ApPdu().(*E2ApPdu_SuccessfulOutcome); ok {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *E2ApPdu) GetUnsuccessfulOutcome() *UnsuccessfulOutcome {
	if x, ok := x.GetE2ApPdu().(*E2ApPdu_UnsuccessfulOutcome); ok {
		return x.UnsuccessfulOutcome
	}
	return nil
}

type isE2ApPdu_E2ApPdu interface {
	isE2ApPdu_E2ApPdu()
}

type E2ApPdu_InitiatingMessage struct {
	// @inject_tag: aper:"choiceIdx:1"
	InitiatingMessage *InitiatingMessage `protobuf:"bytes,1,opt,name=initiating_message,json=initiatingMessage,proto3,oneof"`
}

type E2ApPdu_SuccessfulOutcome struct {
	// @inject_tag: aper:"choiceIdx:2"
	SuccessfulOutcome *SuccessfulOutcome `protobuf:"bytes,2,opt,name=successful_outcome,json=successfulOutcome,proto3,oneof"`
}

type E2ApPdu_UnsuccessfulOutcome struct {
	// @inject_tag: aper:"choiceIdx:3"
	UnsuccessfulOutcome *UnsuccessfulOutcome `protobuf:"bytes,3,opt,name=unsuccessful_outcome,json=unsuccessfulOutcome,proto3,oneof"`
}

func (*E2ApPdu_InitiatingMessage) isE2ApPdu_E2ApPdu() {}

func (*E2ApPdu_SuccessfulOutcome) isE2ApPdu_E2ApPdu() {}

func (*E2ApPdu_UnsuccessfulOutcome) isE2ApPdu_E2ApPdu() {}

// sequence from e2ap_v2.asn:107
// {InitiatingMessage}
type InitiatingMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	ProcedureCode *E2ApElementaryProcedures `protobuf:"bytes,1,opt,name=procedure_code,json=procedureCode,proto3" json:"procedure_code,omitempty"`
}

func (x *InitiatingMessage) Reset() {
	*x = InitiatingMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitiatingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiatingMessage) ProtoMessage() {}

func (x *InitiatingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiatingMessage.ProtoReflect.Descriptor instead.
func (*InitiatingMessage) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{1}
}

func (x *InitiatingMessage) GetProcedureCode() *E2ApElementaryProcedures {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

// sequence from e2ap_v2.asn:113
// {SuccessfulOutcome}
type SuccessfulOutcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	ProcedureCode *E2ApElementaryProcedures `protobuf:"bytes,1,opt,name=procedure_code,json=procedureCode,proto3" json:"procedure_code,omitempty"`
}

func (x *SuccessfulOutcome) Reset() {
	*x = SuccessfulOutcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuccessfulOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuccessfulOutcome) ProtoMessage() {}

func (x *SuccessfulOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuccessfulOutcome.ProtoReflect.Descriptor instead.
func (*SuccessfulOutcome) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{2}
}

func (x *SuccessfulOutcome) GetProcedureCode() *E2ApElementaryProcedures {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

// sequence from e2ap_v2.asn:119
// {UnsuccessfulOutcome}
type UnsuccessfulOutcome struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	ProcedureCode *E2ApElementaryProcedures `protobuf:"bytes,1,opt,name=procedure_code,json=procedureCode,proto3" json:"procedure_code,omitempty"`
}

func (x *UnsuccessfulOutcome) Reset() {
	*x = UnsuccessfulOutcome{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsuccessfulOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsuccessfulOutcome) ProtoMessage() {}

func (x *UnsuccessfulOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsuccessfulOutcome.ProtoReflect.Descriptor instead.
func (*UnsuccessfulOutcome) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{3}
}

func (x *UnsuccessfulOutcome) GetProcedureCode() *E2ApElementaryProcedures {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:130
// {_E2AP-ELEMENTARY-PROCEDURES}
type E2ApElementaryProcedures struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicSubscription               *RicSubscription               `protobuf:"bytes,1,opt,name=ric_subscription,proto3" json:"ric_subscription,omitempty"`
	RicSubscriptionDelete         *RicSubscriptionDelete         `protobuf:"bytes,2,opt,name=ric_subscription_delete,proto3" json:"ric_subscription_delete,omitempty"`
	RicServiceUpdate              *RicServiceUpdate              `protobuf:"bytes,3,opt,name=ric_service_update,proto3" json:"ric_service_update,omitempty"`
	RicControl                    *RicControl                    `protobuf:"bytes,4,opt,name=ric_control,proto3" json:"ric_control,omitempty"`
	E2Setup                       *E2Setup                       `protobuf:"bytes,5,opt,name=e2setup,proto3" json:"e2setup,omitempty"`
	E2NodeConfigurationUpdate     *E2NodeConfigurationUpdateEp   `protobuf:"bytes,6,opt,name=e2node_configuration_update,proto3" json:"e2node_configuration_update,omitempty"`
	E2ConnectionUpdate            *E2ConnectionUpdateEp          `protobuf:"bytes,7,opt,name=e2connection_update,proto3" json:"e2connection_update,omitempty"`
	Reset_                        *Reset                         `protobuf:"bytes,8,opt,name=reset,proto3" json:"reset,omitempty"`
	RicIndication                 *RicIndication                 `protobuf:"bytes,9,opt,name=ric_indication,proto3" json:"ric_indication,omitempty"`
	RicServiceQuery               *RicServiceQuery               `protobuf:"bytes,10,opt,name=ric_service_query,proto3" json:"ric_service_query,omitempty"`
	ErrorIndication               *ErrorIndicationEp             `protobuf:"bytes,11,opt,name=error_indication,proto3" json:"error_indication,omitempty"`
	RicSubscriptionDeleteRequired *RicSubscriptionDeleteRequired `protobuf:"bytes,12,opt,name=ric_subscription_delete_required,proto3" json:"ric_subscription_delete_required,omitempty"`
}

func (x *E2ApElementaryProcedures) Reset() {
	*x = E2ApElementaryProcedures{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ApElementaryProcedures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ApElementaryProcedures) ProtoMessage() {}

func (x *E2ApElementaryProcedures) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ApElementaryProcedures.ProtoReflect.Descriptor instead.
func (*E2ApElementaryProcedures) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{4}
}

func (x *E2ApElementaryProcedures) GetRicSubscription() *RicSubscription {
	if x != nil {
		return x.RicSubscription
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetRicSubscriptionDelete() *RicSubscriptionDelete {
	if x != nil {
		return x.RicSubscriptionDelete
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetRicServiceUpdate() *RicServiceUpdate {
	if x != nil {
		return x.RicServiceUpdate
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetRicControl() *RicControl {
	if x != nil {
		return x.RicControl
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetE2Setup() *E2Setup {
	if x != nil {
		return x.E2Setup
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetE2NodeConfigurationUpdate() *E2NodeConfigurationUpdateEp {
	if x != nil {
		return x.E2NodeConfigurationUpdate
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetE2ConnectionUpdate() *E2ConnectionUpdateEp {
	if x != nil {
		return x.E2ConnectionUpdate
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetReset_() *Reset {
	if x != nil {
		return x.Reset_
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetRicIndication() *RicIndication {
	if x != nil {
		return x.RicIndication
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetRicServiceQuery() *RicServiceQuery {
	if x != nil {
		return x.RicServiceQuery
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetErrorIndication() *ErrorIndicationEp {
	if x != nil {
		return x.ErrorIndication
	}
	return nil
}

func (x *E2ApElementaryProcedures) GetRicSubscriptionDeleteRequired() *RicSubscriptionDeleteRequired {
	if x != nil {
		return x.RicSubscriptionDeleteRequired
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:136
// {_E2AP-ELEMENTARY-PROCEDURES-CLASS-1}
// aper:"valueExt"
type E2ApElementaryProceduresClass1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicSubscription           *RicSubscription             `protobuf:"bytes,1,opt,name=ric_subscription,proto3" json:"ric_subscription,omitempty"`
	RicSubscriptionDelete     *RicSubscriptionDelete       `protobuf:"bytes,2,opt,name=ric_subscription_delete,proto3" json:"ric_subscription_delete,omitempty"`
	RicServiceUpdate          *RicServiceUpdate            `protobuf:"bytes,3,opt,name=ric_service_update,proto3" json:"ric_service_update,omitempty"`
	RicControl                *RicControl                  `protobuf:"bytes,4,opt,name=ric_control,proto3" json:"ric_control,omitempty"`
	E2Setup                   *E2Setup                     `protobuf:"bytes,5,opt,name=e2setup,proto3" json:"e2setup,omitempty"`
	E2NodeConfigurationUpdate *E2NodeConfigurationUpdateEp `protobuf:"bytes,6,opt,name=e2node_configuration_update,proto3" json:"e2node_configuration_update,omitempty"`
	E2ConnectionUpdate        *E2ConnectionUpdateEp        `protobuf:"bytes,7,opt,name=e2connection_update,proto3" json:"e2connection_update,omitempty"`
	Reset_                    *Reset                       `protobuf:"bytes,8,opt,name=reset,proto3" json:"reset,omitempty"`
}

func (x *E2ApElementaryProceduresClass1) Reset() {
	*x = E2ApElementaryProceduresClass1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ApElementaryProceduresClass1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ApElementaryProceduresClass1) ProtoMessage() {}

func (x *E2ApElementaryProceduresClass1) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ApElementaryProceduresClass1.ProtoReflect.Descriptor instead.
func (*E2ApElementaryProceduresClass1) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{5}
}

func (x *E2ApElementaryProceduresClass1) GetRicSubscription() *RicSubscription {
	if x != nil {
		return x.RicSubscription
	}
	return nil
}

func (x *E2ApElementaryProceduresClass1) GetRicSubscriptionDelete() *RicSubscriptionDelete {
	if x != nil {
		return x.RicSubscriptionDelete
	}
	return nil
}

func (x *E2ApElementaryProceduresClass1) GetRicServiceUpdate() *RicServiceUpdate {
	if x != nil {
		return x.RicServiceUpdate
	}
	return nil
}

func (x *E2ApElementaryProceduresClass1) GetRicControl() *RicControl {
	if x != nil {
		return x.RicControl
	}
	return nil
}

func (x *E2ApElementaryProceduresClass1) GetE2Setup() *E2Setup {
	if x != nil {
		return x.E2Setup
	}
	return nil
}

func (x *E2ApElementaryProceduresClass1) GetE2NodeConfigurationUpdate() *E2NodeConfigurationUpdateEp {
	if x != nil {
		return x.E2NodeConfigurationUpdate
	}
	return nil
}

func (x *E2ApElementaryProceduresClass1) GetE2ConnectionUpdate() *E2ConnectionUpdateEp {
	if x != nil {
		return x.E2ConnectionUpdate
	}
	return nil
}

func (x *E2ApElementaryProceduresClass1) GetReset_() *Reset {
	if x != nil {
		return x.Reset_
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:148
// {_E2AP-ELEMENTARY-PROCEDURES-CLASS-2}
// aper:"valueExt"
type E2ApElementaryProceduresClass2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RicIndication                 *RicIndication                 `protobuf:"bytes,1,opt,name=ric_indication,proto3" json:"ric_indication,omitempty"`
	RicServiceQuery               *RicServiceQuery               `protobuf:"bytes,2,opt,name=ric_service_query,proto3" json:"ric_service_query,omitempty"`
	ErrorIndication               *ErrorIndicationEp             `protobuf:"bytes,3,opt,name=error_indication,proto3" json:"error_indication,omitempty"`
	RicSubscriptionDeleteRequired *RicSubscriptionDeleteRequired `protobuf:"bytes,4,opt,name=ric_subscription_delete_required,proto3" json:"ric_subscription_delete_required,omitempty"`
}

func (x *E2ApElementaryProceduresClass2) Reset() {
	*x = E2ApElementaryProceduresClass2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ApElementaryProceduresClass2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ApElementaryProceduresClass2) ProtoMessage() {}

func (x *E2ApElementaryProceduresClass2) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ApElementaryProceduresClass2.ProtoReflect.Descriptor instead.
func (*E2ApElementaryProceduresClass2) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{6}
}

func (x *E2ApElementaryProceduresClass2) GetRicIndication() *RicIndication {
	if x != nil {
		return x.RicIndication
	}
	return nil
}

func (x *E2ApElementaryProceduresClass2) GetRicServiceQuery() *RicServiceQuery {
	if x != nil {
		return x.RicServiceQuery
	}
	return nil
}

func (x *E2ApElementaryProceduresClass2) GetErrorIndication() *ErrorIndicationEp {
	if x != nil {
		return x.ErrorIndication
	}
	return nil
}

func (x *E2ApElementaryProceduresClass2) GetRicSubscriptionDeleteRequired() *RicSubscriptionDeleteRequired {
	if x != nil {
		return x.RicSubscriptionDeleteRequired
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:163
// {_e2connectionUpdate}
type E2ConnectionUpdateEp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.E2ConnectionUpdate `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	// @inject_tag: aper:"valueExt"
	SuccessfulOutcome *e2ap_pdu_contents.E2ConnectionUpdateAcknowledge `protobuf:"bytes,2,opt,name=successful_outcome,json=&SuccessfulOutcome,proto3" json:"successful_outcome,omitempty"`
	// @inject_tag: aper:"valueExt"
	UnsuccessfulOutcome *e2ap_pdu_contents.E2ConnectionUpdateFailure `protobuf:"bytes,3,opt,name=unsuccessful_outcome,json=&UnsuccessfulOutcome,proto3" json:"unsuccessful_outcome,omitempty"`
	ProcedureCode       *e2ap_constants.IdE2ConnectionUpdate         `protobuf:"bytes,4,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality         *e2ap_commondatatypes.CriticalityReject      `protobuf:"bytes,5,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *E2ConnectionUpdateEp) Reset() {
	*x = E2ConnectionUpdateEp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2ConnectionUpdateEp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2ConnectionUpdateEp) ProtoMessage() {}

func (x *E2ConnectionUpdateEp) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2ConnectionUpdateEp.ProtoReflect.Descriptor instead.
func (*E2ConnectionUpdateEp) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{7}
}

func (x *E2ConnectionUpdateEp) GetInitiatingMessage() *e2ap_pdu_contents.E2ConnectionUpdate {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *E2ConnectionUpdateEp) GetSuccessfulOutcome() *e2ap_pdu_contents.E2ConnectionUpdateAcknowledge {
	if x != nil {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *E2ConnectionUpdateEp) GetUnsuccessfulOutcome() *e2ap_pdu_contents.E2ConnectionUpdateFailure {
	if x != nil {
		return x.UnsuccessfulOutcome
	}
	return nil
}

func (x *E2ConnectionUpdateEp) GetProcedureCode() *e2ap_constants.IdE2ConnectionUpdate {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *E2ConnectionUpdateEp) GetCriticality() *e2ap_commondatatypes.CriticalityReject {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:171
// {_e2nodeConfigurationUpdate}
type E2NodeConfigurationUpdateEp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.E2NodeConfigurationUpdate `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	// @inject_tag: aper:"valueExt"
	SuccessfulOutcome *e2ap_pdu_contents.E2NodeConfigurationUpdateAcknowledge `protobuf:"bytes,2,opt,name=successful_outcome,json=&SuccessfulOutcome,proto3" json:"successful_outcome,omitempty"`
	// @inject_tag: aper:"valueExt"
	UnsuccessfulOutcome *e2ap_pdu_contents.E2NodeConfigurationUpdateFailure `protobuf:"bytes,3,opt,name=unsuccessful_outcome,json=&UnsuccessfulOutcome,proto3" json:"unsuccessful_outcome,omitempty"`
	ProcedureCode       *e2ap_constants.IdE2NodeConfigurationUpdate         `protobuf:"bytes,4,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality         *e2ap_commondatatypes.CriticalityReject             `protobuf:"bytes,5,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *E2NodeConfigurationUpdateEp) Reset() {
	*x = E2NodeConfigurationUpdateEp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2NodeConfigurationUpdateEp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2NodeConfigurationUpdateEp) ProtoMessage() {}

func (x *E2NodeConfigurationUpdateEp) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2NodeConfigurationUpdateEp.ProtoReflect.Descriptor instead.
func (*E2NodeConfigurationUpdateEp) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{8}
}

func (x *E2NodeConfigurationUpdateEp) GetInitiatingMessage() *e2ap_pdu_contents.E2NodeConfigurationUpdate {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *E2NodeConfigurationUpdateEp) GetSuccessfulOutcome() *e2ap_pdu_contents.E2NodeConfigurationUpdateAcknowledge {
	if x != nil {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *E2NodeConfigurationUpdateEp) GetUnsuccessfulOutcome() *e2ap_pdu_contents.E2NodeConfigurationUpdateFailure {
	if x != nil {
		return x.UnsuccessfulOutcome
	}
	return nil
}

func (x *E2NodeConfigurationUpdateEp) GetProcedureCode() *e2ap_constants.IdE2NodeConfigurationUpdate {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *E2NodeConfigurationUpdateEp) GetCriticality() *e2ap_commondatatypes.CriticalityReject {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:179
// {_e2setup}
type E2Setup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.E2SetupRequest `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	// @inject_tag: aper:"valueExt"
	SuccessfulOutcome *e2ap_pdu_contents.E2SetupResponse `protobuf:"bytes,2,opt,name=successful_outcome,json=&SuccessfulOutcome,proto3" json:"successful_outcome,omitempty"`
	// @inject_tag: aper:"valueExt"
	UnsuccessfulOutcome *e2ap_pdu_contents.E2SetupFailure       `protobuf:"bytes,3,opt,name=unsuccessful_outcome,json=&UnsuccessfulOutcome,proto3" json:"unsuccessful_outcome,omitempty"`
	ProcedureCode       *e2ap_constants.IdE2Setup               `protobuf:"bytes,4,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality         *e2ap_commondatatypes.CriticalityReject `protobuf:"bytes,5,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *E2Setup) Reset() {
	*x = E2Setup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *E2Setup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*E2Setup) ProtoMessage() {}

func (x *E2Setup) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use E2Setup.ProtoReflect.Descriptor instead.
func (*E2Setup) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{9}
}

func (x *E2Setup) GetInitiatingMessage() *e2ap_pdu_contents.E2SetupRequest {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *E2Setup) GetSuccessfulOutcome() *e2ap_pdu_contents.E2SetupResponse {
	if x != nil {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *E2Setup) GetUnsuccessfulOutcome() *e2ap_pdu_contents.E2SetupFailure {
	if x != nil {
		return x.UnsuccessfulOutcome
	}
	return nil
}

func (x *E2Setup) GetProcedureCode() *e2ap_constants.IdE2Setup {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *E2Setup) GetCriticality() *e2ap_commondatatypes.CriticalityReject {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:187
// {_errorIndication}
type ErrorIndicationEp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.ErrorIndication      `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	ProcedureCode     *e2ap_constants.IdErrorIndication       `protobuf:"bytes,2,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality       *e2ap_commondatatypes.CriticalityIgnore `protobuf:"bytes,3,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *ErrorIndicationEp) Reset() {
	*x = ErrorIndicationEp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorIndicationEp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorIndicationEp) ProtoMessage() {}

func (x *ErrorIndicationEp) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorIndicationEp.ProtoReflect.Descriptor instead.
func (*ErrorIndicationEp) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{10}
}

func (x *ErrorIndicationEp) GetInitiatingMessage() *e2ap_pdu_contents.ErrorIndication {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *ErrorIndicationEp) GetProcedureCode() *e2ap_constants.IdErrorIndication {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *ErrorIndicationEp) GetCriticality() *e2ap_commondatatypes.CriticalityIgnore {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:193
// {_reset}
type Reset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.ResetRequest `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	// @inject_tag: aper:"valueExt"
	SuccessfulOutcome *e2ap_pdu_contents.ResetResponse        `protobuf:"bytes,2,opt,name=successful_outcome,json=&SuccessfulOutcome,proto3" json:"successful_outcome,omitempty"`
	ProcedureCode     *e2ap_constants.IdReset                 `protobuf:"bytes,3,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality       *e2ap_commondatatypes.CriticalityReject `protobuf:"bytes,4,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *Reset) Reset() {
	*x = Reset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reset) ProtoMessage() {}

func (x *Reset) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reset.ProtoReflect.Descriptor instead.
func (*Reset) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{11}
}

func (x *Reset) GetInitiatingMessage() *e2ap_pdu_contents.ResetRequest {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *Reset) GetSuccessfulOutcome() *e2ap_pdu_contents.ResetResponse {
	if x != nil {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *Reset) GetProcedureCode() *e2ap_constants.IdReset {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *Reset) GetCriticality() *e2ap_commondatatypes.CriticalityReject {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:200
// {_ricControl}
type RicControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.RiccontrolRequest `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	// @inject_tag: aper:"valueExt"
	SuccessfulOutcome *e2ap_pdu_contents.RiccontrolAcknowledge `protobuf:"bytes,2,opt,name=successful_outcome,json=&SuccessfulOutcome,proto3" json:"successful_outcome,omitempty"`
	// @inject_tag: aper:"valueExt"
	UnsuccessfulOutcome *e2ap_pdu_contents.RiccontrolFailure    `protobuf:"bytes,3,opt,name=unsuccessful_outcome,json=&UnsuccessfulOutcome,proto3" json:"unsuccessful_outcome,omitempty"`
	ProcedureCode       *e2ap_constants.IdRiccontrol            `protobuf:"bytes,4,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality         *e2ap_commondatatypes.CriticalityReject `protobuf:"bytes,5,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *RicControl) Reset() {
	*x = RicControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicControl) ProtoMessage() {}

func (x *RicControl) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicControl.ProtoReflect.Descriptor instead.
func (*RicControl) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{12}
}

func (x *RicControl) GetInitiatingMessage() *e2ap_pdu_contents.RiccontrolRequest {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *RicControl) GetSuccessfulOutcome() *e2ap_pdu_contents.RiccontrolAcknowledge {
	if x != nil {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *RicControl) GetUnsuccessfulOutcome() *e2ap_pdu_contents.RiccontrolFailure {
	if x != nil {
		return x.UnsuccessfulOutcome
	}
	return nil
}

func (x *RicControl) GetProcedureCode() *e2ap_constants.IdRiccontrol {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *RicControl) GetCriticality() *e2ap_commondatatypes.CriticalityReject {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:208
// {_ricIndication}
type RicIndication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.Ricindication        `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	ProcedureCode     *e2ap_constants.IdRicindication         `protobuf:"bytes,2,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality       *e2ap_commondatatypes.CriticalityIgnore `protobuf:"bytes,3,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *RicIndication) Reset() {
	*x = RicIndication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicIndication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicIndication) ProtoMessage() {}

func (x *RicIndication) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicIndication.ProtoReflect.Descriptor instead.
func (*RicIndication) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{13}
}

func (x *RicIndication) GetInitiatingMessage() *e2ap_pdu_contents.Ricindication {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *RicIndication) GetProcedureCode() *e2ap_constants.IdRicindication {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *RicIndication) GetCriticality() *e2ap_commondatatypes.CriticalityIgnore {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:214
// {_ricServiceQuery}
type RicServiceQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.RicserviceQuery      `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	ProcedureCode     *e2ap_constants.IdRicserviceQuery       `protobuf:"bytes,2,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality       *e2ap_commondatatypes.CriticalityIgnore `protobuf:"bytes,3,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *RicServiceQuery) Reset() {
	*x = RicServiceQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicServiceQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicServiceQuery) ProtoMessage() {}

func (x *RicServiceQuery) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicServiceQuery.ProtoReflect.Descriptor instead.
func (*RicServiceQuery) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{14}
}

func (x *RicServiceQuery) GetInitiatingMessage() *e2ap_pdu_contents.RicserviceQuery {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *RicServiceQuery) GetProcedureCode() *e2ap_constants.IdRicserviceQuery {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *RicServiceQuery) GetCriticality() *e2ap_commondatatypes.CriticalityIgnore {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:220
// {_ricServiceUpdate}
type RicServiceUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.RicserviceUpdate `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	// @inject_tag: aper:"valueExt"
	SuccessfulOutcome *e2ap_pdu_contents.RicserviceUpdateAcknowledge `protobuf:"bytes,2,opt,name=successful_outcome,json=&SuccessfulOutcome,proto3" json:"successful_outcome,omitempty"`
	// @inject_tag: aper:"valueExt"
	UnsuccessfulOutcome *e2ap_pdu_contents.RicserviceUpdateFailure `protobuf:"bytes,3,opt,name=unsuccessful_outcome,json=&UnsuccessfulOutcome,proto3" json:"unsuccessful_outcome,omitempty"`
	ProcedureCode       *e2ap_constants.IdRicserviceUpdate         `protobuf:"bytes,4,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality         *e2ap_commondatatypes.CriticalityReject    `protobuf:"bytes,5,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *RicServiceUpdate) Reset() {
	*x = RicServiceUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicServiceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicServiceUpdate) ProtoMessage() {}

func (x *RicServiceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicServiceUpdate.ProtoReflect.Descriptor instead.
func (*RicServiceUpdate) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{15}
}

func (x *RicServiceUpdate) GetInitiatingMessage() *e2ap_pdu_contents.RicserviceUpdate {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *RicServiceUpdate) GetSuccessfulOutcome() *e2ap_pdu_contents.RicserviceUpdateAcknowledge {
	if x != nil {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *RicServiceUpdate) GetUnsuccessfulOutcome() *e2ap_pdu_contents.RicserviceUpdateFailure {
	if x != nil {
		return x.UnsuccessfulOutcome
	}
	return nil
}

func (x *RicServiceUpdate) GetProcedureCode() *e2ap_constants.IdRicserviceUpdate {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *RicServiceUpdate) GetCriticality() *e2ap_commondatatypes.CriticalityReject {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:228
// {_ricSubscription}
type RicSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.RicsubscriptionRequest `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	// @inject_tag: aper:"valueExt"
	SuccessfulOutcome *e2ap_pdu_contents.RicsubscriptionResponse `protobuf:"bytes,2,opt,name=successful_outcome,json=&SuccessfulOutcome,proto3" json:"successful_outcome,omitempty"`
	// @inject_tag: aper:"valueExt"
	UnsuccessfulOutcome *e2ap_pdu_contents.RicsubscriptionFailure `protobuf:"bytes,3,opt,name=unsuccessful_outcome,json=&UnsuccessfulOutcome,proto3" json:"unsuccessful_outcome,omitempty"`
	ProcedureCode       *e2ap_constants.IdRicsubscription         `protobuf:"bytes,4,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality         *e2ap_commondatatypes.CriticalityReject   `protobuf:"bytes,5,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *RicSubscription) Reset() {
	*x = RicSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicSubscription) ProtoMessage() {}

func (x *RicSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicSubscription.ProtoReflect.Descriptor instead.
func (*RicSubscription) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{16}
}

func (x *RicSubscription) GetInitiatingMessage() *e2ap_pdu_contents.RicsubscriptionRequest {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *RicSubscription) GetSuccessfulOutcome() *e2ap_pdu_contents.RicsubscriptionResponse {
	if x != nil {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *RicSubscription) GetUnsuccessfulOutcome() *e2ap_pdu_contents.RicsubscriptionFailure {
	if x != nil {
		return x.UnsuccessfulOutcome
	}
	return nil
}

func (x *RicSubscription) GetProcedureCode() *e2ap_constants.IdRicsubscription {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *RicSubscription) GetCriticality() *e2ap_commondatatypes.CriticalityReject {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:236
// {_ricSubscriptionDelete}
type RicSubscriptionDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.RicsubscriptionDeleteRequest `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	// @inject_tag: aper:"valueExt"
	SuccessfulOutcome *e2ap_pdu_contents.RicsubscriptionDeleteResponse `protobuf:"bytes,2,opt,name=successful_outcome,json=&SuccessfulOutcome,proto3" json:"successful_outcome,omitempty"`
	// @inject_tag: aper:"valueExt"
	UnsuccessfulOutcome *e2ap_pdu_contents.RicsubscriptionDeleteFailure `protobuf:"bytes,3,opt,name=unsuccessful_outcome,json=&UnsuccessfulOutcome,proto3" json:"unsuccessful_outcome,omitempty"`
	ProcedureCode       *e2ap_constants.IdRicsubscriptionDelete         `protobuf:"bytes,4,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality         *e2ap_commondatatypes.CriticalityReject         `protobuf:"bytes,5,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *RicSubscriptionDelete) Reset() {
	*x = RicSubscriptionDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicSubscriptionDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicSubscriptionDelete) ProtoMessage() {}

func (x *RicSubscriptionDelete) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicSubscriptionDelete.ProtoReflect.Descriptor instead.
func (*RicSubscriptionDelete) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{17}
}

func (x *RicSubscriptionDelete) GetInitiatingMessage() *e2ap_pdu_contents.RicsubscriptionDeleteRequest {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *RicSubscriptionDelete) GetSuccessfulOutcome() *e2ap_pdu_contents.RicsubscriptionDeleteResponse {
	if x != nil {
		return x.SuccessfulOutcome
	}
	return nil
}

func (x *RicSubscriptionDelete) GetUnsuccessfulOutcome() *e2ap_pdu_contents.RicsubscriptionDeleteFailure {
	if x != nil {
		return x.UnsuccessfulOutcome
	}
	return nil
}

func (x *RicSubscriptionDelete) GetProcedureCode() *e2ap_constants.IdRicsubscriptionDelete {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *RicSubscriptionDelete) GetCriticality() *e2ap_commondatatypes.CriticalityReject {
	if x != nil {
		return x.Criticality
	}
	return nil
}

// concrete instance(s) of class E2AP-ELEMENTARY-PROCEDURE from e2ap_v2.asn:244
// {_ricSubscriptionDeleteRequired}
type RicSubscriptionDeleteRequired struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: aper:"valueExt"
	InitiatingMessage *e2ap_pdu_contents.RicsubscriptionDeleteRequired `protobuf:"bytes,1,opt,name=initiating_message,json=&InitiatingMessage,proto3" json:"initiating_message,omitempty"`
	ProcedureCode     *e2ap_constants.IdRicsubscriptionDeleteRequired  `protobuf:"bytes,2,opt,name=procedure_code,json=&procedureCode,proto3" json:"procedure_code,omitempty"`
	Criticality       *e2ap_commondatatypes.CriticalityIgnore          `protobuf:"bytes,3,opt,name=criticality,json=&criticality,proto3" json:"criticality,omitempty"`
}

func (x *RicSubscriptionDeleteRequired) Reset() {
	*x = RicSubscriptionDeleteRequired{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RicSubscriptionDeleteRequired) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RicSubscriptionDeleteRequired) ProtoMessage() {}

func (x *RicSubscriptionDeleteRequired) ProtoReflect() protoreflect.Message {
	mi := &file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RicSubscriptionDeleteRequired.ProtoReflect.Descriptor instead.
func (*RicSubscriptionDeleteRequired) Descriptor() ([]byte, []int) {
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP(), []int{18}
}

func (x *RicSubscriptionDeleteRequired) GetInitiatingMessage() *e2ap_pdu_contents.RicsubscriptionDeleteRequired {
	if x != nil {
		return x.InitiatingMessage
	}
	return nil
}

func (x *RicSubscriptionDeleteRequired) GetProcedureCode() *e2ap_constants.IdRicsubscriptionDeleteRequired {
	if x != nil {
		return x.ProcedureCode
	}
	return nil
}

func (x *RicSubscriptionDeleteRequired) GetCriticality() *e2ap_commondatatypes.CriticalityIgnore {
	if x != nil {
		return x.Criticality
	}
	return nil
}

var File_api_e2ap_v2_e2ap_pdu_descriptions_proto protoreflect.FileDescriptor

var file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32,
	0x61, 0x70, 0x5f, 0x70, 0x64, 0x75, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x1a, 0x22, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32, 0x61, 0x70,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f,
	0x65, 0x32, 0x61, 0x70, 0x5f, 0x70, 0x64, 0x75, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32,
	0x2f, 0x65, 0x32, 0x61, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x83, 0x02, 0x0a, 0x07, 0x45, 0x32, 0x41, 0x70, 0x50, 0x64, 0x75, 0x12, 0x4b, 0x0a,
	0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x48, 0x00, 0x52, 0x11, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c,
	0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x75, 0x6e, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x55, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x13, 0x75, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x65, 0x32,
	0x5f, 0x61, 0x70, 0x5f, 0x70, 0x64, 0x75, 0x22, 0x5d, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x41, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x41, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x13, 0x55, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0e,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45,
	0x32, 0x41, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8b, 0x07, 0x0a, 0x18, 0x45, 0x32, 0x41, 0x70, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x10, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x17, 0x72, 0x69, 0x63,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x17, 0x72, 0x69, 0x63, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12, 0x72, 0x69, 0x63, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35,
	0x0a, 0x0b, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0b, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x07, 0x65, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x07, 0x65, 0x32, 0x73, 0x65, 0x74, 0x75,
	0x70, 0x12, 0x66, 0x0a, 0x1b, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70, 0x52, 0x1b, 0x65, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a, 0x13, 0x65, 0x32, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x70, 0x52, 0x13, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x12, 0x3e, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0e, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x11, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x11, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x10, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x52, 0x10,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x72, 0x0a, 0x20, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x52, 0x20, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x22, 0xcd, 0x04, 0x0a, 0x1e, 0x45, 0x32, 0x41, 0x70, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x31, 0x12, 0x44, 0x0a, 0x10, 0x72, 0x69, 0x63, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x72, 0x69, 0x63,
	0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a,
	0x17, 0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x17,
	0x72, 0x69, 0x63, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x72, 0x69, 0x63, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12,
	0x72, 0x69, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x72, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0b, 0x72, 0x69,
	0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2a, 0x0a, 0x07, 0x65, 0x32, 0x73,
	0x65, 0x74, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x07, 0x65, 0x32,
	0x73, 0x65, 0x74, 0x75, 0x70, 0x12, 0x66, 0x0a, 0x1b, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70,
	0x52, 0x1b, 0x65, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x4f, 0x0a,
	0x13, 0x65, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70, 0x52, 0x13, 0x65, 0x32, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x05, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x22, 0xe4, 0x02, 0x0a, 0x1e, 0x45, 0x32, 0x41, 0x70, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x73, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x32, 0x12, 0x3e, 0x0a, 0x0e, 0x72, 0x69, 0x63, 0x5f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x72, 0x69, 0x63, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x11, 0x72, 0x69, 0x63, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x11, 0x72, 0x69,
	0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x46, 0x0a, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x70, 0x52, 0x10, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x72, 0x0a, 0x20, 0x72, 0x69, 0x63, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x20, 0x72, 0x69, 0x63, 0x5f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x99, 0x03, 0x0a, 0x14,
	0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x70, 0x12, 0x4b, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12, 0x26,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x56, 0x0a, 0x12, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f,
	0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x12, 0x26, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x14, 0x75, 0x6e, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x14, 0x26, 0x55, 0x6e,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x12, 0x45, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x45, 0x32, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xbc, 0x03, 0x0a, 0x1b, 0x45, 0x32, 0x6e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x70, 0x12, 0x52, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5d, 0x0a, 0x12, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x12, 0x26, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x75, 0x6e,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x45, 0x32, 0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x52, 0x14, 0x26, 0x55, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x45, 0x32,
	0x6e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xe4, 0x02, 0x0a, 0x07, 0x45, 0x32, 0x73, 0x65, 0x74,
	0x75, 0x70, 0x12, 0x47, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x12, 0x26, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x75, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x32,
	0x73, 0x65, 0x74, 0x75, 0x70, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x14, 0x26, 0x55,
	0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x32, 0x61,
	0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x45, 0x32, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x0e,
	0x26, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d,
	0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xe0, 0x01,
	0x0a, 0x11, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x70, 0x12, 0x48, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79,
	0x22, 0x8f, 0x02, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x12, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x26,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x46, 0x0a, 0x12, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f,
	0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x26, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66,
	0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x22, 0xf6, 0x02, 0x0a, 0x0a, 0x52, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x12, 0x4a, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e, 0x0a,
	0x12, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x12, 0x26, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x4e, 0x0a,
	0x14, 0x75, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x14, 0x26, 0x55, 0x6e, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x64, 0x52, 0x69, 0x63, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x0e, 0x26, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x26,
	0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xd8, 0x01, 0x0a, 0x0d,
	0x52, 0x69, 0x63, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a,
	0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x52, 0x69, 0x63, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xde, 0x01, 0x0a, 0x0f, 0x52, 0x69, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x48, 0x0a, 0x12, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32,
	0x2e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x8d, 0x03, 0x0a, 0x10, 0x52, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x12,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x12, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69,
	0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63,
	0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x52, 0x12, 0x26, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x54, 0x0a,
	0x14, 0x75, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75,
	0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x14, 0x26,
	0x55, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x52, 0x69, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x8c, 0x03, 0x0a, 0x0f, 0x52, 0x69, 0x63, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x12, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76,
	0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74, 0x69,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x12,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e,
	0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x26, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x53,
	0x0a, 0x14, 0x75, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f,
	0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x14, 0x26,
	0x55, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63,
	0x6f, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32,
	0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xaa, 0x03, 0x0a, 0x15, 0x52, 0x69, 0x63, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x55, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65,
	0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f, 0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69,
	0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x12, 0x26, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12,
	0x59, 0x0a, 0x14, 0x75, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x5f,
	0x6f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x52, 0x14, 0x26, 0x55, 0x6e, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x4f, 0x75, 0x74, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x52,
	0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70,
	0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x22, 0x88, 0x02, 0x0a, 0x1d, 0x52, 0x69, 0x63, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x56, 0x0a, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x69, 0x63, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52, 0x12, 0x26, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e,
	0x49, 0x64, 0x52, 0x69, 0x63, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x52,
	0x0e, 0x26, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x3d, 0x0a, 0x0b, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x32, 0x61, 0x70, 0x2e, 0x76, 0x32, 0x2e, 0x43,
	0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x52, 0x0c, 0x26, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x43,
	0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6e, 0x6f,
	0x73, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x6f, 0x6e, 0x6f, 0x73, 0x2d, 0x65, 0x32,
	0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x32, 0x61, 0x70, 0x2f, 0x76, 0x32, 0x2f, 0x65, 0x32,
	0x61, 0x70, 0x2d, 0x70, 0x64, 0x75, 0x2d, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescOnce sync.Once
	file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescData = file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDesc
)

func file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescGZIP() []byte {
	file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescOnce.Do(func() {
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescData)
	})
	return file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDescData
}

var file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_e2ap_v2_e2ap_pdu_descriptions_proto_goTypes = []interface{}{
	(*E2ApPdu)(nil),                                                // 0: e2ap.v2.E2ApPdu
	(*InitiatingMessage)(nil),                                      // 1: e2ap.v2.InitiatingMessage
	(*SuccessfulOutcome)(nil),                                      // 2: e2ap.v2.SuccessfulOutcome
	(*UnsuccessfulOutcome)(nil),                                    // 3: e2ap.v2.UnsuccessfulOutcome
	(*E2ApElementaryProcedures)(nil),                               // 4: e2ap.v2.E2ApElementaryProcedures
	(*E2ApElementaryProceduresClass1)(nil),                         // 5: e2ap.v2.E2ApElementaryProceduresClass1
	(*E2ApElementaryProceduresClass2)(nil),                         // 6: e2ap.v2.E2ApElementaryProceduresClass2
	(*E2ConnectionUpdateEp)(nil),                                   // 7: e2ap.v2.E2connectionUpdateEp
	(*E2NodeConfigurationUpdateEp)(nil),                            // 8: e2ap.v2.E2nodeConfigurationUpdateEp
	(*E2Setup)(nil),                                                // 9: e2ap.v2.E2setup
	(*ErrorIndicationEp)(nil),                                      // 10: e2ap.v2.ErrorIndicationEp
	(*Reset)(nil),                                                  // 11: e2ap.v2.Reset
	(*RicControl)(nil),                                             // 12: e2ap.v2.RicControl
	(*RicIndication)(nil),                                          // 13: e2ap.v2.RicIndication
	(*RicServiceQuery)(nil),                                        // 14: e2ap.v2.RicServiceQuery
	(*RicServiceUpdate)(nil),                                       // 15: e2ap.v2.RicServiceUpdate
	(*RicSubscription)(nil),                                        // 16: e2ap.v2.RicSubscription
	(*RicSubscriptionDelete)(nil),                                  // 17: e2ap.v2.RicSubscriptionDelete
	(*RicSubscriptionDeleteRequired)(nil),                          // 18: e2ap.v2.RicSubscriptionDeleteRequired
	(*e2ap_pdu_contents.E2ConnectionUpdate)(nil),                   // 19: e2ap.v2.E2connectionUpdate
	(*e2ap_pdu_contents.E2ConnectionUpdateAcknowledge)(nil),        // 20: e2ap.v2.E2connectionUpdateAcknowledge
	(*e2ap_pdu_contents.E2ConnectionUpdateFailure)(nil),            // 21: e2ap.v2.E2connectionUpdateFailure
	(*e2ap_constants.IdE2ConnectionUpdate)(nil),                    // 22: e2ap.v2.IdE2connectionUpdate
	(*e2ap_commondatatypes.CriticalityReject)(nil),                 // 23: e2ap.v2.CriticalityReject
	(*e2ap_pdu_contents.E2NodeConfigurationUpdate)(nil),            // 24: e2ap.v2.E2nodeConfigurationUpdate
	(*e2ap_pdu_contents.E2NodeConfigurationUpdateAcknowledge)(nil), // 25: e2ap.v2.E2nodeConfigurationUpdateAcknowledge
	(*e2ap_pdu_contents.E2NodeConfigurationUpdateFailure)(nil),     // 26: e2ap.v2.E2nodeConfigurationUpdateFailure
	(*e2ap_constants.IdE2NodeConfigurationUpdate)(nil),             // 27: e2ap.v2.IdE2nodeConfigurationUpdate
	(*e2ap_pdu_contents.E2SetupRequest)(nil),                       // 28: e2ap.v2.E2setupRequest
	(*e2ap_pdu_contents.E2SetupResponse)(nil),                      // 29: e2ap.v2.E2setupResponse
	(*e2ap_pdu_contents.E2SetupFailure)(nil),                       // 30: e2ap.v2.E2setupFailure
	(*e2ap_constants.IdE2Setup)(nil),                               // 31: e2ap.v2.IdE2setup
	(*e2ap_pdu_contents.ErrorIndication)(nil),                      // 32: e2ap.v2.ErrorIndication
	(*e2ap_constants.IdErrorIndication)(nil),                       // 33: e2ap.v2.IdErrorIndication
	(*e2ap_commondatatypes.CriticalityIgnore)(nil),                 // 34: e2ap.v2.CriticalityIgnore
	(*e2ap_pdu_contents.ResetRequest)(nil),                         // 35: e2ap.v2.ResetRequest
	(*e2ap_pdu_contents.ResetResponse)(nil),                        // 36: e2ap.v2.ResetResponse
	(*e2ap_constants.IdReset)(nil),                                 // 37: e2ap.v2.IdReset
	(*e2ap_pdu_contents.RiccontrolRequest)(nil),                    // 38: e2ap.v2.RiccontrolRequest
	(*e2ap_pdu_contents.RiccontrolAcknowledge)(nil),                // 39: e2ap.v2.RiccontrolAcknowledge
	(*e2ap_pdu_contents.RiccontrolFailure)(nil),                    // 40: e2ap.v2.RiccontrolFailure
	(*e2ap_constants.IdRiccontrol)(nil),                            // 41: e2ap.v2.IdRiccontrol
	(*e2ap_pdu_contents.Ricindication)(nil),                        // 42: e2ap.v2.Ricindication
	(*e2ap_constants.IdRicindication)(nil),                         // 43: e2ap.v2.IdRicindication
	(*e2ap_pdu_contents.RicserviceQuery)(nil),                      // 44: e2ap.v2.RicserviceQuery
	(*e2ap_constants.IdRicserviceQuery)(nil),                       // 45: e2ap.v2.IdRicserviceQuery
	(*e2ap_pdu_contents.RicserviceUpdate)(nil),                     // 46: e2ap.v2.RicserviceUpdate
	(*e2ap_pdu_contents.RicserviceUpdateAcknowledge)(nil),          // 47: e2ap.v2.RicserviceUpdateAcknowledge
	(*e2ap_pdu_contents.RicserviceUpdateFailure)(nil),              // 48: e2ap.v2.RicserviceUpdateFailure
	(*e2ap_constants.IdRicserviceUpdate)(nil),                      // 49: e2ap.v2.IdRicserviceUpdate
	(*e2ap_pdu_contents.RicsubscriptionRequest)(nil),               // 50: e2ap.v2.RicsubscriptionRequest
	(*e2ap_pdu_contents.RicsubscriptionResponse)(nil),              // 51: e2ap.v2.RicsubscriptionResponse
	(*e2ap_pdu_contents.RicsubscriptionFailure)(nil),               // 52: e2ap.v2.RicsubscriptionFailure
	(*e2ap_constants.IdRicsubscription)(nil),                       // 53: e2ap.v2.IdRicsubscription
	(*e2ap_pdu_contents.RicsubscriptionDeleteRequest)(nil),         // 54: e2ap.v2.RicsubscriptionDeleteRequest
	(*e2ap_pdu_contents.RicsubscriptionDeleteResponse)(nil),        // 55: e2ap.v2.RicsubscriptionDeleteResponse
	(*e2ap_pdu_contents.RicsubscriptionDeleteFailure)(nil),         // 56: e2ap.v2.RicsubscriptionDeleteFailure
	(*e2ap_constants.IdRicsubscriptionDelete)(nil),                 // 57: e2ap.v2.IdRicsubscriptionDelete
	(*e2ap_pdu_contents.RicsubscriptionDeleteRequired)(nil),        // 58: e2ap.v2.RicsubscriptionDeleteRequired
	(*e2ap_constants.IdRicsubscriptionDeleteRequired)(nil),         // 59: e2ap.v2.IdRicsubscriptionDeleteRequired
}
var file_api_e2ap_v2_e2ap_pdu_descriptions_proto_depIdxs = []int32{
	1,  // 0: e2ap.v2.E2ApPdu.initiating_message:type_name -> e2ap.v2.InitiatingMessage
	2,  // 1: e2ap.v2.E2ApPdu.successful_outcome:type_name -> e2ap.v2.SuccessfulOutcome
	3,  // 2: e2ap.v2.E2ApPdu.unsuccessful_outcome:type_name -> e2ap.v2.UnsuccessfulOutcome
	4,  // 3: e2ap.v2.InitiatingMessage.procedure_code:type_name -> e2ap.v2.E2ApElementaryProcedures
	4,  // 4: e2ap.v2.SuccessfulOutcome.procedure_code:type_name -> e2ap.v2.E2ApElementaryProcedures
	4,  // 5: e2ap.v2.UnsuccessfulOutcome.procedure_code:type_name -> e2ap.v2.E2ApElementaryProcedures
	16, // 6: e2ap.v2.E2ApElementaryProcedures.ric_subscription:type_name -> e2ap.v2.RicSubscription
	17, // 7: e2ap.v2.E2ApElementaryProcedures.ric_subscription_delete:type_name -> e2ap.v2.RicSubscriptionDelete
	15, // 8: e2ap.v2.E2ApElementaryProcedures.ric_service_update:type_name -> e2ap.v2.RicServiceUpdate
	12, // 9: e2ap.v2.E2ApElementaryProcedures.ric_control:type_name -> e2ap.v2.RicControl
	9,  // 10: e2ap.v2.E2ApElementaryProcedures.e2setup:type_name -> e2ap.v2.E2setup
	8,  // 11: e2ap.v2.E2ApElementaryProcedures.e2node_configuration_update:type_name -> e2ap.v2.E2nodeConfigurationUpdateEp
	7,  // 12: e2ap.v2.E2ApElementaryProcedures.e2connection_update:type_name -> e2ap.v2.E2connectionUpdateEp
	11, // 13: e2ap.v2.E2ApElementaryProcedures.reset:type_name -> e2ap.v2.Reset
	13, // 14: e2ap.v2.E2ApElementaryProcedures.ric_indication:type_name -> e2ap.v2.RicIndication
	14, // 15: e2ap.v2.E2ApElementaryProcedures.ric_service_query:type_name -> e2ap.v2.RicServiceQuery
	10, // 16: e2ap.v2.E2ApElementaryProcedures.error_indication:type_name -> e2ap.v2.ErrorIndicationEp
	18, // 17: e2ap.v2.E2ApElementaryProcedures.ric_subscription_delete_required:type_name -> e2ap.v2.RicSubscriptionDeleteRequired
	16, // 18: e2ap.v2.E2ApElementaryProceduresClass1.ric_subscription:type_name -> e2ap.v2.RicSubscription
	17, // 19: e2ap.v2.E2ApElementaryProceduresClass1.ric_subscription_delete:type_name -> e2ap.v2.RicSubscriptionDelete
	15, // 20: e2ap.v2.E2ApElementaryProceduresClass1.ric_service_update:type_name -> e2ap.v2.RicServiceUpdate
	12, // 21: e2ap.v2.E2ApElementaryProceduresClass1.ric_control:type_name -> e2ap.v2.RicControl
	9,  // 22: e2ap.v2.E2ApElementaryProceduresClass1.e2setup:type_name -> e2ap.v2.E2setup
	8,  // 23: e2ap.v2.E2ApElementaryProceduresClass1.e2node_configuration_update:type_name -> e2ap.v2.E2nodeConfigurationUpdateEp
	7,  // 24: e2ap.v2.E2ApElementaryProceduresClass1.e2connection_update:type_name -> e2ap.v2.E2connectionUpdateEp
	11, // 25: e2ap.v2.E2ApElementaryProceduresClass1.reset:type_name -> e2ap.v2.Reset
	13, // 26: e2ap.v2.E2ApElementaryProceduresClass2.ric_indication:type_name -> e2ap.v2.RicIndication
	14, // 27: e2ap.v2.E2ApElementaryProceduresClass2.ric_service_query:type_name -> e2ap.v2.RicServiceQuery
	10, // 28: e2ap.v2.E2ApElementaryProceduresClass2.error_indication:type_name -> e2ap.v2.ErrorIndicationEp
	18, // 29: e2ap.v2.E2ApElementaryProceduresClass2.ric_subscription_delete_required:type_name -> e2ap.v2.RicSubscriptionDeleteRequired
	19, // 30: e2ap.v2.E2connectionUpdateEp.initiating_message:type_name -> e2ap.v2.E2connectionUpdate
	20, // 31: e2ap.v2.E2connectionUpdateEp.successful_outcome:type_name -> e2ap.v2.E2connectionUpdateAcknowledge
	21, // 32: e2ap.v2.E2connectionUpdateEp.unsuccessful_outcome:type_name -> e2ap.v2.E2connectionUpdateFailure
	22, // 33: e2ap.v2.E2connectionUpdateEp.procedure_code:type_name -> e2ap.v2.IdE2connectionUpdate
	23, // 34: e2ap.v2.E2connectionUpdateEp.criticality:type_name -> e2ap.v2.CriticalityReject
	24, // 35: e2ap.v2.E2nodeConfigurationUpdateEp.initiating_message:type_name -> e2ap.v2.E2nodeConfigurationUpdate
	25, // 36: e2ap.v2.E2nodeConfigurationUpdateEp.successful_outcome:type_name -> e2ap.v2.E2nodeConfigurationUpdateAcknowledge
	26, // 37: e2ap.v2.E2nodeConfigurationUpdateEp.unsuccessful_outcome:type_name -> e2ap.v2.E2nodeConfigurationUpdateFailure
	27, // 38: e2ap.v2.E2nodeConfigurationUpdateEp.procedure_code:type_name -> e2ap.v2.IdE2nodeConfigurationUpdate
	23, // 39: e2ap.v2.E2nodeConfigurationUpdateEp.criticality:type_name -> e2ap.v2.CriticalityReject
	28, // 40: e2ap.v2.E2setup.initiating_message:type_name -> e2ap.v2.E2setupRequest
	29, // 41: e2ap.v2.E2setup.successful_outcome:type_name -> e2ap.v2.E2setupResponse
	30, // 42: e2ap.v2.E2setup.unsuccessful_outcome:type_name -> e2ap.v2.E2setupFailure
	31, // 43: e2ap.v2.E2setup.procedure_code:type_name -> e2ap.v2.IdE2setup
	23, // 44: e2ap.v2.E2setup.criticality:type_name -> e2ap.v2.CriticalityReject
	32, // 45: e2ap.v2.ErrorIndicationEp.initiating_message:type_name -> e2ap.v2.ErrorIndication
	33, // 46: e2ap.v2.ErrorIndicationEp.procedure_code:type_name -> e2ap.v2.IdErrorIndication
	34, // 47: e2ap.v2.ErrorIndicationEp.criticality:type_name -> e2ap.v2.CriticalityIgnore
	35, // 48: e2ap.v2.Reset.initiating_message:type_name -> e2ap.v2.ResetRequest
	36, // 49: e2ap.v2.Reset.successful_outcome:type_name -> e2ap.v2.ResetResponse
	37, // 50: e2ap.v2.Reset.procedure_code:type_name -> e2ap.v2.IdReset
	23, // 51: e2ap.v2.Reset.criticality:type_name -> e2ap.v2.CriticalityReject
	38, // 52: e2ap.v2.RicControl.initiating_message:type_name -> e2ap.v2.RiccontrolRequest
	39, // 53: e2ap.v2.RicControl.successful_outcome:type_name -> e2ap.v2.RiccontrolAcknowledge
	40, // 54: e2ap.v2.RicControl.unsuccessful_outcome:type_name -> e2ap.v2.RiccontrolFailure
	41, // 55: e2ap.v2.RicControl.procedure_code:type_name -> e2ap.v2.IdRiccontrol
	23, // 56: e2ap.v2.RicControl.criticality:type_name -> e2ap.v2.CriticalityReject
	42, // 57: e2ap.v2.RicIndication.initiating_message:type_name -> e2ap.v2.Ricindication
	43, // 58: e2ap.v2.RicIndication.procedure_code:type_name -> e2ap.v2.IdRicindication
	34, // 59: e2ap.v2.RicIndication.criticality:type_name -> e2ap.v2.CriticalityIgnore
	44, // 60: e2ap.v2.RicServiceQuery.initiating_message:type_name -> e2ap.v2.RicserviceQuery
	45, // 61: e2ap.v2.RicServiceQuery.procedure_code:type_name -> e2ap.v2.IdRicserviceQuery
	34, // 62: e2ap.v2.RicServiceQuery.criticality:type_name -> e2ap.v2.CriticalityIgnore
	46, // 63: e2ap.v2.RicServiceUpdate.initiating_message:type_name -> e2ap.v2.RicserviceUpdate
	47, // 64: e2ap.v2.RicServiceUpdate.successful_outcome:type_name -> e2ap.v2.RicserviceUpdateAcknowledge
	48, // 65: e2ap.v2.RicServiceUpdate.unsuccessful_outcome:type_name -> e2ap.v2.RicserviceUpdateFailure
	49, // 66: e2ap.v2.RicServiceUpdate.procedure_code:type_name -> e2ap.v2.IdRicserviceUpdate
	23, // 67: e2ap.v2.RicServiceUpdate.criticality:type_name -> e2ap.v2.CriticalityReject
	50, // 68: e2ap.v2.RicSubscription.initiating_message:type_name -> e2ap.v2.RicsubscriptionRequest
	51, // 69: e2ap.v2.RicSubscription.successful_outcome:type_name -> e2ap.v2.RicsubscriptionResponse
	52, // 70: e2ap.v2.RicSubscription.unsuccessful_outcome:type_name -> e2ap.v2.RicsubscriptionFailure
	53, // 71: e2ap.v2.RicSubscription.procedure_code:type_name -> e2ap.v2.IdRicsubscription
	23, // 72: e2ap.v2.RicSubscription.criticality:type_name -> e2ap.v2.CriticalityReject
	54, // 73: e2ap.v2.RicSubscriptionDelete.initiating_message:type_name -> e2ap.v2.RicsubscriptionDeleteRequest
	55, // 74: e2ap.v2.RicSubscriptionDelete.successful_outcome:type_name -> e2ap.v2.RicsubscriptionDeleteResponse
	56, // 75: e2ap.v2.RicSubscriptionDelete.unsuccessful_outcome:type_name -> e2ap.v2.RicsubscriptionDeleteFailure
	57, // 76: e2ap.v2.RicSubscriptionDelete.procedure_code:type_name -> e2ap.v2.IdRicsubscriptionDelete
	23, // 77: e2ap.v2.RicSubscriptionDelete.criticality:type_name -> e2ap.v2.CriticalityReject
	58, // 78: e2ap.v2.RicSubscriptionDeleteRequired.initiating_message:type_name -> e2ap.v2.RicsubscriptionDeleteRequired
	59, // 79: e2ap.v2.RicSubscriptionDeleteRequired.procedure_code:type_name -> e2ap.v2.IdRicsubscriptionDeleteRequired
	34, // 80: e2ap.v2.RicSubscriptionDeleteRequired.criticality:type_name -> e2ap.v2.CriticalityIgnore
	81, // [81:81] is the sub-list for method output_type
	81, // [81:81] is the sub-list for method input_type
	81, // [81:81] is the sub-list for extension type_name
	81, // [81:81] is the sub-list for extension extendee
	0,  // [0:81] is the sub-list for field type_name
}

func init() { file_api_e2ap_v2_e2ap_pdu_descriptions_proto_init() }
func file_api_e2ap_v2_e2ap_pdu_descriptions_proto_init() {
	if File_api_e2ap_v2_e2ap_pdu_descriptions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ApPdu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitiatingMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuccessfulOutcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsuccessfulOutcome); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ApElementaryProcedures); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ApElementaryProceduresClass1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ApElementaryProceduresClass2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2ConnectionUpdateEp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2NodeConfigurationUpdateEp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*E2Setup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorIndicationEp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicIndication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicServiceQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicServiceUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicSubscriptionDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RicSubscriptionDeleteRequired); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*E2ApPdu_InitiatingMessage)(nil),
		(*E2ApPdu_SuccessfulOutcome)(nil),
		(*E2ApPdu_UnsuccessfulOutcome)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_e2ap_v2_e2ap_pdu_descriptions_proto_goTypes,
		DependencyIndexes: file_api_e2ap_v2_e2ap_pdu_descriptions_proto_depIdxs,
		MessageInfos:      file_api_e2ap_v2_e2ap_pdu_descriptions_proto_msgTypes,
	}.Build()
	File_api_e2ap_v2_e2ap_pdu_descriptions_proto = out.File
	file_api_e2ap_v2_e2ap_pdu_descriptions_proto_rawDesc = nil
	file_api_e2ap_v2_e2ap_pdu_descriptions_proto_goTypes = nil
	file_api_e2ap_v2_e2ap_pdu_descriptions_proto_depIdxs = nil
}
