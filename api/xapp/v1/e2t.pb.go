// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/xapp/v1/e2t.proto

// Package xapp defines the interior gRPC interfaces for xApps to interact with E2T.

package xapp

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type RegisterAppRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterAppRequest) Reset()         { *m = RegisterAppRequest{} }
func (m *RegisterAppRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterAppRequest) ProtoMessage()    {}
func (*RegisterAppRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1efc8e113ae35d9c, []int{0}
}
func (m *RegisterAppRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterAppRequest.Unmarshal(m, b)
}
func (m *RegisterAppRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterAppRequest.Marshal(b, m, deterministic)
}
func (m *RegisterAppRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterAppRequest.Merge(m, src)
}
func (m *RegisterAppRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterAppRequest.Size(m)
}
func (m *RegisterAppRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterAppRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterAppRequest proto.InternalMessageInfo

type RegisterAppResponse struct {
	// ID of E2 node that sent the message
	E2Node string `protobuf:"bytes,1,opt,name=e2node,proto3" json:"e2node,omitempty"`
	// Service model ID
	ServiceModel string `protobuf:"bytes,2,opt,name=service_model,json=serviceModel,proto3" json:"service_model,omitempty"`
	// Message data (encoded as ASN.1 or Protobuf)
	Payload              []byte   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterAppResponse) Reset()         { *m = RegisterAppResponse{} }
func (m *RegisterAppResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterAppResponse) ProtoMessage()    {}
func (*RegisterAppResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1efc8e113ae35d9c, []int{1}
}
func (m *RegisterAppResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterAppResponse.Unmarshal(m, b)
}
func (m *RegisterAppResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterAppResponse.Marshal(b, m, deterministic)
}
func (m *RegisterAppResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterAppResponse.Merge(m, src)
}
func (m *RegisterAppResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterAppResponse.Size(m)
}
func (m *RegisterAppResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterAppResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterAppResponse proto.InternalMessageInfo

func (m *RegisterAppResponse) GetE2Node() string {
	if m != nil {
		return m.E2Node
	}
	return ""
}

func (m *RegisterAppResponse) GetServiceModel() string {
	if m != nil {
		return m.ServiceModel
	}
	return ""
}

func (m *RegisterAppResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterAppRequest)(nil), "xapp.v1.RegisterAppRequest")
	proto.RegisterType((*RegisterAppResponse)(nil), "xapp.v1.RegisterAppResponse")
}

func init() { proto.RegisterFile("api/xapp/v1/e2t.proto", fileDescriptor_1efc8e113ae35d9c) }

var fileDescriptor_1efc8e113ae35d9c = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x3f, 0x4b, 0x04, 0x31,
	0x14, 0xc4, 0x89, 0xc2, 0x1d, 0x3e, 0xcf, 0x26, 0xfe, 0x61, 0x39, 0x45, 0x8e, 0xb3, 0xd9, 0x6a,
	0xe3, 0xc5, 0x4f, 0x60, 0x61, 0xa7, 0x4d, 0xb4, 0xb2, 0x91, 0x9c, 0x79, 0x2e, 0x81, 0xb8, 0xef,
	0x99, 0x64, 0x17, 0xfd, 0xf6, 0xb2, 0x7f, 0x04, 0xc5, 0x2b, 0xe7, 0x37, 0x03, 0x33, 0x03, 0xa7,
	0x96, 0xbd, 0xfa, 0xb4, 0xcc, 0xaa, 0xdb, 0x28, 0xd4, 0xb9, 0xe2, 0x48, 0x99, 0xe4, 0xbc, 0x47,
	0x55, 0xb7, 0x59, 0x5e, 0xd6, 0x44, 0x75, 0x40, 0x35, 0xe0, 0x6d, 0xfb, 0xa6, 0x5c, 0x1b, 0x6d,
	0xf6, 0xd4, 0x8c, 0xc1, 0xf5, 0x09, 0x48, 0x83, 0xb5, 0x4f, 0x19, 0xe3, 0x2d, 0xb3, 0xc1, 0x8f,
	0x16, 0x53, 0x5e, 0x07, 0x38, 0xfe, 0x43, 0x13, 0x53, 0x93, 0x50, 0x9e, 0xc1, 0x0c, 0x75, 0x43,
	0x0e, 0x0b, 0xb1, 0x12, 0xe5, 0x81, 0x99, 0x94, 0xbc, 0x82, 0xa3, 0x84, 0xb1, 0xf3, 0xaf, 0xf8,
	0xf2, 0x4e, 0x0e, 0x43, 0xb1, 0x37, 0xd8, 0x8b, 0x09, 0x3e, 0xf4, 0x4c, 0x16, 0x30, 0x67, 0xfb,
	0x15, 0xc8, 0xba, 0x62, 0x7f, 0x25, 0xca, 0x85, 0xf9, 0x91, 0xfa, 0x19, 0xe0, 0x4e, 0x3f, 0x3d,
	0x8e, 0x61, 0x79, 0x0f, 0x87, 0xbf, 0xba, 0xe5, 0x79, 0x35, 0x5d, 0xa9, 0xfe, 0xef, 0x5c, 0x5e,
	0xec, 0x36, 0xc7, 0xb9, 0xa5, 0xb8, 0x16, 0xdb, 0xd9, 0x70, 0xf3, 0xe6, 0x3b, 0x00, 0x00, 0xff,
	0xff, 0x6e, 0x47, 0x79, 0x53, 0x28, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// E2TServiceClient is the client API for E2TService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type E2TServiceClient interface {
	// RegisterApp establishes a bi-directional stream for conducting interactions with the E2 nodes in the RAN environment.
	RegisterApp(ctx context.Context, opts ...grpc.CallOption) (E2TService_RegisterAppClient, error)
}

type e2TServiceClient struct {
	cc *grpc.ClientConn
}

func NewE2TServiceClient(cc *grpc.ClientConn) E2TServiceClient {
	return &e2TServiceClient{cc}
}

func (c *e2TServiceClient) RegisterApp(ctx context.Context, opts ...grpc.CallOption) (E2TService_RegisterAppClient, error) {
	stream, err := c.cc.NewStream(ctx, &_E2TService_serviceDesc.Streams[0], "/xapp.v1.E2TService/RegisterApp", opts...)
	if err != nil {
		return nil, err
	}
	x := &e2TServiceRegisterAppClient{stream}
	return x, nil
}

type E2TService_RegisterAppClient interface {
	Send(*RegisterAppRequest) error
	Recv() (*RegisterAppResponse, error)
	grpc.ClientStream
}

type e2TServiceRegisterAppClient struct {
	grpc.ClientStream
}

func (x *e2TServiceRegisterAppClient) Send(m *RegisterAppRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *e2TServiceRegisterAppClient) Recv() (*RegisterAppResponse, error) {
	m := new(RegisterAppResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// E2TServiceServer is the server API for E2TService service.
type E2TServiceServer interface {
	// RegisterApp establishes a bi-directional stream for conducting interactions with the E2 nodes in the RAN environment.
	RegisterApp(E2TService_RegisterAppServer) error
}

// UnimplementedE2TServiceServer can be embedded to have forward compatible implementations.
type UnimplementedE2TServiceServer struct {
}

func (*UnimplementedE2TServiceServer) RegisterApp(srv E2TService_RegisterAppServer) error {
	return status.Errorf(codes.Unimplemented, "method RegisterApp not implemented")
}

func RegisterE2TServiceServer(s *grpc.Server, srv E2TServiceServer) {
	s.RegisterService(&_E2TService_serviceDesc, srv)
}

func _E2TService_RegisterApp_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(E2TServiceServer).RegisterApp(&e2TServiceRegisterAppServer{stream})
}

type E2TService_RegisterAppServer interface {
	Send(*RegisterAppResponse) error
	Recv() (*RegisterAppRequest, error)
	grpc.ServerStream
}

type e2TServiceRegisterAppServer struct {
	grpc.ServerStream
}

func (x *e2TServiceRegisterAppServer) Send(m *RegisterAppResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *e2TServiceRegisterAppServer) Recv() (*RegisterAppRequest, error) {
	m := new(RegisterAppRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _E2TService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "xapp.v1.E2TService",
	HandlerType: (*E2TServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "RegisterApp",
			Handler:       _E2TService_RegisterApp_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/xapp/v1/e2t.proto",
}
