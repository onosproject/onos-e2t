// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/ricapi/e2/headers/v1beta1/headers.proto

package v1beta1

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// EncodingType determines encoding type for the response messages
type EncodingType int32

const (
	EncodingType_ENCODING_TYPE_ASN1  EncodingType = 0
	EncodingType_ENCODING_TYPE_PROTO EncodingType = 1
)

var EncodingType_name = map[int32]string{
	0: "ENCODING_TYPE_ASN1",
	1: "ENCODING_TYPE_PROTO",
}

var EncodingType_value = map[string]int32{
	"ENCODING_TYPE_ASN1":  0,
	"ENCODING_TYPE_PROTO": 1,
}

func (x EncodingType) String() string {
	return proto.EnumName(EncodingType_name, int32(x))
}

func (EncodingType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6f29ad563ec8c20e, []int{0}
}

// ResponseStatus
type ResponseStatus int32

const (
	ResponseStatus_RESPONSE_STATUS_FAILED     ResponseStatus = 0
	ResponseStatus_RESPONSE_STATUS_SUCCESSFUL ResponseStatus = 1
)

var ResponseStatus_name = map[int32]string{
	0: "RESPONSE_STATUS_FAILED",
	1: "RESPONSE_STATUS_SUCCESSFUL",
}

var ResponseStatus_value = map[string]int32{
	"RESPONSE_STATUS_FAILED":     0,
	"RESPONSE_STATUS_SUCCESSFUL": 1,
}

func (x ResponseStatus) String() string {
	return proto.EnumName(ResponseStatus_name, int32(x))
}

func (ResponseStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6f29ad563ec8c20e, []int{1}
}

type ServiceModelInfo struct {
	ServiceModelId       string   `protobuf:"bytes,1,opt,name=service_model_id,json=serviceModelId,proto3" json:"service_model_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceModelInfo) Reset()         { *m = ServiceModelInfo{} }
func (m *ServiceModelInfo) String() string { return proto.CompactTextString(m) }
func (*ServiceModelInfo) ProtoMessage()    {}
func (*ServiceModelInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f29ad563ec8c20e, []int{0}
}
func (m *ServiceModelInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceModelInfo.Unmarshal(m, b)
}
func (m *ServiceModelInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceModelInfo.Marshal(b, m, deterministic)
}
func (m *ServiceModelInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceModelInfo.Merge(m, src)
}
func (m *ServiceModelInfo) XXX_Size() int {
	return xxx_messageInfo_ServiceModelInfo.Size(m)
}
func (m *ServiceModelInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceModelInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceModelInfo proto.InternalMessageInfo

func (m *ServiceModelInfo) GetServiceModelId() string {
	if m != nil {
		return m.ServiceModelId
	}
	return ""
}

// RequestHeader a common request header for all requests including encoding type, client/xApp/session info, ordering info, etc
type RequestHeader struct {
	EncodingType         EncodingType      `protobuf:"varint,1,opt,name=encoding_type,json=encodingType,proto3,enum=ricapi.e2.headers.v1beta1.EncodingType" json:"encoding_type,omitempty"`
	ServiceModelInfo     *ServiceModelInfo `protobuf:"bytes,2,opt,name=service_model_info,json=serviceModelInfo,proto3" json:"service_model_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RequestHeader) Reset()         { *m = RequestHeader{} }
func (m *RequestHeader) String() string { return proto.CompactTextString(m) }
func (*RequestHeader) ProtoMessage()    {}
func (*RequestHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f29ad563ec8c20e, []int{1}
}
func (m *RequestHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeader.Unmarshal(m, b)
}
func (m *RequestHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeader.Marshal(b, m, deterministic)
}
func (m *RequestHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeader.Merge(m, src)
}
func (m *RequestHeader) XXX_Size() int {
	return xxx_messageInfo_RequestHeader.Size(m)
}
func (m *RequestHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeader.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeader proto.InternalMessageInfo

func (m *RequestHeader) GetEncodingType() EncodingType {
	if m != nil {
		return m.EncodingType
	}
	return EncodingType_ENCODING_TYPE_ASN1
}

func (m *RequestHeader) GetServiceModelInfo() *ServiceModelInfo {
	if m != nil {
		return m.ServiceModelInfo
	}
	return nil
}

// ResponseHeader a common response header for all responses including encoding type, client/xApp/session info, ordering info, etc
type ResponseHeader struct {
	EncodingType         EncodingType      `protobuf:"varint,1,opt,name=encoding_type,json=encodingType,proto3,enum=ricapi.e2.headers.v1beta1.EncodingType" json:"encoding_type,omitempty"`
	ServiceModelInfo     *ServiceModelInfo `protobuf:"bytes,2,opt,name=service_model_info,json=serviceModelInfo,proto3" json:"service_model_info,omitempty"`
	ResponseStatus       ResponseStatus    `protobuf:"varint,3,opt,name=response_status,json=responseStatus,proto3,enum=ricapi.e2.headers.v1beta1.ResponseStatus" json:"response_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResponseHeader) Reset()         { *m = ResponseHeader{} }
func (m *ResponseHeader) String() string { return proto.CompactTextString(m) }
func (*ResponseHeader) ProtoMessage()    {}
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_6f29ad563ec8c20e, []int{2}
}
func (m *ResponseHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseHeader.Unmarshal(m, b)
}
func (m *ResponseHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseHeader.Marshal(b, m, deterministic)
}
func (m *ResponseHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseHeader.Merge(m, src)
}
func (m *ResponseHeader) XXX_Size() int {
	return xxx_messageInfo_ResponseHeader.Size(m)
}
func (m *ResponseHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseHeader.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseHeader proto.InternalMessageInfo

func (m *ResponseHeader) GetEncodingType() EncodingType {
	if m != nil {
		return m.EncodingType
	}
	return EncodingType_ENCODING_TYPE_ASN1
}

func (m *ResponseHeader) GetServiceModelInfo() *ServiceModelInfo {
	if m != nil {
		return m.ServiceModelInfo
	}
	return nil
}

func (m *ResponseHeader) GetResponseStatus() ResponseStatus {
	if m != nil {
		return m.ResponseStatus
	}
	return ResponseStatus_RESPONSE_STATUS_FAILED
}

func init() {
	proto.RegisterEnum("ricapi.e2.headers.v1beta1.EncodingType", EncodingType_name, EncodingType_value)
	proto.RegisterEnum("ricapi.e2.headers.v1beta1.ResponseStatus", ResponseStatus_name, ResponseStatus_value)
	proto.RegisterType((*ServiceModelInfo)(nil), "ricapi.e2.headers.v1beta1.ServiceModelInfo")
	proto.RegisterType((*RequestHeader)(nil), "ricapi.e2.headers.v1beta1.RequestHeader")
	proto.RegisterType((*ResponseHeader)(nil), "ricapi.e2.headers.v1beta1.ResponseHeader")
}

func init() {
	proto.RegisterFile("api/ricapi/e2/headers/v1beta1/headers.proto", fileDescriptor_6f29ad563ec8c20e)
}

var fileDescriptor_6f29ad563ec8c20e = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x53, 0x41, 0x6b, 0xe2, 0x40,
	0x18, 0x35, 0x2e, 0x2c, 0xec, 0xac, 0x66, 0xc3, 0x2c, 0xb8, 0xae, 0x87, 0x45, 0xbc, 0xac, 0xab,
	0x6c, 0x82, 0xd9, 0xeb, 0x16, 0xb1, 0x1a, 0x5b, 0x21, 0x4d, 0x64, 0x26, 0x1e, 0xec, 0x65, 0x88,
	0xc9, 0xa7, 0xa6, 0xd4, 0x4c, 0x9a, 0x19, 0x05, 0x7f, 0x44, 0xff, 0x4f, 0x7f, 0x5e, 0x31, 0x2a,
	0xd5, 0x40, 0xbd, 0xf7, 0x94, 0xbc, 0xf7, 0xbd, 0xef, 0xf1, 0xde, 0x30, 0x83, 0xda, 0x7e, 0x12,
	0x19, 0x69, 0x14, 0xec, 0x3e, 0x60, 0x1a, 0x4b, 0xf0, 0x43, 0x48, 0x85, 0xb1, 0xe9, 0xcc, 0x40,
	0xfa, 0x9d, 0x23, 0xd6, 0x93, 0x94, 0x4b, 0x8e, 0x7f, 0xee, 0x85, 0x3a, 0x98, 0xfa, 0x71, 0x70,
	0x10, 0x36, 0xfe, 0x23, 0x8d, 0x42, 0xba, 0x89, 0x02, 0xb8, 0xe3, 0x21, 0x3c, 0x8e, 0xe2, 0x39,
	0xc7, 0x4d, 0xa4, 0x89, 0x3d, 0xc7, 0x56, 0x3b, 0x92, 0x45, 0x61, 0x55, 0xa9, 0x2b, 0xcd, 0x2f,
	0x44, 0x15, 0xa7, 0xda, 0xb0, 0xf1, 0xa2, 0xa0, 0x32, 0x81, 0xa7, 0x35, 0x08, 0x79, 0x9b, 0x19,
	0x63, 0x1b, 0x95, 0x21, 0x0e, 0x78, 0x18, 0xc5, 0x0b, 0x26, 0xb7, 0x09, 0x64, 0x8b, 0xaa, 0xf9,
	0x5b, 0x7f, 0x37, 0x82, 0x6e, 0x1d, 0xf4, 0xde, 0x36, 0x01, 0x52, 0x82, 0x13, 0x84, 0xa7, 0x08,
	0xe7, 0x92, 0xc4, 0x73, 0x5e, 0x2d, 0xd6, 0x95, 0xe6, 0x57, 0xb3, 0x7d, 0xc1, 0x32, 0x5f, 0x89,
	0x68, 0x22, 0xc7, 0x34, 0x9e, 0x8b, 0x48, 0x25, 0x20, 0x12, 0x1e, 0x0b, 0xf8, 0x60, 0xd9, 0x31,
	0x41, 0xdf, 0xd2, 0x43, 0x74, 0x26, 0xa4, 0x2f, 0xd7, 0xa2, 0xfa, 0x29, 0x8b, 0xfa, 0xe7, 0x82,
	0xef, 0xb1, 0x2c, 0xcd, 0x16, 0x88, 0x9a, 0x9e, 0xe1, 0x56, 0x17, 0x95, 0x4e, 0xcb, 0xe0, 0x0a,
	0xc2, 0x96, 0xd3, 0x77, 0x07, 0x23, 0xe7, 0x86, 0x79, 0xd3, 0xb1, 0xc5, 0x7a, 0xd4, 0xe9, 0x68,
	0x05, 0xfc, 0x03, 0x7d, 0x3f, 0xe7, 0xc7, 0xc4, 0xf5, 0x5c, 0x4d, 0x69, 0xd9, 0x6f, 0xe7, 0xb9,
	0xb7, 0xc4, 0x35, 0x54, 0x21, 0x16, 0x1d, 0xbb, 0x0e, 0xb5, 0x18, 0xf5, 0x7a, 0xde, 0x84, 0xb2,
	0x61, 0x6f, 0x64, 0x5b, 0x03, 0xad, 0x80, 0x7f, 0xa1, 0x5a, 0x7e, 0x46, 0x27, 0xfd, 0xbe, 0x45,
	0xe9, 0x70, 0x62, 0x6b, 0xca, 0x75, 0xf7, 0xfe, 0x6a, 0x11, 0xc9, 0xe5, 0x7a, 0xa6, 0x07, 0x7c,
	0x65, 0xf0, 0x98, 0x8b, 0x24, 0xe5, 0x0f, 0x10, 0xc8, 0xec, 0xff, 0x2f, 0x98, 0xd2, 0xb8, 0xf8,
	0x02, 0x66, 0x9f, 0xb3, 0xab, 0xff, 0xef, 0x35, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x42, 0x88, 0x12,
	0x29, 0x03, 0x00, 0x00,
}
