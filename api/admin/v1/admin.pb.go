// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/admin/v1/admin.proto

// Package admin.v1 defines the administrative gRPC interfaces.

package admin

import (
	context "context"
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// UploadRegisterServiceModelRequest is for streaming a model plugin file to the server.
// There is a built in limit in gRPC of 4MB - plugin is usually around 20MB
// so break in to chunks of approx 1-2MB.
type UploadRegisterServiceModelRequest struct {
	// so_file is the name being streamed.
	SoFile string `protobuf:"bytes,1,opt,name=so_file,json=soFile,proto3" json:"so_file,omitempty"`
	// content is the bytes content.
	Content              []byte   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRegisterServiceModelRequest) Reset()         { *m = UploadRegisterServiceModelRequest{} }
func (m *UploadRegisterServiceModelRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRegisterServiceModelRequest) ProtoMessage()    {}
func (*UploadRegisterServiceModelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ca6f53999f59fc, []int{0}
}
func (m *UploadRegisterServiceModelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRegisterServiceModelRequest.Unmarshal(m, b)
}
func (m *UploadRegisterServiceModelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRegisterServiceModelRequest.Marshal(b, m, deterministic)
}
func (m *UploadRegisterServiceModelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRegisterServiceModelRequest.Merge(m, src)
}
func (m *UploadRegisterServiceModelRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRegisterServiceModelRequest.Size(m)
}
func (m *UploadRegisterServiceModelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRegisterServiceModelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRegisterServiceModelRequest proto.InternalMessageInfo

func (m *UploadRegisterServiceModelRequest) GetSoFile() string {
	if m != nil {
		return m.SoFile
	}
	return ""
}

func (m *UploadRegisterServiceModelRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

// UploadRegisterServiceModelResponse carries status of model plugin registration.
type UploadRegisterServiceModelResponse struct {
	// name is name of the model plugin.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version is the semantic version of the model plugin.
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRegisterServiceModelResponse) Reset()         { *m = UploadRegisterServiceModelResponse{} }
func (m *UploadRegisterServiceModelResponse) String() string { return proto.CompactTextString(m) }
func (*UploadRegisterServiceModelResponse) ProtoMessage()    {}
func (*UploadRegisterServiceModelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ca6f53999f59fc, []int{1}
}
func (m *UploadRegisterServiceModelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRegisterServiceModelResponse.Unmarshal(m, b)
}
func (m *UploadRegisterServiceModelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRegisterServiceModelResponse.Marshal(b, m, deterministic)
}
func (m *UploadRegisterServiceModelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRegisterServiceModelResponse.Merge(m, src)
}
func (m *UploadRegisterServiceModelResponse) XXX_Size() int {
	return xxx_messageInfo_UploadRegisterServiceModelResponse.Size(m)
}
func (m *UploadRegisterServiceModelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRegisterServiceModelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRegisterServiceModelResponse proto.InternalMessageInfo

func (m *UploadRegisterServiceModelResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UploadRegisterServiceModelResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// ListRegisteredServiceModelsResponse is general information about a service model plugin.
type ListRegisteredServiceModelsResponse struct {
	// name is the name given to the service model plugin - no spaces and title case.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// version is the semantic version of the Plugin e.g. 1.0.0.
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRegisteredServiceModelsResponse) Reset()         { *m = ListRegisteredServiceModelsResponse{} }
func (m *ListRegisteredServiceModelsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRegisteredServiceModelsResponse) ProtoMessage()    {}
func (*ListRegisteredServiceModelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ca6f53999f59fc, []int{2}
}
func (m *ListRegisteredServiceModelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegisteredServiceModelsResponse.Unmarshal(m, b)
}
func (m *ListRegisteredServiceModelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegisteredServiceModelsResponse.Marshal(b, m, deterministic)
}
func (m *ListRegisteredServiceModelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegisteredServiceModelsResponse.Merge(m, src)
}
func (m *ListRegisteredServiceModelsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRegisteredServiceModelsResponse.Size(m)
}
func (m *ListRegisteredServiceModelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegisteredServiceModelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegisteredServiceModelsResponse proto.InternalMessageInfo

func (m *ListRegisteredServiceModelsResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListRegisteredServiceModelsResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// ListRegisteredServiceModelsRequest carries data for querying registered service model plugins.
type ListRegisteredServiceModelsRequest struct {
	// An optional filter on the name of the model plugins to list.
	ModelName string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3" json:"model_name,omitempty"`
	// An optional filter on the version of the model plugins to list
	ModelVersion         string   `protobuf:"bytes,2,opt,name=model_version,json=modelVersion,proto3" json:"model_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRegisteredServiceModelsRequest) Reset()         { *m = ListRegisteredServiceModelsRequest{} }
func (m *ListRegisteredServiceModelsRequest) String() string { return proto.CompactTextString(m) }
func (*ListRegisteredServiceModelsRequest) ProtoMessage()    {}
func (*ListRegisteredServiceModelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ca6f53999f59fc, []int{3}
}
func (m *ListRegisteredServiceModelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegisteredServiceModelsRequest.Unmarshal(m, b)
}
func (m *ListRegisteredServiceModelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegisteredServiceModelsRequest.Marshal(b, m, deterministic)
}
func (m *ListRegisteredServiceModelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegisteredServiceModelsRequest.Merge(m, src)
}
func (m *ListRegisteredServiceModelsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRegisteredServiceModelsRequest.Size(m)
}
func (m *ListRegisteredServiceModelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegisteredServiceModelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegisteredServiceModelsRequest proto.InternalMessageInfo

func (m *ListRegisteredServiceModelsRequest) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *ListRegisteredServiceModelsRequest) GetModelVersion() string {
	if m != nil {
		return m.ModelVersion
	}
	return ""
}

// ListE2NodeConnectionsRequest carries request for a list of E2 node SCTP connections.
type ListE2NodeConnectionsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListE2NodeConnectionsRequest) Reset()         { *m = ListE2NodeConnectionsRequest{} }
func (m *ListE2NodeConnectionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListE2NodeConnectionsRequest) ProtoMessage()    {}
func (*ListE2NodeConnectionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ca6f53999f59fc, []int{4}
}
func (m *ListE2NodeConnectionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListE2NodeConnectionsRequest.Unmarshal(m, b)
}
func (m *ListE2NodeConnectionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListE2NodeConnectionsRequest.Marshal(b, m, deterministic)
}
func (m *ListE2NodeConnectionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListE2NodeConnectionsRequest.Merge(m, src)
}
func (m *ListE2NodeConnectionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListE2NodeConnectionsRequest.Size(m)
}
func (m *ListE2NodeConnectionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListE2NodeConnectionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListE2NodeConnectionsRequest proto.InternalMessageInfo

// ListE2NodeConnectionsResponse carries information about the SCTP connection to the remote E2 node.
type ListE2NodeConnectionsResponse struct {
	RemoteIp             string   `protobuf:"bytes,1,opt,name=remote_ip,json=remoteIp,proto3" json:"remote_ip,omitempty"`
	RemotePort           uint32   `protobuf:"varint,2,opt,name=remote_port,json=remotePort,proto3" json:"remote_port,omitempty"`
	Id                   uint32   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	PlmnId               string   `protobuf:"bytes,4,opt,name=plmn_id,json=plmnId,proto3" json:"plmn_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListE2NodeConnectionsResponse) Reset()         { *m = ListE2NodeConnectionsResponse{} }
func (m *ListE2NodeConnectionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListE2NodeConnectionsResponse) ProtoMessage()    {}
func (*ListE2NodeConnectionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ca6f53999f59fc, []int{5}
}
func (m *ListE2NodeConnectionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListE2NodeConnectionsResponse.Unmarshal(m, b)
}
func (m *ListE2NodeConnectionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListE2NodeConnectionsResponse.Marshal(b, m, deterministic)
}
func (m *ListE2NodeConnectionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListE2NodeConnectionsResponse.Merge(m, src)
}
func (m *ListE2NodeConnectionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListE2NodeConnectionsResponse.Size(m)
}
func (m *ListE2NodeConnectionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListE2NodeConnectionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListE2NodeConnectionsResponse proto.InternalMessageInfo

func (m *ListE2NodeConnectionsResponse) GetRemoteIp() string {
	if m != nil {
		return m.RemoteIp
	}
	return ""
}

func (m *ListE2NodeConnectionsResponse) GetRemotePort() uint32 {
	if m != nil {
		return m.RemotePort
	}
	return 0
}

func (m *ListE2NodeConnectionsResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ListE2NodeConnectionsResponse) GetPlmnId() string {
	if m != nil {
		return m.PlmnId
	}
	return ""
}

// DropE2NodeConnectionsRequest carries drop connection request
type DropE2NodeConnectionsRequest struct {
	Connections          []*ListE2NodeConnectionsResponse `protobuf:"bytes,1,rep,name=connections,proto3" json:"connections,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *DropE2NodeConnectionsRequest) Reset()         { *m = DropE2NodeConnectionsRequest{} }
func (m *DropE2NodeConnectionsRequest) String() string { return proto.CompactTextString(m) }
func (*DropE2NodeConnectionsRequest) ProtoMessage()    {}
func (*DropE2NodeConnectionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ca6f53999f59fc, []int{6}
}
func (m *DropE2NodeConnectionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropE2NodeConnectionsRequest.Unmarshal(m, b)
}
func (m *DropE2NodeConnectionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropE2NodeConnectionsRequest.Marshal(b, m, deterministic)
}
func (m *DropE2NodeConnectionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropE2NodeConnectionsRequest.Merge(m, src)
}
func (m *DropE2NodeConnectionsRequest) XXX_Size() int {
	return xxx_messageInfo_DropE2NodeConnectionsRequest.Size(m)
}
func (m *DropE2NodeConnectionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DropE2NodeConnectionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DropE2NodeConnectionsRequest proto.InternalMessageInfo

func (m *DropE2NodeConnectionsRequest) GetConnections() []*ListE2NodeConnectionsResponse {
	if m != nil {
		return m.Connections
	}
	return nil
}

// DropE2NodeConnectionsResponse carries drop connection response
type DropE2NodeConnectionsResponse struct {
	Success              []bool   `protobuf:"varint,1,rep,packed,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DropE2NodeConnectionsResponse) Reset()         { *m = DropE2NodeConnectionsResponse{} }
func (m *DropE2NodeConnectionsResponse) String() string { return proto.CompactTextString(m) }
func (*DropE2NodeConnectionsResponse) ProtoMessage()    {}
func (*DropE2NodeConnectionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00ca6f53999f59fc, []int{7}
}
func (m *DropE2NodeConnectionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropE2NodeConnectionsResponse.Unmarshal(m, b)
}
func (m *DropE2NodeConnectionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropE2NodeConnectionsResponse.Marshal(b, m, deterministic)
}
func (m *DropE2NodeConnectionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropE2NodeConnectionsResponse.Merge(m, src)
}
func (m *DropE2NodeConnectionsResponse) XXX_Size() int {
	return xxx_messageInfo_DropE2NodeConnectionsResponse.Size(m)
}
func (m *DropE2NodeConnectionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DropE2NodeConnectionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DropE2NodeConnectionsResponse proto.InternalMessageInfo

func (m *DropE2NodeConnectionsResponse) GetSuccess() []bool {
	if m != nil {
		return m.Success
	}
	return nil
}

func init() {
	proto.RegisterType((*UploadRegisterServiceModelRequest)(nil), "admin.v1.UploadRegisterServiceModelRequest")
	proto.RegisterType((*UploadRegisterServiceModelResponse)(nil), "admin.v1.UploadRegisterServiceModelResponse")
	proto.RegisterType((*ListRegisteredServiceModelsResponse)(nil), "admin.v1.ListRegisteredServiceModelsResponse")
	proto.RegisterType((*ListRegisteredServiceModelsRequest)(nil), "admin.v1.ListRegisteredServiceModelsRequest")
	proto.RegisterType((*ListE2NodeConnectionsRequest)(nil), "admin.v1.ListE2NodeConnectionsRequest")
	proto.RegisterType((*ListE2NodeConnectionsResponse)(nil), "admin.v1.ListE2NodeConnectionsResponse")
	proto.RegisterType((*DropE2NodeConnectionsRequest)(nil), "admin.v1.DropE2NodeConnectionsRequest")
	proto.RegisterType((*DropE2NodeConnectionsResponse)(nil), "admin.v1.DropE2NodeConnectionsResponse")
}

func init() { proto.RegisterFile("api/admin/v1/admin.proto", fileDescriptor_00ca6f53999f59fc) }

var fileDescriptor_00ca6f53999f59fc = []byte{
	// 473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x51, 0x6b, 0x13, 0x41,
	0x10, 0xe6, 0x9a, 0xd2, 0x24, 0x93, 0x56, 0x61, 0xa1, 0x78, 0xa4, 0x4d, 0x8d, 0x57, 0xd0, 0x80,
	0x35, 0x69, 0xe3, 0x93, 0x8f, 0xa2, 0x15, 0x02, 0x5a, 0x64, 0xab, 0x7d, 0x0d, 0xd7, 0xdb, 0x69,
	0xba, 0x72, 0xb7, 0xb3, 0xee, 0x6e, 0x02, 0x82, 0xcf, 0xfe, 0x4e, 0x7f, 0x8a, 0xdc, 0xed, 0x1d,
	0xbd, 0x42, 0x73, 0x0d, 0xbe, 0xed, 0x7c, 0x3b, 0xf7, 0x7d, 0xb3, 0xf3, 0x7d, 0x1c, 0x84, 0xb1,
	0x96, 0x93, 0x58, 0x64, 0x52, 0x4d, 0x56, 0x67, 0xfe, 0x30, 0xd6, 0x86, 0x1c, 0xb1, 0x8e, 0x2f,
	0x56, 0x67, 0xfd, 0xa3, 0x05, 0xd1, 0x22, 0xc5, 0x49, 0x81, 0x5f, 0x2f, 0x6f, 0x26, 0x62, 0x69,
	0x62, 0x27, 0xa9, 0xec, 0x8c, 0xae, 0xe0, 0xc5, 0x77, 0x9d, 0x52, 0x2c, 0x38, 0x2e, 0xa4, 0x75,
	0x68, 0x2e, 0xd1, 0xac, 0x64, 0x82, 0x5f, 0x48, 0x60, 0xca, 0xf1, 0xe7, 0x12, 0xad, 0x63, 0xcf,
	0xa0, 0x6d, 0x69, 0x7e, 0x23, 0x53, 0x0c, 0x83, 0x61, 0x30, 0xea, 0xf2, 0x1d, 0x4b, 0x9f, 0x64,
	0x8a, 0x2c, 0x84, 0x76, 0x42, 0xca, 0xa1, 0x72, 0xe1, 0xd6, 0x30, 0x18, 0xed, 0xf2, 0xaa, 0x8c,
	0x38, 0x44, 0x4d, 0xbc, 0x56, 0x93, 0xb2, 0xc8, 0x18, 0x6c, 0xab, 0x38, 0xab, 0x58, 0x8b, 0x73,
	0xce, 0xb9, 0x42, 0x63, 0x25, 0xa9, 0x82, 0xb3, 0xcb, 0xab, 0x32, 0xba, 0x84, 0xe3, 0xcf, 0xd2,
	0xba, 0x8a, 0x11, 0x45, 0x9d, 0xd3, 0xfe, 0x27, 0xe9, 0x2d, 0x44, 0x8d, 0xa4, 0x7e, 0x03, 0x03,
	0x80, 0x2c, 0x07, 0xe6, 0x35, 0xe6, 0x6e, 0x81, 0x5c, 0xe4, 0xf4, 0xc7, 0xb0, 0xe7, 0xaf, 0xef,
	0x8b, 0xec, 0x16, 0xe0, 0x55, 0xa9, 0x74, 0x04, 0x87, 0xb9, 0xd2, 0xf9, 0xf4, 0x82, 0x04, 0x7e,
	0x20, 0xa5, 0x30, 0xc9, 0x8d, 0xa8, 0x34, 0xa2, 0x3f, 0x01, 0x0c, 0xd6, 0x34, 0x94, 0x2f, 0x3b,
	0x80, 0xae, 0xc1, 0x8c, 0x1c, 0xce, 0xa5, 0x2e, 0x87, 0xe8, 0x78, 0x60, 0xa6, 0xd9, 0x73, 0xe8,
	0x95, 0x97, 0x9a, 0x8c, 0xf7, 0x63, 0x8f, 0x83, 0x87, 0xbe, 0x92, 0x71, 0xec, 0x09, 0x6c, 0x49,
	0x11, 0xb6, 0x0a, 0x7c, 0x4b, 0x8a, 0xdc, 0x55, 0x9d, 0x66, 0x6a, 0x2e, 0x45, 0xb8, 0xed, 0x5d,
	0xcd, 0xcb, 0x99, 0x88, 0x24, 0x1c, 0x7e, 0x34, 0xa4, 0xd7, 0x0d, 0xca, 0x66, 0xd0, 0x4b, 0xee,
	0xd0, 0x30, 0x18, 0xb6, 0x46, 0xbd, 0xe9, 0xab, 0x71, 0x95, 0xb9, 0x71, 0xe3, 0x23, 0x78, 0xfd,
	0xdb, 0xe8, 0x1d, 0x0c, 0xd6, 0x48, 0x95, 0x4f, 0x0e, 0xa1, 0x6d, 0x97, 0x49, 0x82, 0xd6, 0xeb,
	0x74, 0x78, 0x55, 0x4e, 0xff, 0xb6, 0xe0, 0xe9, 0xf9, 0xf4, 0xdb, 0xfb, 0x5c, 0xb5, 0xf4, 0x8c,
	0xfd, 0x82, 0xfe, 0xfa, 0xd4, 0xb1, 0xd7, 0x77, 0x23, 0x3e, 0x9a, 0xf9, 0xfe, 0xc9, 0x66, 0xcd,
	0x7e, 0xcc, 0x51, 0xc0, 0x7e, 0xc3, 0x41, 0x43, 0x8e, 0xd8, 0xc9, 0xfd, 0xf5, 0x34, 0xc7, 0xad,
	0xff, 0x66, 0xc3, 0x6e, 0xaf, 0x7e, 0x1a, 0xb0, 0x1f, 0xb0, 0xff, 0xe0, 0xd6, 0xd9, 0xcb, 0x47,
	0x6d, 0xf1, 0x8a, 0x9b, 0xda, 0x77, 0x1a, 0xb0, 0x5b, 0xd8, 0x7f, 0xd0, 0xb3, 0xba, 0x56, 0x53,
	0x7e, 0xea, 0x5a, 0x8d, 0xe6, 0x5f, 0xef, 0x14, 0xff, 0xa8, 0xb7, 0xff, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x78, 0x6d, 0xef, 0x6c, 0xe9, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// E2TAdminServiceClient is the client API for E2TAdminService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type E2TAdminServiceClient interface {
	// UploadRegisterServiceModel uploads and adds the model plugin to the list of supported models.
	// The file is serialized in to Chunks of less than 4MB so as not to break the
	// gRPC byte array limit
	UploadRegisterServiceModel(ctx context.Context, opts ...grpc.CallOption) (E2TAdminService_UploadRegisterServiceModelClient, error)
	// ListRegisteredServiceModels returns a stream of registered service models.
	ListRegisteredServiceModels(ctx context.Context, in *ListRegisteredServiceModelsRequest, opts ...grpc.CallOption) (E2TAdminService_ListRegisteredServiceModelsClient, error)
	// ListE2NodeConnections returns a stream of existing SCTP connections.
	ListE2NodeConnections(ctx context.Context, in *ListE2NodeConnectionsRequest, opts ...grpc.CallOption) (E2TAdminService_ListE2NodeConnectionsClient, error)
	// DropE2NodeConnections drops the specified E2 node SCTP connections
	DropE2NodeConnections(ctx context.Context, in *DropE2NodeConnectionsRequest, opts ...grpc.CallOption) (*DropE2NodeConnectionsResponse, error)
}

type e2TAdminServiceClient struct {
	cc *grpc.ClientConn
}

func NewE2TAdminServiceClient(cc *grpc.ClientConn) E2TAdminServiceClient {
	return &e2TAdminServiceClient{cc}
}

func (c *e2TAdminServiceClient) UploadRegisterServiceModel(ctx context.Context, opts ...grpc.CallOption) (E2TAdminService_UploadRegisterServiceModelClient, error) {
	stream, err := c.cc.NewStream(ctx, &_E2TAdminService_serviceDesc.Streams[0], "/admin.v1.E2TAdminService/UploadRegisterServiceModel", opts...)
	if err != nil {
		return nil, err
	}
	x := &e2TAdminServiceUploadRegisterServiceModelClient{stream}
	return x, nil
}

type E2TAdminService_UploadRegisterServiceModelClient interface {
	Send(*UploadRegisterServiceModelRequest) error
	CloseAndRecv() (*UploadRegisterServiceModelResponse, error)
	grpc.ClientStream
}

type e2TAdminServiceUploadRegisterServiceModelClient struct {
	grpc.ClientStream
}

func (x *e2TAdminServiceUploadRegisterServiceModelClient) Send(m *UploadRegisterServiceModelRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *e2TAdminServiceUploadRegisterServiceModelClient) CloseAndRecv() (*UploadRegisterServiceModelResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UploadRegisterServiceModelResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *e2TAdminServiceClient) ListRegisteredServiceModels(ctx context.Context, in *ListRegisteredServiceModelsRequest, opts ...grpc.CallOption) (E2TAdminService_ListRegisteredServiceModelsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_E2TAdminService_serviceDesc.Streams[1], "/admin.v1.E2TAdminService/ListRegisteredServiceModels", opts...)
	if err != nil {
		return nil, err
	}
	x := &e2TAdminServiceListRegisteredServiceModelsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type E2TAdminService_ListRegisteredServiceModelsClient interface {
	Recv() (*ListRegisteredServiceModelsResponse, error)
	grpc.ClientStream
}

type e2TAdminServiceListRegisteredServiceModelsClient struct {
	grpc.ClientStream
}

func (x *e2TAdminServiceListRegisteredServiceModelsClient) Recv() (*ListRegisteredServiceModelsResponse, error) {
	m := new(ListRegisteredServiceModelsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *e2TAdminServiceClient) ListE2NodeConnections(ctx context.Context, in *ListE2NodeConnectionsRequest, opts ...grpc.CallOption) (E2TAdminService_ListE2NodeConnectionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_E2TAdminService_serviceDesc.Streams[2], "/admin.v1.E2TAdminService/ListE2NodeConnections", opts...)
	if err != nil {
		return nil, err
	}
	x := &e2TAdminServiceListE2NodeConnectionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type E2TAdminService_ListE2NodeConnectionsClient interface {
	Recv() (*ListE2NodeConnectionsResponse, error)
	grpc.ClientStream
}

type e2TAdminServiceListE2NodeConnectionsClient struct {
	grpc.ClientStream
}

func (x *e2TAdminServiceListE2NodeConnectionsClient) Recv() (*ListE2NodeConnectionsResponse, error) {
	m := new(ListE2NodeConnectionsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *e2TAdminServiceClient) DropE2NodeConnections(ctx context.Context, in *DropE2NodeConnectionsRequest, opts ...grpc.CallOption) (*DropE2NodeConnectionsResponse, error) {
	out := new(DropE2NodeConnectionsResponse)
	err := c.cc.Invoke(ctx, "/admin.v1.E2TAdminService/DropE2NodeConnections", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// E2TAdminServiceServer is the server API for E2TAdminService service.
type E2TAdminServiceServer interface {
	// UploadRegisterServiceModel uploads and adds the model plugin to the list of supported models.
	// The file is serialized in to Chunks of less than 4MB so as not to break the
	// gRPC byte array limit
	UploadRegisterServiceModel(E2TAdminService_UploadRegisterServiceModelServer) error
	// ListRegisteredServiceModels returns a stream of registered service models.
	ListRegisteredServiceModels(*ListRegisteredServiceModelsRequest, E2TAdminService_ListRegisteredServiceModelsServer) error
	// ListE2NodeConnections returns a stream of existing SCTP connections.
	ListE2NodeConnections(*ListE2NodeConnectionsRequest, E2TAdminService_ListE2NodeConnectionsServer) error
	// DropE2NodeConnections drops the specified E2 node SCTP connections
	DropE2NodeConnections(context.Context, *DropE2NodeConnectionsRequest) (*DropE2NodeConnectionsResponse, error)
}

// UnimplementedE2TAdminServiceServer can be embedded to have forward compatible implementations.
type UnimplementedE2TAdminServiceServer struct {
}

func (*UnimplementedE2TAdminServiceServer) UploadRegisterServiceModel(srv E2TAdminService_UploadRegisterServiceModelServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadRegisterServiceModel not implemented")
}
func (*UnimplementedE2TAdminServiceServer) ListRegisteredServiceModels(req *ListRegisteredServiceModelsRequest, srv E2TAdminService_ListRegisteredServiceModelsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListRegisteredServiceModels not implemented")
}
func (*UnimplementedE2TAdminServiceServer) ListE2NodeConnections(req *ListE2NodeConnectionsRequest, srv E2TAdminService_ListE2NodeConnectionsServer) error {
	return status.Errorf(codes.Unimplemented, "method ListE2NodeConnections not implemented")
}
func (*UnimplementedE2TAdminServiceServer) DropE2NodeConnections(ctx context.Context, req *DropE2NodeConnectionsRequest) (*DropE2NodeConnectionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropE2NodeConnections not implemented")
}

func RegisterE2TAdminServiceServer(s *grpc.Server, srv E2TAdminServiceServer) {
	s.RegisterService(&_E2TAdminService_serviceDesc, srv)
}

func _E2TAdminService_UploadRegisterServiceModel_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(E2TAdminServiceServer).UploadRegisterServiceModel(&e2TAdminServiceUploadRegisterServiceModelServer{stream})
}

type E2TAdminService_UploadRegisterServiceModelServer interface {
	SendAndClose(*UploadRegisterServiceModelResponse) error
	Recv() (*UploadRegisterServiceModelRequest, error)
	grpc.ServerStream
}

type e2TAdminServiceUploadRegisterServiceModelServer struct {
	grpc.ServerStream
}

func (x *e2TAdminServiceUploadRegisterServiceModelServer) SendAndClose(m *UploadRegisterServiceModelResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *e2TAdminServiceUploadRegisterServiceModelServer) Recv() (*UploadRegisterServiceModelRequest, error) {
	m := new(UploadRegisterServiceModelRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _E2TAdminService_ListRegisteredServiceModels_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRegisteredServiceModelsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(E2TAdminServiceServer).ListRegisteredServiceModels(m, &e2TAdminServiceListRegisteredServiceModelsServer{stream})
}

type E2TAdminService_ListRegisteredServiceModelsServer interface {
	Send(*ListRegisteredServiceModelsResponse) error
	grpc.ServerStream
}

type e2TAdminServiceListRegisteredServiceModelsServer struct {
	grpc.ServerStream
}

func (x *e2TAdminServiceListRegisteredServiceModelsServer) Send(m *ListRegisteredServiceModelsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _E2TAdminService_ListE2NodeConnections_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListE2NodeConnectionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(E2TAdminServiceServer).ListE2NodeConnections(m, &e2TAdminServiceListE2NodeConnectionsServer{stream})
}

type E2TAdminService_ListE2NodeConnectionsServer interface {
	Send(*ListE2NodeConnectionsResponse) error
	grpc.ServerStream
}

type e2TAdminServiceListE2NodeConnectionsServer struct {
	grpc.ServerStream
}

func (x *e2TAdminServiceListE2NodeConnectionsServer) Send(m *ListE2NodeConnectionsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _E2TAdminService_DropE2NodeConnections_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropE2NodeConnectionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(E2TAdminServiceServer).DropE2NodeConnections(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/admin.v1.E2TAdminService/DropE2NodeConnections",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(E2TAdminServiceServer).DropE2NodeConnections(ctx, req.(*DropE2NodeConnectionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _E2TAdminService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "admin.v1.E2TAdminService",
	HandlerType: (*E2TAdminServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DropE2NodeConnections",
			Handler:    _E2TAdminService_DropE2NodeConnections_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UploadRegisterServiceModel",
			Handler:       _E2TAdminService_UploadRegisterServiceModel_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "ListRegisteredServiceModels",
			Handler:       _E2TAdminService_ListRegisteredServiceModels_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListE2NodeConnections",
			Handler:       _E2TAdminService_ListE2NodeConnections_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/admin/v1/admin.proto",
}
