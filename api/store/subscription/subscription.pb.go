// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/store/subscription/subscription.proto

// Package onos.e2t.store.subscription defines message types for E2T stores

package subscription

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_onosproject_onos_e2t_api_store_task "github.com/onosproject/onos-e2t/api/store/task"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// State is a subscription state
type State int32

const (
	State_ACTIVE         State = 0
	State_PENDING_DELETE State = 1
	State_FAILED         State = 2
)

var State_name = map[int32]string{
	0: "ACTIVE",
	1: "PENDING_DELETE",
	2: "FAILED",
}

var State_value = map[string]int32{
	"ACTIVE":         0,
	"PENDING_DELETE": 1,
	"FAILED":         2,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{0}
}

// EventType is a subscription event type
type EventType int32

const (
	EventType_NONE     EventType = 0
	EventType_ADDED    EventType = 1
	EventType_UPDATED  EventType = 2
	EventType_REMOVED  EventType = 3
	EventType_REPLAYED EventType = 4
)

var EventType_name = map[int32]string{
	0: "NONE",
	1: "ADDED",
	2: "UPDATED",
	3: "REMOVED",
	4: "REPLAYED",
}

var EventType_value = map[string]int32{
	"NONE":     0,
	"ADDED":    1,
	"UPDATED":  2,
	"REMOVED":  3,
	"REPLAYED": 4,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{1}
}

// Encoding indicates a payload encoding
type Encoding int32

const (
	Encoding_ENCODING_ASN1  Encoding = 0
	Encoding_ENCODING_PROTO Encoding = 1
)

var Encoding_name = map[int32]string{
	0: "ENCODING_ASN1",
	1: "ENCODING_PROTO",
}

var Encoding_value = map[string]int32{
	"ENCODING_ASN1":  0,
	"ENCODING_PROTO": 1,
}

func (x Encoding) String() string {
	return proto.EnumName(Encoding_name, int32(x))
}

func (Encoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{2}
}

type ActionType int32

const (
	ActionType_ACTION_TYPE_REPORT ActionType = 0
	ActionType_ACTION_TYPE_INSERT ActionType = 1
	ActionType_ACTION_TYPE_POLICY ActionType = 2
)

var ActionType_name = map[int32]string{
	0: "ACTION_TYPE_REPORT",
	1: "ACTION_TYPE_INSERT",
	2: "ACTION_TYPE_POLICY",
}

var ActionType_value = map[string]int32{
	"ACTION_TYPE_REPORT": 0,
	"ACTION_TYPE_INSERT": 1,
	"ACTION_TYPE_POLICY": 2,
}

func (x ActionType) String() string {
	return proto.EnumName(ActionType_name, int32(x))
}

func (ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{3}
}

type SubsequentActionType int32

const (
	SubsequentActionType_SUBSEQUENT_ACTION_TYPE_CONTINUE SubsequentActionType = 0
	SubsequentActionType_SUBSEQUENT_ACTION_TYPE_WAIT     SubsequentActionType = 1
)

var SubsequentActionType_name = map[int32]string{
	0: "SUBSEQUENT_ACTION_TYPE_CONTINUE",
	1: "SUBSEQUENT_ACTION_TYPE_WAIT",
}

var SubsequentActionType_value = map[string]int32{
	"SUBSEQUENT_ACTION_TYPE_CONTINUE": 0,
	"SUBSEQUENT_ACTION_TYPE_WAIT":     1,
}

func (x SubsequentActionType) String() string {
	return proto.EnumName(SubsequentActionType_name, int32(x))
}

func (SubsequentActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{4}
}

type TimeToWait int32

const (
	TimeToWait_TIME_TO_WAIT_ZERO   TimeToWait = 0
	TimeToWait_TIME_TO_WAIT_W1MS   TimeToWait = 1
	TimeToWait_TIME_TO_WAIT_W2MS   TimeToWait = 2
	TimeToWait_TIME_TO_WAIT_W5MS   TimeToWait = 3
	TimeToWait_TIME_TO_WAIT_W10MS  TimeToWait = 4
	TimeToWait_TIME_TO_WAIT_W20MS  TimeToWait = 5
	TimeToWait_TIME_TO_WAIT_W30MS  TimeToWait = 6
	TimeToWait_TIME_TO_WAIT_W40MS  TimeToWait = 7
	TimeToWait_TIME_TO_WAIT_W50MS  TimeToWait = 8
	TimeToWait_TIME_TO_WAIT_W100MS TimeToWait = 9
	TimeToWait_TIME_TO_WAIT_W200MS TimeToWait = 10
	TimeToWait_TIME_TO_WAIT_W500MS TimeToWait = 11
	TimeToWait_TIME_TO_WAIT_W1S    TimeToWait = 12
	TimeToWait_TIME_TO_WAIT_W2S    TimeToWait = 13
	TimeToWait_TIME_TO_WAIT_W5S    TimeToWait = 14
	TimeToWait_TIME_TO_WAIT_W10S   TimeToWait = 15
	TimeToWait_TIME_TO_WAIT_W20S   TimeToWait = 16
	TimeToWait_TIME_TO_WAIT_W60S   TimeToWait = 17
)

var TimeToWait_name = map[int32]string{
	0:  "TIME_TO_WAIT_ZERO",
	1:  "TIME_TO_WAIT_W1MS",
	2:  "TIME_TO_WAIT_W2MS",
	3:  "TIME_TO_WAIT_W5MS",
	4:  "TIME_TO_WAIT_W10MS",
	5:  "TIME_TO_WAIT_W20MS",
	6:  "TIME_TO_WAIT_W30MS",
	7:  "TIME_TO_WAIT_W40MS",
	8:  "TIME_TO_WAIT_W50MS",
	9:  "TIME_TO_WAIT_W100MS",
	10: "TIME_TO_WAIT_W200MS",
	11: "TIME_TO_WAIT_W500MS",
	12: "TIME_TO_WAIT_W1S",
	13: "TIME_TO_WAIT_W2S",
	14: "TIME_TO_WAIT_W5S",
	15: "TIME_TO_WAIT_W10S",
	16: "TIME_TO_WAIT_W20S",
	17: "TIME_TO_WAIT_W60S",
}

var TimeToWait_value = map[string]int32{
	"TIME_TO_WAIT_ZERO":   0,
	"TIME_TO_WAIT_W1MS":   1,
	"TIME_TO_WAIT_W2MS":   2,
	"TIME_TO_WAIT_W5MS":   3,
	"TIME_TO_WAIT_W10MS":  4,
	"TIME_TO_WAIT_W20MS":  5,
	"TIME_TO_WAIT_W30MS":  6,
	"TIME_TO_WAIT_W40MS":  7,
	"TIME_TO_WAIT_W50MS":  8,
	"TIME_TO_WAIT_W100MS": 9,
	"TIME_TO_WAIT_W200MS": 10,
	"TIME_TO_WAIT_W500MS": 11,
	"TIME_TO_WAIT_W1S":    12,
	"TIME_TO_WAIT_W2S":    13,
	"TIME_TO_WAIT_W5S":    14,
	"TIME_TO_WAIT_W10S":   15,
	"TIME_TO_WAIT_W20S":   16,
	"TIME_TO_WAIT_W60S":   17,
}

func (x TimeToWait) String() string {
	return proto.EnumName(TimeToWait_name, int32(x))
}

func (TimeToWait) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{5}
}

// Subscription is a subscription state
type Subscription struct {
	SubscriptionMeta     `protobuf:"bytes,1,opt,name=meta,proto3,embedded=meta" json:"meta"`
	Spec                 SubscriptionSpec   `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec"`
	Status               SubscriptionStatus `protobuf:"bytes,7,opt,name=status,proto3" json:"status"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Subscription) Reset()         { *m = Subscription{} }
func (m *Subscription) String() string { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()    {}
func (*Subscription) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{0}
}
func (m *Subscription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subscription.Unmarshal(m, b)
}
func (m *Subscription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subscription.Marshal(b, m, deterministic)
}
func (m *Subscription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subscription.Merge(m, src)
}
func (m *Subscription) XXX_Size() int {
	return xxx_messageInfo_Subscription.Size(m)
}
func (m *Subscription) XXX_DiscardUnknown() {
	xxx_messageInfo_Subscription.DiscardUnknown(m)
}

var xxx_messageInfo_Subscription proto.InternalMessageInfo

func (m *Subscription) GetSpec() SubscriptionSpec {
	if m != nil {
		return m.Spec
	}
	return SubscriptionSpec{}
}

func (m *Subscription) GetStatus() SubscriptionStatus {
	if m != nil {
		return m.Status
	}
	return SubscriptionStatus{}
}

// SubscriptionMeta is subscription metadata
type SubscriptionMeta struct {
	ID                   ID        `protobuf:"bytes,1,opt,name=id,proto3,casttype=ID" json:"id,omitempty"`
	Revision             Revision  `protobuf:"varint,2,opt,name=revision,proto3,casttype=Revision" json:"revision,omitempty"`
	AppID                AppID     `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3,casttype=AppID" json:"app_id,omitempty"`
	AppNodeID            AppNodeID `protobuf:"bytes,4,opt,name=app_node_id,json=appNodeId,proto3,casttype=AppNodeID" json:"app_node_id,omitempty"`
	E2NodeID             E2NodeID  `protobuf:"bytes,5,opt,name=e2_node_id,json=e2NodeId,proto3,casttype=E2NodeID" json:"e2_node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SubscriptionMeta) Reset()         { *m = SubscriptionMeta{} }
func (m *SubscriptionMeta) String() string { return proto.CompactTextString(m) }
func (*SubscriptionMeta) ProtoMessage()    {}
func (*SubscriptionMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{1}
}
func (m *SubscriptionMeta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionMeta.Unmarshal(m, b)
}
func (m *SubscriptionMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionMeta.Marshal(b, m, deterministic)
}
func (m *SubscriptionMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionMeta.Merge(m, src)
}
func (m *SubscriptionMeta) XXX_Size() int {
	return xxx_messageInfo_SubscriptionMeta.Size(m)
}
func (m *SubscriptionMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionMeta.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionMeta proto.InternalMessageInfo

func (m *SubscriptionMeta) GetID() ID {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *SubscriptionMeta) GetRevision() Revision {
	if m != nil {
		return m.Revision
	}
	return 0
}

func (m *SubscriptionMeta) GetAppID() AppID {
	if m != nil {
		return m.AppID
	}
	return ""
}

func (m *SubscriptionMeta) GetAppNodeID() AppNodeID {
	if m != nil {
		return m.AppNodeID
	}
	return ""
}

func (m *SubscriptionMeta) GetE2NodeID() E2NodeID {
	if m != nil {
		return m.E2NodeID
	}
	return ""
}

type SubscriptionSpec struct {
	ServiceModel         ServiceModel `protobuf:"bytes,2,opt,name=service_model,json=serviceModel,proto3" json:"service_model"`
	EventTrigger         EventTrigger `protobuf:"bytes,3,opt,name=event_trigger,json=eventTrigger,proto3" json:"event_trigger"`
	Actions              []Action     `protobuf:"bytes,4,rep,name=actions,proto3" json:"actions"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SubscriptionSpec) Reset()         { *m = SubscriptionSpec{} }
func (m *SubscriptionSpec) String() string { return proto.CompactTextString(m) }
func (*SubscriptionSpec) ProtoMessage()    {}
func (*SubscriptionSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{2}
}
func (m *SubscriptionSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionSpec.Unmarshal(m, b)
}
func (m *SubscriptionSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionSpec.Marshal(b, m, deterministic)
}
func (m *SubscriptionSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionSpec.Merge(m, src)
}
func (m *SubscriptionSpec) XXX_Size() int {
	return xxx_messageInfo_SubscriptionSpec.Size(m)
}
func (m *SubscriptionSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionSpec.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionSpec proto.InternalMessageInfo

func (m *SubscriptionSpec) GetServiceModel() ServiceModel {
	if m != nil {
		return m.ServiceModel
	}
	return ServiceModel{}
}

func (m *SubscriptionSpec) GetEventTrigger() EventTrigger {
	if m != nil {
		return m.EventTrigger
	}
	return EventTrigger{}
}

func (m *SubscriptionSpec) GetActions() []Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

// SubscriptionStatus is the subscription status
type SubscriptionStatus struct {
	State                State                                             `protobuf:"varint,1,opt,name=state,proto3,enum=onos.e2t.store.subscription.State" json:"state,omitempty"`
	TaskID               github_com_onosproject_onos_e2t_api_store_task.ID `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3,casttype=github.com/onosproject/onos-e2t/api/store/task.ID" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *SubscriptionStatus) Reset()         { *m = SubscriptionStatus{} }
func (m *SubscriptionStatus) String() string { return proto.CompactTextString(m) }
func (*SubscriptionStatus) ProtoMessage()    {}
func (*SubscriptionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{3}
}
func (m *SubscriptionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionStatus.Unmarshal(m, b)
}
func (m *SubscriptionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionStatus.Marshal(b, m, deterministic)
}
func (m *SubscriptionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionStatus.Merge(m, src)
}
func (m *SubscriptionStatus) XXX_Size() int {
	return xxx_messageInfo_SubscriptionStatus.Size(m)
}
func (m *SubscriptionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionStatus proto.InternalMessageInfo

func (m *SubscriptionStatus) GetState() State {
	if m != nil {
		return m.State
	}
	return State_ACTIVE
}

func (m *SubscriptionStatus) GetTaskID() github_com_onosproject_onos_e2t_api_store_task.ID {
	if m != nil {
		return m.TaskID
	}
	return ""
}

// Event is a subscription event
type Event struct {
	Type                 EventType    `protobuf:"varint,1,opt,name=type,proto3,enum=onos.e2t.store.subscription.EventType" json:"type,omitempty"`
	Subscription         Subscription `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{4}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_NONE
}

func (m *Event) GetSubscription() Subscription {
	if m != nil {
		return m.Subscription
	}
	return Subscription{}
}

// ServiceModel is a service model definition
type ServiceModel struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceModel) Reset()         { *m = ServiceModel{} }
func (m *ServiceModel) String() string { return proto.CompactTextString(m) }
func (*ServiceModel) ProtoMessage()    {}
func (*ServiceModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{5}
}
func (m *ServiceModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceModel.Unmarshal(m, b)
}
func (m *ServiceModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceModel.Marshal(b, m, deterministic)
}
func (m *ServiceModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceModel.Merge(m, src)
}
func (m *ServiceModel) XXX_Size() int {
	return xxx_messageInfo_ServiceModel.Size(m)
}
func (m *ServiceModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceModel.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceModel proto.InternalMessageInfo

func (m *ServiceModel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceModel) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type Payload struct {
	Encoding             Encoding `protobuf:"varint,1,opt,name=encoding,proto3,enum=onos.e2t.store.subscription.Encoding" json:"encoding,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{6}
}
func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (m *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(m, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetEncoding() Encoding {
	if m != nil {
		return m.Encoding
	}
	return Encoding_ENCODING_ASN1
}

func (m *Payload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type EventTrigger struct {
	Payload              Payload  `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventTrigger) Reset()         { *m = EventTrigger{} }
func (m *EventTrigger) String() string { return proto.CompactTextString(m) }
func (*EventTrigger) ProtoMessage()    {}
func (*EventTrigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{7}
}
func (m *EventTrigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventTrigger.Unmarshal(m, b)
}
func (m *EventTrigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventTrigger.Marshal(b, m, deterministic)
}
func (m *EventTrigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventTrigger.Merge(m, src)
}
func (m *EventTrigger) XXX_Size() int {
	return xxx_messageInfo_EventTrigger.Size(m)
}
func (m *EventTrigger) XXX_DiscardUnknown() {
	xxx_messageInfo_EventTrigger.DiscardUnknown(m)
}

var xxx_messageInfo_EventTrigger proto.InternalMessageInfo

func (m *EventTrigger) GetPayload() Payload {
	if m != nil {
		return m.Payload
	}
	return Payload{}
}

type Action struct {
	ID                   int32             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 ActionType        `protobuf:"varint,2,opt,name=type,proto3,enum=onos.e2t.store.subscription.ActionType" json:"type,omitempty"`
	Payload              Payload           `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload"`
	SubsequentAction     *SubsequentAction `protobuf:"bytes,4,opt,name=subsequent_action,json=subsequentAction,proto3" json:"subsequent_action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{8}
}
func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Action) GetType() ActionType {
	if m != nil {
		return m.Type
	}
	return ActionType_ACTION_TYPE_REPORT
}

func (m *Action) GetPayload() Payload {
	if m != nil {
		return m.Payload
	}
	return Payload{}
}

func (m *Action) GetSubsequentAction() *SubsequentAction {
	if m != nil {
		return m.SubsequentAction
	}
	return nil
}

// sequence from e2ap-v01.00.00.asn1:1132
type SubsequentAction struct {
	Type                 SubsequentActionType `protobuf:"varint,1,opt,name=type,proto3,enum=onos.e2t.store.subscription.SubsequentActionType" json:"type,omitempty"`
	TimeToWait           TimeToWait           `protobuf:"varint,2,opt,name=time_to_wait,json=timeToWait,proto3,enum=onos.e2t.store.subscription.TimeToWait" json:"time_to_wait,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SubsequentAction) Reset()         { *m = SubsequentAction{} }
func (m *SubsequentAction) String() string { return proto.CompactTextString(m) }
func (*SubsequentAction) ProtoMessage()    {}
func (*SubsequentAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_c55ad4a91cd7f939, []int{9}
}
func (m *SubsequentAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubsequentAction.Unmarshal(m, b)
}
func (m *SubsequentAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubsequentAction.Marshal(b, m, deterministic)
}
func (m *SubsequentAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubsequentAction.Merge(m, src)
}
func (m *SubsequentAction) XXX_Size() int {
	return xxx_messageInfo_SubsequentAction.Size(m)
}
func (m *SubsequentAction) XXX_DiscardUnknown() {
	xxx_messageInfo_SubsequentAction.DiscardUnknown(m)
}

var xxx_messageInfo_SubsequentAction proto.InternalMessageInfo

func (m *SubsequentAction) GetType() SubsequentActionType {
	if m != nil {
		return m.Type
	}
	return SubsequentActionType_SUBSEQUENT_ACTION_TYPE_CONTINUE
}

func (m *SubsequentAction) GetTimeToWait() TimeToWait {
	if m != nil {
		return m.TimeToWait
	}
	return TimeToWait_TIME_TO_WAIT_ZERO
}

func init() {
	proto.RegisterEnum("onos.e2t.store.subscription.State", State_name, State_value)
	proto.RegisterEnum("onos.e2t.store.subscription.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("onos.e2t.store.subscription.Encoding", Encoding_name, Encoding_value)
	proto.RegisterEnum("onos.e2t.store.subscription.ActionType", ActionType_name, ActionType_value)
	proto.RegisterEnum("onos.e2t.store.subscription.SubsequentActionType", SubsequentActionType_name, SubsequentActionType_value)
	proto.RegisterEnum("onos.e2t.store.subscription.TimeToWait", TimeToWait_name, TimeToWait_value)
	proto.RegisterType((*Subscription)(nil), "onos.e2t.store.subscription.Subscription")
	proto.RegisterType((*SubscriptionMeta)(nil), "onos.e2t.store.subscription.SubscriptionMeta")
	proto.RegisterType((*SubscriptionSpec)(nil), "onos.e2t.store.subscription.SubscriptionSpec")
	proto.RegisterType((*SubscriptionStatus)(nil), "onos.e2t.store.subscription.SubscriptionStatus")
	proto.RegisterType((*Event)(nil), "onos.e2t.store.subscription.Event")
	proto.RegisterType((*ServiceModel)(nil), "onos.e2t.store.subscription.ServiceModel")
	proto.RegisterType((*Payload)(nil), "onos.e2t.store.subscription.Payload")
	proto.RegisterType((*EventTrigger)(nil), "onos.e2t.store.subscription.EventTrigger")
	proto.RegisterType((*Action)(nil), "onos.e2t.store.subscription.Action")
	proto.RegisterType((*SubsequentAction)(nil), "onos.e2t.store.subscription.SubsequentAction")
}

func init() {
	proto.RegisterFile("api/store/subscription/subscription.proto", fileDescriptor_c55ad4a91cd7f939)
}

var fileDescriptor_c55ad4a91cd7f939 = []byte{
	// 1073 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0xe3, 0xc4,
	0x17, 0xaf, 0xf3, 0x9d, 0x93, 0x6c, 0xff, 0xd3, 0xf9, 0x97, 0x25, 0xda, 0x45, 0x4a, 0x95, 0xe5,
	0xa3, 0x8d, 0xb4, 0x49, 0xeb, 0xd2, 0x15, 0x5a, 0x90, 0x50, 0x52, 0x0f, 0x8b, 0x45, 0xe3, 0x84,
	0xb1, 0xbb, 0xa5, 0x2b, 0x24, 0xe3, 0xc6, 0xa3, 0x60, 0x76, 0x13, 0x9b, 0xd8, 0x2d, 0xea, 0x35,
	0x2f, 0xc1, 0x03, 0x70, 0xc1, 0x35, 0x4f, 0xc1, 0x25, 0x4f, 0x90, 0x8b, 0xbc, 0x02, 0x57, 0xec,
	0x0d, 0x68, 0xc6, 0x8e, 0xeb, 0xc6, 0x25, 0x64, 0xb9, 0x89, 0x8e, 0x7f, 0xe7, 0xfc, 0x7e, 0x73,
	0xbe, 0x66, 0x14, 0xd8, 0xb3, 0x3c, 0xa7, 0xed, 0x07, 0xee, 0x94, 0xb5, 0xfd, 0xcb, 0x0b, 0x7f,
	0x38, 0x75, 0xbc, 0xc0, 0x71, 0x27, 0xb7, 0x3e, 0x5a, 0xde, 0xd4, 0x0d, 0x5c, 0xfc, 0xd0, 0x9d,
	0xb8, 0x7e, 0x8b, 0xc9, 0x41, 0x4b, 0xc4, 0xb7, 0x92, 0x21, 0x0f, 0xb6, 0x47, 0xee, 0xc8, 0x15,
	0x71, 0x6d, 0x6e, 0x85, 0x94, 0xc6, 0x1f, 0x12, 0x54, 0xf5, 0x44, 0x18, 0xfe, 0x02, 0x72, 0x63,
	0x16, 0x58, 0x35, 0x69, 0x47, 0xda, 0xad, 0xc8, 0x8f, 0x5b, 0x2b, 0x24, 0x5b, 0x49, 0x62, 0x8f,
	0x05, 0x56, 0xb7, 0xf4, 0xdb, 0xac, 0xbe, 0xf1, 0xfb, 0xac, 0x2e, 0x51, 0x21, 0x82, 0x9f, 0x41,
	0xce, 0xf7, 0xd8, 0xb0, 0x56, 0x78, 0x43, 0x31, 0xdd, 0x63, 0xc3, 0x6e, 0x8e, 0x8b, 0x51, 0x21,
	0x80, 0x7b, 0x50, 0xf0, 0x03, 0x2b, 0xb8, 0xf4, 0x6b, 0x45, 0x21, 0xd5, 0x5e, 0x5f, 0x4a, 0xd0,
	0x22, 0xb1, 0x48, 0xa4, 0xf1, 0xa7, 0x04, 0x68, 0x39, 0x79, 0xfc, 0x0e, 0x64, 0x1c, 0x5b, 0xd4,
	0x5d, 0xee, 0x56, 0xe7, 0xb3, 0x7a, 0x46, 0x55, 0x5e, 0x8b, 0x5f, 0x9a, 0x71, 0x6c, 0xbc, 0x0b,
	0xa5, 0x29, 0xbb, 0x72, 0x7c, 0xc7, 0x9d, 0xd4, 0x32, 0x3b, 0xd2, 0x6e, 0xae, 0x5b, 0x7d, 0x3d,
	0xab, 0x97, 0x68, 0x84, 0xd1, 0xd8, 0x8b, 0xf7, 0xa0, 0x60, 0x79, 0x9e, 0xe9, 0xd8, 0xb5, 0xac,
	0xd0, 0xc2, 0xf3, 0x59, 0x3d, 0xdf, 0xf1, 0x3c, 0x21, 0x17, 0x1a, 0x34, 0x6f, 0x79, 0x9e, 0x6a,
	0xe3, 0xa7, 0x50, 0xe1, 0xa1, 0x13, 0xd7, 0x66, 0x3c, 0x3e, 0x27, 0xe2, 0x1f, 0xcc, 0x67, 0xf5,
	0x72, 0xc7, 0xf3, 0x34, 0xd7, 0x66, 0x82, 0x73, 0xf3, 0x41, 0xcb, 0x56, 0x64, 0xda, 0xf8, 0x09,
	0x00, 0x93, 0x63, 0x6a, 0x5e, 0x50, 0x6b, 0xf3, 0x59, 0xbd, 0x44, 0xe4, 0x98, 0x19, 0xdb, 0xb4,
	0xc4, 0x42, 0xcb, 0x6e, 0xfc, 0x98, 0xb9, 0x5d, 0x3b, 0xef, 0x35, 0x36, 0xe0, 0x9e, 0xcf, 0xa6,
	0x57, 0xce, 0x90, 0x99, 0x63, 0xd7, 0x66, 0xaf, 0x44, 0x89, 0x15, 0x79, 0x6f, 0x75, 0x9b, 0x43,
	0x46, 0x8f, 0x13, 0xa2, 0x06, 0x57, 0xfd, 0x04, 0xc6, 0x55, 0xd9, 0x15, 0x9b, 0x04, 0x66, 0x30,
	0x75, 0x46, 0x23, 0x36, 0x15, 0x0d, 0xf9, 0x37, 0x55, 0xc2, 0x19, 0x46, 0x48, 0x58, 0xa8, 0xb2,
	0x04, 0x86, 0x8f, 0xa1, 0x68, 0x0d, 0x79, 0xa8, 0x5f, 0xcb, 0xed, 0x64, 0x77, 0x2b, 0xf2, 0xa3,
	0x95, 0x7a, 0x1d, 0x11, 0x1b, 0x29, 0x2d, 0x98, 0x8d, 0x5f, 0x24, 0xc0, 0xe9, 0x35, 0xc1, 0x1f,
	0x41, 0x9e, 0xaf, 0x08, 0x13, 0x6b, 0xb0, 0x29, 0x37, 0x56, 0xd7, 0xcf, 0x23, 0x69, 0x48, 0xc0,
	0x5f, 0x41, 0x31, 0xb0, 0xfc, 0x97, 0x7c, 0x16, 0x19, 0x31, 0x8b, 0x4f, 0xe7, 0xb3, 0x7a, 0xc1,
	0xb0, 0xfc, 0x97, 0x62, 0x12, 0x07, 0x23, 0x27, 0xf8, 0xf6, 0xf2, 0xa2, 0x35, 0x74, 0xc7, 0x6d,
	0xae, 0xe9, 0x4d, 0xdd, 0xef, 0xd8, 0x30, 0x10, 0xf6, 0x63, 0x26, 0x07, 0xed, 0x9b, 0x5b, 0xce,
	0x65, 0x5a, 0xaa, 0x42, 0x0b, 0xdc, 0x50, 0xed, 0xc6, 0x4f, 0x12, 0xe4, 0x45, 0x53, 0xf0, 0x53,
	0xc8, 0x05, 0xd7, 0xde, 0x22, 0xb9, 0xf7, 0xd7, 0x68, 0xe3, 0xb5, 0xc7, 0xa8, 0xe0, 0x60, 0x1d,
	0xaa, 0x49, 0xff, 0x7a, 0x03, 0x4e, 0x7c, 0xc4, 0x03, 0x4e, 0x60, 0x8d, 0x4f, 0xa0, 0x9a, 0x5c,
	0x02, 0x8c, 0x21, 0x37, 0xb1, 0xc6, 0x61, 0x82, 0x65, 0x2a, 0x6c, 0x5c, 0x83, 0xe2, 0x15, 0x9b,
	0xc6, 0xf7, 0xa6, 0x4c, 0x17, 0x9f, 0x8d, 0x6f, 0xa0, 0x38, 0xb0, 0xae, 0x5f, 0xb9, 0x96, 0x8d,
	0x3b, 0x50, 0x62, 0x93, 0xa1, 0x6b, 0x3b, 0x93, 0x51, 0x54, 0xdd, 0x7b, 0xab, 0xab, 0x8b, 0x82,
	0x69, 0x4c, 0xe3, 0x67, 0xdb, 0x56, 0x60, 0x89, 0x43, 0xaa, 0x54, 0xd8, 0x0d, 0x03, 0xaa, 0xc9,
	0x75, 0xc2, 0x0a, 0x14, 0xbd, 0xf0, 0xc4, 0xe8, 0x7d, 0x7b, 0x77, 0xe5, 0x29, 0x51, 0x76, 0x8b,
	0xdd, 0x89, 0xa8, 0x8d, 0xbf, 0x24, 0x28, 0x84, 0x5b, 0x85, 0xef, 0xc7, 0x6f, 0x46, 0xbe, 0x5b,
	0x98, 0xdf, 0xbc, 0x16, 0x1f, 0x47, 0x93, 0xca, 0x88, 0x5a, 0x3e, 0x58, 0x63, 0x41, 0x13, 0xa3,
	0x4a, 0x64, 0x99, 0xfd, 0xcf, 0x59, 0xe2, 0x17, 0xb0, 0xc5, 0xc3, 0xd8, 0xf7, 0x97, 0xfc, 0x06,
	0x86, 0x7b, 0x2f, 0x5e, 0x98, 0x75, 0x1e, 0xe2, 0x90, 0x15, 0x66, 0x46, 0x91, 0xbf, 0x84, 0x34,
	0x7e, 0x8e, 0xde, 0xcf, 0x24, 0x88, 0xc9, 0xad, 0xed, 0x3c, 0x78, 0xa3, 0x33, 0x12, 0xd5, 0xab,
	0x50, 0x0d, 0x9c, 0x31, 0x33, 0x03, 0xd7, 0xfc, 0xc1, 0x72, 0x82, 0xb5, 0x5a, 0x68, 0x38, 0x63,
	0x66, 0xb8, 0x67, 0x96, 0x13, 0x50, 0x08, 0x62, 0xbb, 0x79, 0x08, 0x79, 0x71, 0x47, 0x31, 0x40,
	0xa1, 0x73, 0x6c, 0xa8, 0xcf, 0x09, 0xda, 0xc0, 0x18, 0x36, 0x07, 0x44, 0x53, 0x54, 0xed, 0x99,
	0xa9, 0x90, 0x13, 0x62, 0x10, 0x24, 0x71, 0xff, 0x67, 0x1d, 0xf5, 0x84, 0x28, 0x28, 0xd3, 0xfc,
	0x1c, 0xca, 0xf1, 0xdd, 0xc1, 0x25, 0xc8, 0x69, 0x7d, 0x8d, 0xd3, 0xca, 0x90, 0xef, 0x28, 0x0a,
	0x51, 0x90, 0x84, 0x2b, 0x50, 0x3c, 0x1d, 0x28, 0x1d, 0x83, 0x87, 0xf3, 0x0f, 0x4a, 0x7a, 0xfd,
	0xe7, 0x44, 0x41, 0x59, 0x5c, 0x85, 0x12, 0x25, 0x83, 0x93, 0xce, 0x39, 0x51, 0x50, 0xae, 0x79,
	0x00, 0xa5, 0xc5, 0x9e, 0xe2, 0x2d, 0xb8, 0x47, 0xb4, 0xe3, 0xbe, 0x38, 0xb6, 0xa3, 0x6b, 0x07,
	0x61, 0x22, 0x31, 0x34, 0xa0, 0x7d, 0xa3, 0x8f, 0xa4, 0xa6, 0x01, 0x70, 0xd3, 0x10, 0x7c, 0x1f,
	0x30, 0x4f, 0xbb, 0xaf, 0x99, 0xc6, 0xf9, 0x80, 0x98, 0x94, 0x0c, 0xfa, 0xd4, 0x40, 0x1b, 0xcb,
	0xb8, 0xaa, 0xe9, 0x84, 0x1a, 0x48, 0x5a, 0xc6, 0x07, 0xfd, 0x13, 0xf5, 0xf8, 0x1c, 0x65, 0x9a,
	0x5f, 0xc3, 0xf6, 0x5d, 0x0d, 0xc7, 0x8f, 0xa0, 0xae, 0x9f, 0x76, 0x75, 0xf2, 0xe5, 0x29, 0xd1,
	0x0c, 0x33, 0x49, 0x3d, 0xee, 0x6b, 0x86, 0xaa, 0x9d, 0xf2, 0xc2, 0xeb, 0xf0, 0xf0, 0x1f, 0x82,
	0xce, 0x3a, 0xaa, 0x81, 0xa4, 0xe6, 0xaf, 0x59, 0x80, 0x9b, 0x01, 0xe0, 0xb7, 0x60, 0xcb, 0x50,
	0x7b, 0xc4, 0x34, 0xfa, 0x22, 0xc0, 0x7c, 0x41, 0x68, 0x1f, 0x6d, 0xa4, 0xe0, 0xb3, 0x83, 0x9e,
	0x8e, 0xa4, 0x34, 0x2c, 0xf7, 0x74, 0x94, 0x49, 0xc3, 0x47, 0x3d, 0x1d, 0x65, 0x79, 0x81, 0x4b,
	0x22, 0xfb, 0x3d, 0x1d, 0xe5, 0xd2, 0xb8, 0xcc, 0xf1, 0x7c, 0x1a, 0x3f, 0xe4, 0x78, 0x21, 0x8d,
	0x7f, 0xc8, 0xf1, 0x62, 0x1a, 0x3f, 0xe2, 0x78, 0x09, 0xbf, 0x0d, 0xff, 0x5f, 0x3e, 0x97, 0x3b,
	0xca, 0x69, 0x87, 0x2c, 0x1c, 0x90, 0x76, 0x1c, 0x09, 0x47, 0x05, 0x6f, 0x03, 0x5a, 0x92, 0xd2,
	0x51, 0x35, 0x8d, 0xca, 0x3a, 0xba, 0x97, 0x46, 0x8f, 0x74, 0xb4, 0x79, 0x47, 0x27, 0xf7, 0x75,
	0xf4, 0xbf, 0x3b, 0x3a, 0xb9, 0xaf, 0x23, 0x94, 0x86, 0x9f, 0xec, 0xeb, 0x68, 0xeb, 0xa2, 0x20,
	0xfe, 0xfe, 0x1d, 0xfe, 0x1d, 0x00, 0x00, 0xff, 0xff, 0xff, 0x55, 0x78, 0x56, 0x5e, 0x0a, 0x00,
	0x00,
}
